{"version":3,"sources":["main.js","src/public/vendor/metaljs/src/core.js","src/public/vendor/metaljs/src/object/object.js","src/public/vendor/metaljs/src/disposable/Disposable.js","src/public/vendor/metaljs/src/events/EventHandle.js","src/public/vendor/metaljs/src/events/DomEventHandle.js","src/public/vendor/metaljs/src/dom/dom.js","src/public/vendor/metal-position/src/math.js","src/public/vendor/metal-position/src/position.js","src/public/vendor/metaljs/src/array/array.js","src/public/vendor/metaljs/src/events/EventEmitter.js","src/public/vendor/metaljs/src/async/async.js","src/public/vendor/metaljs/src/attribute/Attribute.js","src/public/vendor/metaljs/src/events/EventEmitterProxy.js","lib/scripts/Affix.js","src/public/vendor/metaljs/src/dom/features.js","src/public/vendor/metaljs/src/string/string.js","src/public/vendor/metaljs/src/html/html.js","src/public/vendor/metaljs/src/events/EventHandler.js","src/public/vendor/metaljs/src/component/Component.js","src/public/vendor/metaljs/src/component/ComponentRegistry.js","src/public/vendor/metaljs/src/component/ComponentCollector.js","src/public/vendor/metaljs/src/component/EventsCollector.js","src/public/vendor/metaljs/src/soy/SoyComponent.soy.js","src/public/vendor/metaljs/src/soy/SoyComponent.js","lib/scripts/Component.js","lib/scripts/Modal.soy.js","lib/scripts/Modal.js","lib/scripts/Position.js","lib/scripts/Scrollspy.js","lib/scripts/Tooltip.soy.js","lib/scripts/Tooltip.js","lib/scripts/TooltipMenu.soy.js","lib/scripts/TooltipMenu.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function() {\n    \"use strict\";\n    'use strict';\n\n    /**\n     * A collection of core utility functions.\n     * @const\n     */\n    class src$public$vendor$metaljs$src$core$$core {\n        /**\n         * When defining a class Foo with an abstract method bar(), you can do:\n         * Foo.prototype.bar = core.abstractMethod\n         *\n         * Now if a subclass of Foo fails to override bar(), an error will be thrown\n         * when bar() is invoked.\n         *\n         * @type {!Function}\n         * @throws {Error} when invoked to indicate the method should be overridden.\n         */\n        static abstractMethod() {\n            throw Error('Unimplemented abstract method');\n        }\n\n        /**\n         * Loops constructor super classes collecting its properties values. If\n         * property is not available on the super class `undefined` will be\n         * collected as value for the class hierarchy position.\n         * @param {!function()} constructor Class constructor.\n         * @param {string} propertyName Property name to be collected.\n         * @return {Array.<*>} Array of collected values.\n         * TODO(*): Rethink superclass loop.\n         */\n        static collectSuperClassesProperty(constructor, propertyName) {\n            var propertyValues = [constructor[propertyName]];\n            while (constructor.__proto__ && !constructor.__proto__.isPrototypeOf(Function)) {\n                constructor = constructor.__proto__;\n                propertyValues.push(constructor[propertyName]);\n            }\n            return propertyValues;\n        }\n\n        /**\n         * Gets an unique id. If `opt_object` argument is passed, the object is\n         * mutated with an unique id. Consecutive calls with the same object\n         * reference won't mutate the object again, instead the current object uid\n         * returns. See {@link core.UID_PROPERTY}.\n         * @type {opt_object} Optional object to be mutated with the uid. If not\n         *     specified this method only returns the uid.\n         * @throws {Error} when invoked to indicate the method should be overridden.\n         */\n        static getUid(opt_object) {\n            if (opt_object) {\n                return opt_object[src$public$vendor$metaljs$src$core$$core.UID_PROPERTY] ||\n                    (opt_object[src$public$vendor$metaljs$src$core$$core.UID_PROPERTY] = src$public$vendor$metaljs$src$core$$core.uniqueIdCounter_++);\n            }\n            return src$public$vendor$metaljs$src$core$$core.uniqueIdCounter_++;\n        }\n\n        /**\n         * The identity function. Returns its first argument.\n         * @param {*=} opt_returnValue The single value that will be returned.\n         * @return {?} The first argument.\n         */\n        static identityFunction(opt_returnValue) {\n            return opt_returnValue;\n        }\n\n        /**\n         * Returns true if the specified value is a boolean.\n         * @param {?} val Variable to test.\n         * @return {boolean} Whether variable is boolean.\n         */\n        static isBoolean(val) {\n            return typeof val === 'boolean';\n        }\n\n        /**\n         * Returns true if the specified value is not undefined.\n         * @param {?} val Variable to test.\n         * @return {boolean} Whether variable is defined.\n         */\n        static isDef(val) {\n            return val !== undefined;\n        }\n\n        /**\n         * Returns true if value is not undefined or null.\n         * @param {*} val\n         * @return {Boolean}\n         */\n        static isDefAndNotNull(val) {\n            return src$public$vendor$metaljs$src$core$$core.isDef(val) && !src$public$vendor$metaljs$src$core$$core.isNull(val);\n        }\n\n        /**\n         * Returns true if value is a document.\n         * @param {*} val\n         * @return {Boolean}\n         */\n        static isDocument(val) {\n            return val && typeof val === 'object' && val.nodeType === 9;\n        }\n\n        /**\n         * Returns true if value is a dom element.\n         * @param {*} val\n         * @return {Boolean}\n         */\n        static isElement(val) {\n            return val && typeof val === 'object' && val.nodeType === 1;\n        }\n\n        /**\n         * Returns true if the specified value is a function.\n         * @param {?} val Variable to test.\n         * @return {boolean} Whether variable is a function.\n         */\n        static isFunction(val) {\n            return typeof val === 'function';\n        }\n\n        /**\n         * Returns true if value is null.\n         * @param {*} val\n         * @return {Boolean}\n         */\n        static isNull(val) {\n            return val === null;\n        }\n\n        /**\n         * Returns true if the specified value is a number.\n         * @param {?} val Variable to test.\n         * @return {boolean} Whether variable is a number.\n         */\n        static isNumber(val) {\n            return typeof val === 'number';\n        }\n\n        /**\n         * Returns true if value is a window.\n         * @param {*} val\n         * @return {Boolean}\n         */\n        static isWindow(val) {\n            return val !== null && val === val.window;\n        }\n\n        /**\n         * Returns true if the specified value is an object. This includes arrays\n         * and functions.\n         * @param {?} val Variable to test.\n         * @return {boolean} Whether variable is an object.\n         */\n        static isObject(val) {\n            var type = typeof val;\n            return type === 'object' && val !== null || type === 'function';\n        }\n\n        /**\n         * Returns true if value is a string.\n         * @param {*} val\n         * @return {Boolean}\n         */\n        static isString(val) {\n            return typeof val === 'string';\n        }\n\n        /**\n         * Merges the values of a static property a class with the values of that\n         * property for all its super classes, and stores it as a new static\n         * property of that class. If the static property already existed, it won't\n         * be recalculated.\n         * @param {!function()} constructor Class constructor.\n         * @param {string} propertyName Property name to be collected.\n         * @param {function(*, *):*=} opt_mergeFn Function that receives an array filled\n         *   with the values of the property for the current class and all its super classes.\n         *   Should return the merged value to be stored on the current class.\n         * @return {*} The value of the merged property.\n         */\n        static mergeSuperClassesProperty(constructor, propertyName, opt_mergeFn) {\n            var mergedName = propertyName + '_MERGED';\n            if (constructor.hasOwnProperty(mergedName)) {\n                return constructor[mergedName];\n            }\n\n            var merged = src$public$vendor$metaljs$src$core$$core.collectSuperClassesProperty(constructor, propertyName);\n            if (opt_mergeFn) {\n                merged = opt_mergeFn(merged);\n            }\n            constructor[mergedName] = merged;\n            return constructor[mergedName];\n        }\n\n        /**\n         * Null function used for default values of callbacks, etc.\n         * @return {void} Nothing.\n         */\n        static nullFunction() {\n\n        }\n    }\n\n    /**\n     * Unique id property prefix.\n     * @type {String}\n     * @protected\n     */\n    src$public$vendor$metaljs$src$core$$core.UID_PROPERTY = 'core_' + ((Math.random() * 1e9) >>> 0);\n\n    /**\n     * Counter for unique id.\n     * @type {Number}\n     * @private\n     */\n    src$public$vendor$metaljs$src$core$$core.uniqueIdCounter_ = 1;\n\n    var src$public$vendor$metaljs$src$core$$default = src$public$vendor$metaljs$src$core$$core;\n    'use strict';\n\n    class src$public$vendor$metaljs$src$object$object$$object {\n        /**\n         * Copies all the members of a source object to a target object.\n         * @param {Object} target Target object.\n         * @param {...Object} var_args The objects from which values will be copied.\n         * @return {Object} Returns the target object reference.\n         */\n        static mixin(target) {\n            var key, source;\n            for (var i = 1; i < arguments.length; i++) {\n                source = arguments[i];\n                for (key in source) {\n                    target[key] = source[key];\n                }\n            }\n            return target;\n        }\n    }\n\n    var src$public$vendor$metaljs$src$object$object$$default = src$public$vendor$metaljs$src$object$object$$object;\n    'use strict';\n\n    /**\n     * Disposable utility. When inherited provides the `dispose` function to its\n     * subclass, which is responsible for disposing of any object references\n     * when an instance won't be used anymore. Subclasses should override\n     * `disposeInternal` to implement any specific disposing logic.\n     * @constructor\n     */\n    class src$public$vendor$metaljs$src$disposable$Disposable$$Disposable {\n        constructor() {\n            /**\n             * Flag indicating if this instance has already been disposed.\n             * @type {boolean}\n             * @protected\n             */\n            this.disposed_ = false;\n        }\n\n        /**\n         * Disposes of this instance's object references. Calls `disposeInternal`.\n         */\n        dispose() {\n            if (!this.disposed_) {\n                this.disposeInternal();\n                this.disposed_ = true;\n            }\n        }\n\n        /**\n         * Subclasses should override this method to implement any specific\n         * disposing logic (like clearing references and calling `dispose` on other\n         * disposables).\n         */\n        disposeInternal() {\n        }\n\n        /**\n         * Checks if this instance has already been disposed.\n         * @return {boolean}\n         */\n        isDisposed() {\n            return this.disposed_;\n        }\n    }\n\n    var src$public$vendor$metaljs$src$disposable$Disposable$$default = src$public$vendor$metaljs$src$disposable$Disposable$$Disposable;\n    'use strict';\n\n    /**\n     * EventHandle utility. Holds information about an event subscription, and\n     * allows removing them easily.\n     * EventHandle is a Disposable, but it's important to note that the\n     * EventEmitter that created it is not the one responsible for disposing it.\n     * That responsibility is for the code that holds a reference to it.\n     * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n     * @param {string} event The name of the event that was subscribed to.\n     * @param {!Function} listener The listener subscribed to the event.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class src$public$vendor$metaljs$src$events$EventHandle$$EventHandle extends src$public$vendor$metaljs$src$disposable$Disposable$$default {\n        constructor(emitter, event, listener) {\n            /**\n             * The EventEmitter instance that the event was subscribed to.\n             * @type {EventEmitter}\n             * @protected\n             */\n            this.emitter_ = emitter;\n\n            /**\n             * The name of the event that was subscribed to.\n             * @type {string}\n             * @protected\n             */\n            this.event_ = event;\n\n            /**\n             * The listener subscribed to the event.\n             * @type {Function}\n             * @protected\n             */\n            this.listener_ = listener;\n        }\n\n        /**\n         * Disposes of this instance's object references.\n         * @override\n         */\n        disposeInternal() {\n            this.removeListener();\n            this.emitter_ = null;\n            this.listener_ = null;\n        }\n\n        /**\n         * Removes the listener subscription from the emitter.\n         */\n        removeListener() {\n            if (!this.emitter_.isDisposed()) {\n                this.emitter_.removeListener(this.event_, this.listener_);\n            }\n        }\n    }\n\n    var src$public$vendor$metaljs$src$events$EventHandle$$default = src$public$vendor$metaljs$src$events$EventHandle$$EventHandle;\n    'use strict';\n\n    /**\n     * This is a special EventHandle, that is responsible for dom events, instead\n     * of EventEmitter events.\n     * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n     * @param {string} event The name of the event that was subscribed to.\n     * @param {!Function} listener The listener subscribed to the event.\n     * @constructor\n     * @extends {EventHandle}\n     */\n    class src$public$vendor$metaljs$src$events$DomEventHandle$$DomEventHandle extends src$public$vendor$metaljs$src$events$EventHandle$$default {\n        constructor(emitter, event, listener) {\n            super(emitter, event, listener);\n        }\n\n        /**\n         * @inheritDoc\n         */\n        removeListener() {\n            this.emitter_.removeEventListener(this.event_, this.listener_);\n        }\n    }\n\n    var src$public$vendor$metaljs$src$events$DomEventHandle$$default = src$public$vendor$metaljs$src$events$DomEventHandle$$DomEventHandle;\n    'use strict';\n\n    class src$public$vendor$metaljs$src$dom$dom$$dom {\n        /**\n         * Adds the requested CSS classes to an element.\n         * @param {!Element} element The element to add CSS classes to.\n         * @param {!Array<string>} classes CSS classes to add.\n         */\n        static addClasses(element, classes) {\n            if ('classList' in element) {\n                src$public$vendor$metaljs$src$dom$dom$$dom.addClassesWithNative_(element, classes);\n            } else {\n                src$public$vendor$metaljs$src$dom$dom$$dom.addClassesWithoutNative_(element, classes);\n            }\n        }\n\n        /**\n         * Adds the requested CSS classes to an element using classList.\n         * @param {!Element} element The element to add CSS classes to.\n         * @param {!Array<string>} classes CSS classes to add.\n         * @protected\n         */\n        static addClassesWithNative_(element, classes) {\n            classes.forEach(function(className) {\n                element.classList.add(className);\n            });\n        }\n\n        /**\n         * Adds the requested CSS classes to an element without using classList.\n         * @param {!Element} element The element to add CSS classes to.\n         * @param {!Array<string>} classes CSS classes to add.\n         * @protected\n         */\n        static addClassesWithoutNative_(element, classes) {\n            var elementClassName = ' ' + element.className + ' ';\n            var classesToAppend = '';\n\n            for (var i = 0; i < classes.length; i++) {\n                var className = classes[i];\n\n                if (elementClassName.indexOf(' ' + className + ' ') === -1) {\n                    classesToAppend += ' ' + className;\n                }\n            }\n\n            if (classesToAppend) {\n                element.className = element.className + classesToAppend;\n            }\n        }\n\n        /**\n         * Appends a child node with text or other nodes to a parent node. If\n         * child is a HTML string it will be automatically converted to a document\n         * fragment before appending it to the parent.\n         * @param {!Element} parent The node to append nodes to.\n         * @param {!Element|String} child The thing to append to the parent.\n         * @return {!Element} The appended child.\n         */\n        static append(parent, child) {\n            if (src$public$vendor$metaljs$src$core$$default.isString(child)) {\n                child = src$public$vendor$metaljs$src$dom$dom$$dom.buildFragment(child);\n            }\n            return parent.appendChild(child);\n        }\n\n        /**\n         * Helper for converting a HTML string into a document fragment.\n         * @param {string} htmlString The HTML string to convert.\n         * @return {!Element} The resulting document fragment.\n         */\n        static buildFragment(htmlString) {\n            var tempDiv = document.createElement('div');\n            tempDiv.innerHTML = '<br>' + htmlString;\n            tempDiv.removeChild(tempDiv.firstChild);\n\n            var fragment = document.createDocumentFragment();\n            while (tempDiv.firstChild) {\n                fragment.appendChild(tempDiv.firstChild);\n            }\n            return fragment;\n        }\n\n        /**\n         * Listens to the specified event on the given DOM element, but only calls the\n         * callback with the event when it triggered by elements that match the given\n         * selector.\n         * @param {!Element} element The container DOM element to listen to the event on.\n         * @param {string} eventName The name of the event to listen to.\n         * @param {string} selector The selector that matches the child elements that\n         *   the event should be triggered for.\n         * @param {!function(!Object)} callback Function to be called when the event is\n         *   triggered. It will receive the normalized event object.\n         * @return {!DomEventHandle} Can be used to remove the listener.\n         */\n        static delegate(element, eventName, selector, callback) {\n            return src$public$vendor$metaljs$src$dom$dom$$dom.on(\n                element,\n                eventName,\n                src$public$vendor$metaljs$src$dom$dom$$dom.handleDelegateEvent_.bind(null, selector, callback)\n            );\n        }\n\n        /**\n         * Inserts node in document as last element.\n         * @param {Element} node Element to remove children from.\n         */\n        static enterDocument(node) {\n            src$public$vendor$metaljs$src$dom$dom$$dom.append(document.body, node);\n        }\n\n        /**\n         * Removes node from document.\n         * @param {Element} node Element to remove children from.\n         */\n        static exitDocument(node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        }\n\n        /**\n         * This is called when an event is triggered by a delegate listener (see\n         * `dom.delegate` for more details).\n         * @param {string} selector The selector or element that matches the child\n         *   elements that the event should be triggered for.\n         * @param {!function(!Object)} callback Function to be called when the event\n         *   is triggered. It will receive the normalized event object.\n         * @param {!Event} event The event payload.\n         * @return {boolean} False if at least one of the triggered callbacks returns\n         *   false, or true otherwise.\n         */\n        static handleDelegateEvent_(selector, callback, event) {\n            src$public$vendor$metaljs$src$dom$dom$$dom.normalizeDelegateEvent_(event);\n\n            var currentElement = event.target;\n            var returnValue = true;\n\n            while (currentElement && !event.stopped) {\n                if (src$public$vendor$metaljs$src$core$$default.isString(selector) && src$public$vendor$metaljs$src$dom$dom$$dom.match(currentElement, selector)) {\n                    event.delegateTarget = currentElement;\n                    returnValue &= callback(event);\n                }\n                currentElement = currentElement.parentNode;\n            }\n\n            return returnValue;\n        }\n\n        /**\n         * Checks if the given element has the requested css class.\n         * @param {!Element} element\n         * @param {string} className\n         * @return {boolean}\n         */\n        static hasClass(element, className) {\n            if ('classList' in element) {\n                return src$public$vendor$metaljs$src$dom$dom$$dom.hasClassWithNative_(element, className);\n            } else {\n                return src$public$vendor$metaljs$src$dom$dom$$dom.hasClassWithoutNative_(element, className);\n            }\n        }\n\n        /**\n         * Checks if the given element has the requested css class using classList.\n         * @param {!Element} element\n         * @param {string} className\n         * @return {boolean}\n         * @protected\n         */\n        static hasClassWithNative_(element, className) {\n            return element.classList.contains(className);\n        }\n\n        /**\n         * Checks if the given element has the requested css class without using classList.\n         * @param {!Element} element\n         * @param {string} className\n         * @return {boolean}\n         * @protected\n         */\n        static hasClassWithoutNative_(element, className) {\n            return (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n        }\n\n        /**\n         * Check if an element matches a given selector.\n         * @param {Element} element\n         * @param {string} selector\n         * @return {boolean}\n         */\n        static match(element, selector) {\n            if (!element || element.nodeType !== 1) {\n                return false;\n            }\n\n            var p = Element.prototype;\n            var m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n            if (m) {\n                return m.call(element, selector);\n            }\n\n            return src$public$vendor$metaljs$src$dom$dom$$dom.matchFallback_(element, selector);\n        }\n\n        /**\n         * Check if an element matches a given selector, using an internal implementation\n         * instead of calling existing javascript functions.\n         * @param {Element} element\n         * @param {string} selector\n         * @return {boolean}\n         * @protected\n         */\n        static matchFallback_(element, selector) {\n            var nodes = document.querySelectorAll(selector, element.parentNode);\n            for (var i = 0; i < nodes.length; ++i) {\n                if (nodes[i] === element) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        /**\n         * Normalizes the event payload for delegate listeners.\n         * @param {!Event} event\n         */\n        static normalizeDelegateEvent_(event) {\n            event.stopPropagation = src$public$vendor$metaljs$src$dom$dom$$dom.stopPropagation_;\n            event.stopImmediatePropagation = src$public$vendor$metaljs$src$dom$dom$$dom.stopImmediatePropagation_;\n        }\n\n        /**\n         * Listens to the specified event on the given DOM element. This function normalizes\n         * DOM event payloads and functions so they'll work the same way on all supported\n         * browsers.\n         * @param {!Element} element The DOM element to listen to the event on.\n         * @param {string} eventName The name of the event to listen to.\n         * @param {!function(!Object)} callback Function to be called when the event is\n         *   triggered. It will receive the normalized event object.\n         * @return {!DomEventHandle} Can be used to remove the listener.\n         */\n        static on(element, eventName, callback) {\n            element.addEventListener(eventName, callback);\n            return new src$public$vendor$metaljs$src$events$DomEventHandle$$default(element, eventName, callback);\n        }\n\n        /**\n         * Removes all the child nodes on a DOM node.\n         * @param {Element} node Element to remove children from.\n         */\n        static removeChildren(node) {\n            var child;\n            while ((child = node.firstChild)) {\n                node.removeChild(child);\n            }\n        }\n\n        /**\n         * Removes the requested CSS classes from an element.\n         * @param {!Element} element The element to remove CSS classes from.\n         * @param {!Array<string>} classes CSS classes to remove.\n         */\n        static removeClasses(element, classes) {\n            if ('classList' in element) {\n                src$public$vendor$metaljs$src$dom$dom$$dom.removeClassesWithNative_(element, classes);\n            } else {\n                src$public$vendor$metaljs$src$dom$dom$$dom.removeClassesWithoutNative_(element, classes);\n            }\n        }\n\n        /**\n         * Removes the requested CSS classes from an element using classList.\n         * @param {!Element} element The element to remove CSS classes from.\n         * @param {!Array<string>} classes CSS classes to remove.\n         * @protected\n         */\n        static removeClassesWithNative_(element, classes) {\n            classes.forEach(function(className) {\n                element.classList.remove(className);\n            });\n        }\n\n        /**\n         * Removes the requested CSS classes from an element without using classList.\n         * @param {!Element} element The element to remove CSS classes from.\n         * @param {!Array<string>} classes CSS classes to remove.\n         * @protected\n         */\n        static removeClassesWithoutNative_(element, classes) {\n            var elementClassName = ' ' + element.className + ' ';\n\n            for (var i = 0; i < classes.length; i++) {\n                elementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n            }\n\n            element.className = elementClassName.trim();\n        }\n\n        /**\n         * The function that replaces `stopImmediatePropagation_` for events.\n         * @protected\n         */\n        static stopImmediatePropagation_() {\n            this.stopped = true;\n            Event.prototype.stopImmediatePropagation.call(this);\n        }\n\n        /**\n         * The function that replaces `stopPropagation` for events.\n         * @protected\n         */\n        static stopPropagation_() {\n            this.stopped = true;\n            Event.prototype.stopPropagation.call(this);\n        }\n\n        /**\n         * Checks if the given element supports the given event type.\n         * @param {!Element|string} element The DOM element or element tag name to check.\n         * @param {string} eventName The name of the event to check.\n         * @return {boolean}\n         */\n        static supportsEvent(element, eventName) {\n            if (src$public$vendor$metaljs$src$core$$default.isString(element)) {\n                if (!src$public$vendor$metaljs$src$dom$dom$$elementsByTag[element]) {\n                    src$public$vendor$metaljs$src$dom$dom$$elementsByTag[element] = document.createElement(element);\n                }\n                element = src$public$vendor$metaljs$src$dom$dom$$elementsByTag[element];\n            }\n            return 'on' + eventName in element;\n        }\n\n        /**\n         * Converts the given argument to a DOM element. Strings are assumed to\n         * be selectors, and so a matched element will be returned. If the arg\n         * is already a DOM element it will be the return value.\n         * @param {string|Element|Document} selectorOrElement\n         * @return {Element} The converted element, or null if none was found.\n         */\n        static toElement(selectorOrElement) {\n            if (src$public$vendor$metaljs$src$core$$default.isElement(selectorOrElement) || src$public$vendor$metaljs$src$core$$default.isDocument(selectorOrElement)) {\n                return selectorOrElement;\n            } else if (src$public$vendor$metaljs$src$core$$default.isString(selectorOrElement)) {\n                if (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n                    return document.getElementById(selectorOrElement.substr(1));\n                } else {\n                    return document.querySelector(selectorOrElement);\n                }\n            } else {\n                return null;\n            }\n        }\n\n        /**\n         * Triggers the specified event on the given element.\n         * NOTE: This should mostly be used for testing, not on real code.\n         * @param {!Element} element The node that should trigger the event.\n         * @param {string} eventName The name of the event to be triggred.\n         * @param {Object=} opt_eventObj An object with data that should be on the\n         *   triggered event's payload.\n         */\n        static triggerEvent(element, eventName, opt_eventObj) {\n            var eventObj = document.createEvent('HTMLEvents');\n            eventObj.initEvent(eventName, true, true);\n            src$public$vendor$metaljs$src$object$object$$default.mixin(eventObj, opt_eventObj);\n            element.dispatchEvent(eventObj);\n        }\n    }\n\n    var src$public$vendor$metaljs$src$dom$dom$$elementsByTag = {};\n\n    var src$public$vendor$metaljs$src$dom$dom$$default = src$public$vendor$metaljs$src$dom$dom$$dom;\n    class src$public$vendor$metal$position$src$math$$math {\n      /**\n         * Tests if a rectangle intersects with another.\n         *\n         * <pre>\n         *  x0y0 --------       x2y2 --------\n         *      |       |           |       |\n         *      -------- x1y1       -------- x3y3\n         * </pre>\n         *\n         * Note that coordinates starts from top to down (y), left to right (x):\n         *\n         * <pre>\n         *      ------> (x)\n         *      |\n         *      |\n         *     (y)\n         * </pre>\n         *\n         * @param {number} x0 Horizontal coordinate of P0.\n         * @param {number} y0 Vertical coordinate of P0.\n         * @param {number} x1 Horizontal coordinate of P1.\n         * @param {number} y1 Vertical coordinate of P1.\n         * @param {number} x2 Horizontal coordinate of P2.\n         * @param {number} y2 Vertical coordinate of P2.\n         * @param {number} x3 Horizontal coordinate of P3.\n         * @param {number} y3 Vertical coordinate of P3.\n         * @return {boolean}\n         */\n        static intersectRect(x0, y0, x1, y1, x2, y2, x3, y3) {\n          return !(x2 > x1 || x3 < x0 || y2 > y1 || y3 < y0);\n        }\n    }\n\n    var src$public$vendor$metal$position$src$math$$default = src$public$vendor$metal$position$src$math$$math;\n\n    /**\n     * Class with static methods responsible for doing browser position checks.\n     */\n    class src$public$vendor$metal$position$src$position$$position {\n      /**\n       * Gets the client height of the specified node. Scroll height is not\n       * included.\n       * @param {Element|Document|Window=} node\n       * @return {Number}\n       */\n      static getClientHeight(node) {\n        return this.getClientSize_(node, 'Height');\n      }\n\n      /**\n       * Gets the client height or width of the specified node. Scroll height is\n       * not included.\n       * @param {Element|Document|Window=} node\n       * @param {string} `Width` or `Height` property.\n       * @return {Number}\n       * @protected\n       */\n      static getClientSize_(node, prop) {\n        var el = node;\n        if (src$public$vendor$metaljs$src$core$$default.isWindow(node)) {\n          el = node.document.documentElement;\n        }\n        if (src$public$vendor$metaljs$src$core$$default.isDocument(node)) {\n          el = node.documentElement;\n        }\n        return el['client' + prop];\n      }\n\n      /**\n       * Gets the client width of the specified node. Scroll width is not\n       * included.\n       * @param {Element|Document|Window=} node\n       * @return {Number}\n       */\n      static getClientWidth(node) {\n        return this.getClientSize_(node, 'Width');\n      }\n\n      /**\n       * Gets the region of the element, document or window.\n       * @param {Element|Document|Window=} opt_element Optional element to test.\n       * @return {!DOMRect} The returned value is a simulated DOMRect object which\n       *     is the union of the rectangles returned by getClientRects() for the\n       *     element, i.e., the CSS border-boxes associated with the element.\n       * @protected\n       */\n      static getDocumentRegion_(opt_element) {\n        var height = this.getHeight(opt_element);\n        var width = this.getWidth(opt_element);\n        return this.makeRegion(height, height, 0, width, 0, width);\n      }\n\n      /**\n       * Gets the height of the specified node. Scroll height is included.\n       * @param {Element|Document|Window=} node\n       * @return {Number}\n       */\n      static getHeight(node) {\n        return this.getSize_(node, 'Height');\n      }\n\n      /**\n       * Gets the size of an element and its position relative to the viewport.\n       * @param {!Document|Element|Window} node\n       * @return {!DOMRect} The returned value is a DOMRect object which is the\n       *     union of the rectangles returned by getClientRects() for the element,\n       *     i.e., the CSS border-boxes associated with the element.\n       */\n      static getRegion(node) {\n        if (src$public$vendor$metaljs$src$core$$default.isDocument(node) || src$public$vendor$metaljs$src$core$$default.isWindow(node)) {\n          return this.getDocumentRegion_(node);\n        }\n        return this.makeRegionFromBoundingRect_(node.getBoundingClientRect());\n      }\n\n      /**\n       * Gets the scroll left position of the specified node.\n       * @param {Element|Document|Window=} node\n       * @return {Number}\n       */\n      static getScrollLeft(node) {\n        if (src$public$vendor$metaljs$src$core$$default.isWindow(node)) {\n          return node.pageXOffset;\n        }\n        if (src$public$vendor$metaljs$src$core$$default.isDocument(node)) {\n          return node.defaultView.pageXOffset;\n        }\n        return node.scrollLeft;\n      }\n\n      /**\n       * Gets the scroll top position of the specified node.\n       * @param {Element|Document|Window=} node\n       * @return {Number}\n       */\n      static getScrollTop(node) {\n        if (src$public$vendor$metaljs$src$core$$default.isWindow(node)) {\n          return node.pageYOffset;\n        }\n        if (src$public$vendor$metaljs$src$core$$default.isDocument(node)) {\n          return node.defaultView.pageYOffset;\n        }\n        return node.scrollTop;\n      }\n\n      /**\n       * Gets the height or width of the specified node. Scroll height is\n       * included.\n       * @param {Element|Document|Window=} node\n       * @param {string} `Width` or `Height` property.\n       * @return {Number}\n       * @protected\n       */\n      static getSize_(node, prop) {\n        if (src$public$vendor$metaljs$src$core$$default.isWindow(node)) {\n          return this.getClientSize_(node, prop);\n        }\n        if (src$public$vendor$metaljs$src$core$$default.isDocument(node)) {\n          var docEl = node.documentElement;\n          return Math.max(\n            node.body['scroll' + prop], docEl['scroll' + prop],\n            node.body['offset' + prop], docEl['offset' + prop], docEl['client' + prop]);\n        }\n        return Math.max(node['client' + prop], node['scroll' + prop], node['offset' + prop]);\n      }\n\n      /**\n       * Gets the width of the specified node. Scroll width is included.\n       * @param {Element|Document|Window=} node\n       * @return {Number}\n       */\n      static getWidth(node) {\n        return this.getSize_(node, 'Width');\n      }\n\n      /**\n       * Tests if a region intersects with another.\n       * @param {DOMRect} r1\n       * @param {DOMRect} r2\n       * @return {boolean}\n       */\n      static intersectRegion(r1, r2) {\n        return src$public$vendor$metal$position$src$math$$default.intersectRect(\n          r1.top, r1.left, r1.bottom, r1.right,\n          r2.top, r2.left, r2.bottom, r2.right);\n      }\n\n      /**\n       * Tests if a region is inside another.\n       * @param {DOMRect} r1\n       * @param {DOMRect} r2\n       * @return {boolean}\n       */\n      static insideRegion(r1, r2) {\n        return (r2.top >= r1.top) && (r2.bottom <= r1.bottom) &&\n                  (r2.right <= r1.right) && (r2.left >= r1.left);\n      }\n\n      /**\n       * Tests if a region is inside viewport region.\n       * @param {DOMRect} region\n       * @return {boolean}\n       */\n      static insideViewport(region) {\n        return this.insideRegion(this.getRegion(window), region);\n      }\n\n      /**\n       * Computes the intersection region between two regions.\n       * @param {DOMRect} r1\n       * @param {DOMRect} r2\n       * @return {?DOMRect} Intersection region or null if regions doesn't\n       *     intersects.\n       */\n      static intersection(r1, r2) {\n        if (!this.intersectRegion(r1, r2)) {\n          return null;\n        }\n        var bottom = Math.min(r1.bottom, r2.bottom);\n        var right = Math.min(r1.right, r2.right);\n        var left = Math.max(r1.left, r2.left);\n        var top = Math.max(r1.top, r2.top);\n        return this.makeRegion(bottom, bottom - top, left, right, top, right - left);\n      }\n\n      /**\n       * Makes a region object. It's a writable version of DOMRect.\n       * @param {Number} bottom\n       * @param {Number} height\n       * @param {Number} left\n       * @param {Number} right\n       * @param {Number} top\n       * @param {Number} width\n       * @return {!DOMRect} The returned value is a DOMRect object which is the\n       *     union of the rectangles returned by getClientRects() for the element,\n       *     i.e., the CSS border-boxes associated with the element.\n       */\n      static makeRegion(bottom, height, left, right, top, width) {\n        return {\n          bottom: bottom,\n          height: height,\n          left: left,\n          right: right,\n          top: top,\n          width: width\n        };\n      }\n\n      /**\n       * Makes a region from a DOMRect result from `getBoundingClientRect`.\n       * @param  {!DOMRect} The returned value is a DOMRect object which is the\n       *     union of the rectangles returned by getClientRects() for the element,\n       *     i.e., the CSS border-boxes associated with the element.\n       * @return {DOMRect} Writable version of DOMRect.\n       * @protected\n       */\n      static makeRegionFromBoundingRect_(rect) {\n        return this.makeRegion(rect.bottom, rect.height, rect.left, rect.right, rect.top, rect.width);\n      }\n    }\n\n    var src$public$vendor$metal$position$src$position$$default = src$public$vendor$metal$position$src$position$$position;\n    'use strict';\n\n    class src$public$vendor$metaljs$src$array$array$$array {\n        /**\n         * Checks if the given arrays have the same content.\n         * @param {!Array<*>} arr1\n         * @param {!Array<*>} arr2\n         * @return {boolean}\n         */\n        static equal(arr1, arr2) {\n            for (var i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) {\n                    return false;\n                }\n            }\n            return arr1.length === arr2.length;\n        }\n\n        /**\n         * Returns the first value in the given array that isn't undefined.\n         * @param {!Array} arr\n         * @return {*}\n         */\n        static firstDefinedValue(arr) {\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i] !== undefined) {\n                    return arr[i];\n                }\n            }\n        }\n\n        /**\n         * Transforms the input nested array to become flat.\n         * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n         * @param {Array.<*>} opt_output Optional output array.\n         * @return {Array.<*>} Flat array.\n         */\n        static flatten(arr, opt_output) {\n            var output = opt_output || [];\n            for (var i = 0; i < arr.length; i++) {\n                if (Array.isArray(arr[i])) {\n                    src$public$vendor$metaljs$src$array$array$$array.flatten(arr[i], output);\n                } else {\n                    output.push(arr[i]);\n                }\n            }\n            return output;\n        }\n\n        /**\n         * Removes the first occurrence of a particular value from an array.\n         * @param {Array.<T>} arr Array from which to remove value.\n         * @param {T} obj Object to remove.\n         * @return {boolean} True if an element was removed.\n         * @template T\n         */\n         static remove(arr, obj) {\n            var i = arr.indexOf(obj);\n            var rv;\n            if ( (rv = i >= 0) ) {\n                src$public$vendor$metaljs$src$array$array$$array.removeAt(arr, i);\n            }\n            return rv;\n        }\n\n        /**\n         * Removes from an array the element at index i\n         * @param {Array} arr Array or array like object from which to remove value.\n         * @param {number} i The index to remove.\n         * @return {boolean} True if an element was removed.\n         */\n        static removeAt(arr, i) {\n            return Array.prototype.splice.call(arr, i, 1).length === 1;\n        }\n    }\n\n    var src$public$vendor$metaljs$src$array$array$$default = src$public$vendor$metaljs$src$array$array$$array;\n    'use strict';\n\n    /**\n     * EventEmitter utility.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class src$public$vendor$metaljs$src$events$EventEmitter$$EventEmitter extends src$public$vendor$metaljs$src$disposable$Disposable$$default {\n        constructor() {\n            /**\n             * Holds event listeners scoped by event type.\n             * @type {!Object<string, !Array<!function()>>}\n             * @protected\n             */\n            this.events_ = [];\n\n            /**\n             * The maximum number of listeners allowed for each event type. If the number\n             * becomes higher than the max, a warning will be issued.\n             * @type {number}\n             * @protected\n             */\n            this.maxListeners_ = 10;\n\n            /**\n             * Configuration option which determines if an event facade should be sent\n             * as a param of listeners when emitting events. If set to true, the facade\n             * will be passed as the first argument of the listener.\n             * @type {boolean}\n             * @protected\n             */\n            this.shouldUseFacade_ = false;\n        }\n\n        /**\n         * Adds a listener to the end of the listeners array for the specified events.\n         * @param {!(Array|string)} events\n         * @param {!Function} listener\n         * @return {!EventHandle} Can be used to remove the listener.\n         */\n        addListener(events, listener) {\n            this.validateListener_(listener);\n\n            events = this.normalizeEvents_(events);\n            for (var i = 0; i < events.length; i++) {\n                this.addSingleListener_(events[i], listener);\n            }\n\n            return new src$public$vendor$metaljs$src$events$EventHandle$$default(this, events, listener);\n        }\n\n        /**\n         * Adds a listener to the end of the listeners array for a single event.\n         * @param {string} event\n         * @param {!Function} listener\n         * @param {Function=} opt_origin The original function that was added as a\n         *   listener, if there is any.\n         * @protected\n         */\n        addSingleListener_(event, listener, opt_origin) {\n            this.emit('newListener', event, listener);\n\n            if (!this.events_[event]) {\n                this.events_[event] = [];\n            }\n            this.events_[event].push({\n                fn: listener,\n                origin: opt_origin\n            });\n\n            var listeners = this.events_[event];\n            if (listeners.length > this.maxListeners_ && !listeners.warned) {\n                console.warn(\n                    'Possible EventEmitter memory leak detected. %d listeners added ' +\n                    'for event %s. Use emitter.setMaxListeners() to increase limit.',\n                    listeners.length,\n                    event\n                );\n                listeners.warned = true;\n            }\n        }\n\n        /**\n         * Disposes of this instance's object references.\n         * @override\n         */\n        disposeInternal() {\n            this.events_ = [];\n        }\n\n        /**\n         * Execute each of the listeners in order with the supplied arguments.\n         * @param {string} event\n         * @param {*} opt_args [arg1], [arg2], [...]\n         * @return {boolean} Returns true if event had listeners, false otherwise.\n         */\n        emit(event) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var listened = false;\n            var listeners = this.listeners(event);\n\n            if (this.getShouldUseFacade()) {\n                var facade = {\n                    type: event\n                };\n                args = [facade].concat(args);\n            }\n\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].apply(this, args);\n                listened = true;\n            }\n\n            return listened;\n        }\n\n        /**\n         * Gets the configuration option which determines if an event facade should\n         * be sent as a param of listeners when emitting events. If set to true, the\n         * facade will be passed as the first argument of the listener.\n         * @return {boolean}\n         */\n        getShouldUseFacade() {\n            return this.shouldUseFacade_;\n        }\n\n        /**\n         * Returns an array of listeners for the specified event.\n         * @param {string} event\n         * @return {Array} Array of listeners.\n         */\n        listeners(event) {\n            return (this.events_[event] || []).map(function(listener) {\n                return listener.fn;\n            });\n        }\n\n        /**\n         * Adds a listener that will be invoked a fixed number of times for the\n         * events. After each event is triggered the specified amount of times, the\n         * listener is removed for it.\n         * @param {!(Array|string)} events\n         * @param {number} amount The amount of times this event should be listened\n         * to.\n         * @param {!Function} listener\n         * @return {!EventHandle} Can be used to remove the listener.\n         */\n        many(events, amount, listener) {\n            events = this.normalizeEvents_(events);\n            for (var i = 0; i < events.length; i++) {\n                this.many_(events[i], amount, listener);\n            }\n\n            return new src$public$vendor$metaljs$src$events$EventHandle$$default(this, events, listener);\n        }\n\n        /**\n         * Adds a listener that will be invoked a fixed number of times for a single\n         * event. After the event is triggered the specified amount of times, the\n         * listener is removed.\n         * @param {string} event\n         * @param {number} amount The amount of times this event should be listened\n         * to.\n         * @param {!Function} listener\n         * @protected\n         */\n        many_(event, amount, listener) {\n            var self = this;\n\n            if (amount <= 0) {\n                return;\n            }\n\n            function handlerInternal() {\n                if (--amount === 0) {\n                    self.removeListener(event, handlerInternal);\n                }\n                listener.apply(self, arguments);\n            }\n\n            self.addSingleListener_(event, handlerInternal, listener);\n        }\n\n        /**\n         * Checks if a listener object matches the given listener function. To match,\n         * it needs to either point to that listener or have it as its origin.\n         * @param {!Object} listenerObj\n         * @param {!Function} listener\n         * @return {boolean}\n         * @protected\n         */\n        matchesListener_(listenerObj, listener) {\n            return listenerObj.fn === listener ||\n                (listenerObj.origin && listenerObj.origin === listener);\n        }\n\n        /**\n         * Converts the parameter to an array if only one event is given.\n         * @param  {!(Array|string)} events\n         * @return {!Array}\n         * @protected\n         */\n        normalizeEvents_(events) {\n            return src$public$vendor$metaljs$src$core$$default.isString(events) ? [events] : events;\n        }\n\n        /**\n         * Removes a listener for the specified events.\n         * Caution: changes array indices in the listener array behind the listener.\n         * @param {!(Array|string)} events\n         * @param {!Function} listener\n         * @return {!Object} Returns emitter, so calls can be chained.\n         */\n        off(events, listener) {\n            this.validateListener_(listener);\n\n            events = this.normalizeEvents_(events);\n            for (var i = 0; i < events.length; i++) {\n                var listenerObjs = this.events_[events[i]] || [];\n                this.removeMatchingListenerObjs_(listenerObjs, listener);\n            }\n\n            return this;\n        }\n\n        /**\n         * Adds a listener to the end of the listeners array for the specified events.\n         * @param {!(Array|string)} events\n         * @param {!Function} listener\n         * @return {!EventHandle} Can be used to remove the listener.\n         */\n        on() {\n            return this.addListener.apply(this, arguments);\n        }\n\n        /**\n         * Adds a one time listener for the events. This listener is invoked only the\n         * next time each event is fired, after which it is removed.\n         * @param {!(Array|string)} events\n         * @param {!Function} listener\n         * @return {!EventHandle} Can be used to remove the listener.\n         */\n        once(events, listener) {\n            return this.many(events, 1, listener);\n        }\n\n        /**\n         * Removes all listeners, or those of the specified events. It's not a good\n         * idea to remove listeners that were added elsewhere in the code,\n         * especially when it's on an emitter that you didn't create.\n         * @param {(Array|string)=} opt_events\n         * @return {!Object} Returns emitter, so calls can be chained.\n         */\n        removeAllListeners(opt_events) {\n            if (opt_events) {\n                var events = this.normalizeEvents_(opt_events);\n                for (var i = 0; i < events.length; i++) {\n                    this.events_[events[i]] = null;\n                }\n            } else {\n                this.events_ = {};\n            }\n            return this;\n        }\n\n        /**\n         * Removes all listener objects from the given array that match the given\n         * listener function.\n         * @param {!Array.<Object>} listenerObjs\n         * @param {!Function} listener\n         * @protected\n         */\n        removeMatchingListenerObjs_(listenerObjs, listener) {\n            for (var i = listenerObjs.length - 1; i >= 0; i--) {\n                if (this.matchesListener_(listenerObjs[i], listener)) {\n                    listenerObjs.splice(i, 1);\n                }\n            }\n        }\n\n        /**\n         * Removes a listener for the specified events.\n         * Caution: changes array indices in the listener array behind the listener.\n         * @param {!(Array|string)} events\n         * @param {!Function} listener\n         * @return {!Object} Returns emitter, so calls can be chained.\n         */\n        removeListener() {\n            return this.off.apply(this, arguments);\n        }\n\n        /**\n         * By default EventEmitters will print a warning if more than 10 listeners\n         * are added for a particular event. This is a useful default which helps\n         * finding memory leaks. Obviously not all Emitters should be limited to 10.\n         * This function allows that to be increased. Set to zero for unlimited.\n         * @param {number} max The maximum number of listeners.\n         * @return {!Object} Returns emitter, so calls can be chained.\n         */\n        setMaxListeners(max) {\n            this.maxListeners_ = max;\n            return this;\n        }\n\n        /**\n         * Sets the configuration option which determines if an event facade should\n         * be sent as a param of listeners when emitting events. If set to true, the\n         * facade will be passed as the first argument of the listener.\n         * @param {boolean} shouldUseFacade\n         * @return {!Object} Returns emitter, so calls can be chained.\n         */\n        setShouldUseFacade(shouldUseFacade) {\n            this.shouldUseFacade_ = shouldUseFacade;\n            return this;\n        }\n\n        /**\n         * Checks if the given listener is valid, throwing an exception when it's not.\n         * @param  {*} listener\n         * @protected\n         */\n        validateListener_(listener) {\n            if (!src$public$vendor$metaljs$src$core$$default.isFunction(listener)) {\n                throw new TypeError('Listener must be a function');\n            }\n        }\n    }\n\n    var src$public$vendor$metaljs$src$events$EventEmitter$$default = src$public$vendor$metaljs$src$events$EventEmitter$$EventEmitter;\n\n    'use strict';\n\n    var src$public$vendor$metaljs$src$async$async$$async = {};\n\n\n    /**\n     * Throw an item without interrupting the current execution context.  For\n     * example, if processing a group of items in a loop, sometimes it is useful\n     * to report an error while still allowing the rest of the batch to be\n     * processed.\n     * @param {*} exception\n     */\n    src$public$vendor$metaljs$src$async$async$$async.throwException = function(exception) {\n        // Each throw needs to be in its own context.\n        src$public$vendor$metaljs$src$async$async$$async.nextTick(function() {\n            throw exception;\n        });\n    };\n\n\n    /**\n     * Fires the provided callback just before the current callstack unwinds, or as\n     * soon as possible after the current JS execution context.\n     * @param {function(this:THIS)} callback\n     * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n     *     the provided function.\n     * @template THIS\n     */\n    src$public$vendor$metaljs$src$async$async$$async.run = function(callback, opt_context) {\n        if (!src$public$vendor$metaljs$src$async$async$$async.run.workQueueScheduled_) {\n            // Nothing is currently scheduled, schedule it now.\n            src$public$vendor$metaljs$src$async$async$$async.nextTick(src$public$vendor$metaljs$src$async$async$$async.run.processWorkQueue);\n            src$public$vendor$metaljs$src$async$async$$async.run.workQueueScheduled_ = true;\n        }\n\n        src$public$vendor$metaljs$src$async$async$$async.run.workQueue_.push(\n            new src$public$vendor$metaljs$src$async$async$$async.run.WorkItem_(callback, opt_context));\n    };\n\n\n    /** @private {boolean} */\n    src$public$vendor$metaljs$src$async$async$$async.run.workQueueScheduled_ = false;\n\n\n    /** @private {!Array.<!async.run.WorkItem_>} */\n    src$public$vendor$metaljs$src$async$async$$async.run.workQueue_ = [];\n\n    /**\n     * Run any pending async.run work items. This function is not intended\n     * for general use, but for use by entry point handlers to run items ahead of\n     * async.nextTick.\n     */\n    src$public$vendor$metaljs$src$async$async$$async.run.processWorkQueue = function() {\n        // NOTE: additional work queue items may be pushed while processing.\n        while (src$public$vendor$metaljs$src$async$async$$async.run.workQueue_.length) {\n            // Don't let the work queue grow indefinitely.\n            var workItems = src$public$vendor$metaljs$src$async$async$$async.run.workQueue_;\n            src$public$vendor$metaljs$src$async$async$$async.run.workQueue_ = [];\n            for (var i = 0; i < workItems.length; i++) {\n                var workItem = workItems[i];\n                try {\n                    workItem.fn.call(workItem.scope);\n                } catch (e) {\n                    src$public$vendor$metaljs$src$async$async$$async.throwException(e);\n                }\n            }\n        }\n\n        // There are no more work items, reset the work queue.\n        src$public$vendor$metaljs$src$async$async$$async.run.workQueueScheduled_ = false;\n    };\n\n\n    /**\n     * @constructor\n     * @final\n     * @struct\n     * @private\n     *\n     * @param {function()} fn\n     * @param {Object|null|undefined} scope\n     */\n    src$public$vendor$metaljs$src$async$async$$async.run.WorkItem_ = function(fn, scope) {\n        /** @const */\n        this.fn = fn;\n        /** @const */\n        this.scope = scope;\n    };\n\n\n    /**\n     * Fires the provided callbacks as soon as possible after the current JS\n     * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n     * reasons.\n     * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n     *     possible.\n     * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n     * @template SCOPE\n     */\n    src$public$vendor$metaljs$src$async$async$$async.nextTick = function(callback, opt_context) {\n        var cb = callback;\n        if (opt_context) {\n            cb = callback.bind(opt_context);\n        }\n        cb = src$public$vendor$metaljs$src$async$async$$async.nextTick.wrapCallback_(cb);\n        // Introduced and currently only supported by IE10.\n        if (src$public$vendor$metaljs$src$core$$default.isFunction(window.setImmediate)) {\n            window.setImmediate(cb);\n            return;\n        }\n        // Look for and cache the custom fallback version of setImmediate.\n        if (!src$public$vendor$metaljs$src$async$async$$async.nextTick.setImmediate_) {\n            src$public$vendor$metaljs$src$async$async$$async.nextTick.setImmediate_ = src$public$vendor$metaljs$src$async$async$$async.nextTick.getSetImmediateEmulator_();\n        }\n        src$public$vendor$metaljs$src$async$async$$async.nextTick.setImmediate_(cb);\n    };\n\n\n    /**\n     * Cache for the setImmediate implementation.\n     * @type {function(function())}\n     * @private\n     */\n    src$public$vendor$metaljs$src$async$async$$async.nextTick.setImmediate_ = null;\n\n\n    /**\n     * Determines the best possible implementation to run a function as soon as\n     * the JS event loop is idle.\n     * @return {function(function())} The \"setImmediate\" implementation.\n     * @private\n     */\n    src$public$vendor$metaljs$src$async$async$$async.nextTick.getSetImmediateEmulator_ = function() {\n        // Create a private message channel and use it to postMessage empty messages\n        // to ourselves.\n        var Channel = window.MessageChannel;\n        // If MessageChannel is not available and we are in a browser, implement\n        // an iframe based polyfill in browsers that have postMessage and\n        // document.addEventListener. The latter excludes IE8 because it has a\n        // synchronous postMessage implementation.\n        if (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n            window.postMessage && window.addEventListener) {\n            /** @constructor */\n            Channel = function() {\n                // Make an empty, invisible iframe.\n                var iframe = document.createElement('iframe');\n                iframe.style.display = 'none';\n                iframe.src = '';\n                document.documentElement.appendChild(iframe);\n                var win = iframe.contentWindow;\n                var doc = win.document;\n                doc.open();\n                doc.write('');\n                doc.close();\n                var message = 'callImmediate' + Math.random();\n                var origin = win.location.protocol + '//' + win.location.host;\n                var onmessage = function(e) {\n                    // Validate origin and message to make sure that this message was\n                    // intended for us.\n                    if (e.origin !== origin && e.data !== message) {\n                        return;\n                    }\n                    this.port1.onmessage();\n                }.bind(this);\n                win.addEventListener('message', onmessage, false);\n                this.port1 = {};\n                this.port2 = {\n                    postMessage: function() {\n                        win.postMessage(message, origin);\n                    }\n                };\n            };\n        }\n        if (typeof Channel !== 'undefined') {\n            var channel = new Channel();\n            // Use a fifo linked list to call callbacks in the right order.\n            var head = {};\n            var tail = head;\n            channel.port1.onmessage = function() {\n                head = head.next;\n                var cb = head.cb;\n                head.cb = null;\n                cb();\n            };\n            return function(cb) {\n                tail.next = {\n                    cb: cb\n                };\n                tail = tail.next;\n                channel.port2.postMessage(0);\n            };\n        }\n        // Implementation for IE6-8: Script elements fire an asynchronous\n        // onreadystatechange event when inserted into the DOM.\n        if (typeof document !== 'undefined' && 'onreadystatechange' in\n                document.createElement('script')) {\n            return function(cb) {\n                var script = document.createElement('script');\n                script.onreadystatechange = function() {\n                    // Clean up and call the callback.\n                    script.onreadystatechange = null;\n                    script.parentNode.removeChild(script);\n                    script = null;\n                    cb();\n                    cb = null;\n                };\n                document.documentElement.appendChild(script);\n            };\n        }\n        // Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n        // or more.\n        return function(cb) {\n            setTimeout(cb, 0);\n        };\n    };\n\n\n    /**\n     * Helper function that is overrided to protect callbacks with entry point\n     * monitor if the application monitors entry points.\n     * @param {function()} callback Callback function to fire as soon as possible.\n     * @return {function()} The wrapped callback.\n     * @private\n     */\n    src$public$vendor$metaljs$src$async$async$$async.nextTick.wrapCallback_ = function(opt_returnValue) {\n        return opt_returnValue;\n    };\n\n    var src$public$vendor$metaljs$src$async$async$$default = src$public$vendor$metaljs$src$async$async$$async;\n    'use strict';\n\n    /**\n     * Attribute adds support for having object properties that can be watched for\n     * changes, as well as configured with validators, setters and other options.\n     * See the `addAttr` method for a complete list of available attribute\n     * configuration options.\n     * @constructor\n     * @extends {EventEmitter}\n     */\n    class src$public$vendor$metaljs$src$attribute$Attribute$$Attribute extends src$public$vendor$metaljs$src$events$EventEmitter$$default {\n        constructor(opt_config) {\n            super();\n\n            /**\n             * Object with information about the batch event that is currently\n             * scheduled, or null if none is.\n             * @type {Object}\n             * @protected\n             */\n            this.scheduledBatchData_ = null;\n\n            /**\n             * Object that contains information about all this instance's attributes.\n             * @type {!Object<string, !Object>}\n             * @protected\n             */\n            this.attrsInfo_ = {};\n\n            this.mergeInvalidAttrs_();\n            this.addAttrsFromStaticHint_(opt_config);\n        }\n\n        /**\n         * Adds the given attribute.\n         * @param {string} name The name of the new attribute.\n         * @param {Object.<string, *>=} config The configuration object for the new attribute.\n         *   This object can have the following keys:\n         *   setter - Function for normalizing new attribute values. It receives the new value\n         *   that was set, and returns the value that should be stored.\n         *   validator - Function that validates new attribute values. When it returns false,\n         *   the new value is ignored.\n         *   value - The default value for this attribute. Note that setting this to an object\n         *   will cause all attribute instances to use the same reference to the object. To\n         *   have each attribute instance use a different reference, use the `valueFn` option\n         *   instead.\n         *   valueFn - A function that returns the default value for this attribute.\n         *   writeOnce - Ignores writes to the attribute after it's been first written to. That is,\n         *   allows writes only when setting the attribute for the first time.\n         * @param {*} initialValue The initial value of the new attribute. This value has higher\n         *   precedence than the default value specified in this attribute's configuration.\n         */\n        addAttr(name, config, initialValue) {\n            this.buildAttrInfo_(name, config, initialValue);\n\n            Object.defineProperty(this, name, {\n                configurable: true,\n                get: this.getAttrValue_.bind(this, name),\n                set: this.setAttrValue_.bind(this, name)\n            });\n        }\n\n        /**\n         * Adds the given attributes.\n         * @param {!Object.<string, !Object>} configs An object that maps the names of all the\n         *   attributes to be added to their configuration objects.\n         * @param {!Object.<string, *>} initialValues An object that maps the names of\n         *   attributes to their initial values. These values have higher precedence than the\n         *   default values specified in the attribute configurations.\n         */\n        addAttrs(configs, initialValues) {\n            initialValues = initialValues || {};\n            var names = Object.keys(configs);\n\n            var props = {};\n            for (var i = 0; i < names.length; i++) {\n                var name = names[i];\n                this.buildAttrInfo_(name, configs[name], initialValues[name]);\n                props[name] = this.buildAttrPropertyDef_(name);\n            }\n\n            Object.defineProperties(this, props);\n        }\n\n        /**\n         * Adds attributes from super classes static hint `MyClass.ATTRS = {};`.\n         * @param {!Object.<string, !Object>} configs An object that maps the names\n         *     of all the attributes to be added to their configuration objects.\n         * @protected\n         */\n        addAttrsFromStaticHint_(config) {\n            src$public$vendor$metaljs$src$core$$default.mergeSuperClassesProperty(this.constructor, 'ATTRS', this.mergeAttrs_);\n            this.addAttrs(this.constructor.ATTRS_MERGED, config);\n        }\n\n        /**\n         * Checks that the given name is a valid attribute name. If it's not, an error\n         * will be thrown.\n         * @param {string} name The name to be validated.\n         * @throws {Error}\n         */\n        assertValidAttrName_(name) {\n            if (this.constructor.INVALID_ATTRS_MERGED[name]) {\n                throw new Error('It\\'s not allowed to create an attribute with the name \"' + name + '\".');\n            }\n        }\n\n        /**\n         * Builds the info object for the requested attribute.\n         * @param {string} name The name of the attribute.\n         * @param {Object} config The config object of the attribute.\n         * @param {*} initialValue The initial value of the attribute.\n         * @protected\n         */\n        buildAttrInfo_(name, config, initialValue) {\n            this.assertValidAttrName_(name);\n\n            this.attrsInfo_[name] = {\n                config: config || {},\n                initialValue: initialValue,\n                state: src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.UNINITIALIZED\n            };\n        }\n\n        /**\n         * Builds the property definition object for the requested attribute.\n         * @param {string} name The name of the attribute.\n         * @return {!Object}\n         * @protected\n         */\n        buildAttrPropertyDef_(name) {\n            return {\n                configurable: true,\n                get: this.getAttrValue_.bind(this, name),\n                set: this.setAttrValue_.bind(this, name)\n            };\n        }\n\n        /**\n         * Calls the requested function, running the appropriate code for when it's\n         * passed as an actual function object or just the function's name.\n         * @param {!Function|string} fn Function, or name of the function to run.\n         * @param {!Array} An optional array of parameters to be passed to the\n         *   function that will be called.\n         * @return {*} The return value of the called function.\n         * @protected\n         */\n        callFunction_(fn, args) {\n            if (src$public$vendor$metaljs$src$core$$default.isString(fn)) {\n                return this[fn].apply(this, args);\n            } else if (src$public$vendor$metaljs$src$core$$default.isFunction(fn)) {\n                return fn.apply(this, args);\n            }\n        }\n\n        /**\n         * Calls the attribute's setter, if there is one.\n         * @param {string} name The name of the attribute.\n         * @param {*} value The value to be set.\n         * @return {*} The final value to be set.\n         */\n        callSetter_(name, value) {\n            var info = this.attrsInfo_[name];\n            var config = info.config;\n            if (config.setter) {\n                value = this.callFunction_(config.setter, [value]);\n            }\n            return value;\n        }\n\n        /**\n         * Calls the attribute's validator, if there is one.\n         * @param {string} name The name of the attribute.\n         * @param {*} value The value to be validated.\n         * @return {boolean} Flag indicating if value is valid or not.\n         */\n        callValidator_(name, value) {\n            var info = this.attrsInfo_[name];\n            var config = info.config;\n            if (config.validator) {\n                return this.callFunction_(config.validator, [value]);\n            }\n            return true;\n        }\n\n        /**\n         * Checks if the it's allowed to write on the requested attribute.\n         * @param {string} name The name of the attribute.\n         * @return {boolean}\n         */\n        canSetAttribute(name) {\n            var info = this.attrsInfo_[name];\n            return !info.config.writeOnce || !info.written;\n        }\n\n        /**\n         * @inheritDoc\n         */\n        disposeInternal() {\n            super.disposeInternal();\n            this.attrsInfo_ = null;\n            this.scheduledBatchData_ = null;\n        }\n\n        /**\n         * Emits the attribute change batch event.\n         * @protected\n         */\n        emitBatchEvent_() {\n            if (!this.isDisposed()) {\n                var data = this.scheduledBatchData_;\n                this.scheduledBatchData_ = null;\n                this.emit('attrsChanged', data);\n            }\n        }\n\n        /**\n         * Gets the config object for the requested attribute.\n         * @param {string} name The attribute's name.\n         * @return {!Object}\n         * @protected\n         */\n        getAttrConfig(name) {\n            return (this.attrsInfo_[name] || {}).config;\n        }\n\n        /**\n         * Returns an object that maps all attribute names to their values.\n         * @return {Object.<string, *>}\n         */\n        getAttrs() {\n            var attrsMap = {};\n            var names = this.getAttrNames();\n\n            for (var i = 0; i < names.length; i++) {\n                attrsMap[names[i]] = this[names[i]];\n            }\n\n            return attrsMap;\n        }\n\n        /**\n         * Returns an array with all attribute names.\n         * @return {Array.<string>}\n         */\n        getAttrNames() {\n            return Object.keys(this.attrsInfo_);\n        }\n\n        /**\n         * Gets the value of the specified attribute. This is passed as that attribute's\n         * getter to the `Object.defineProperty` call inside the `addAttr` method.\n         * @param {string} name The name of the attribute.\n         * @return {*}\n         * @protected\n         */\n        getAttrValue_(name) {\n            this.initAttr_(name);\n\n            return this.attrsInfo_[name].value;\n        }\n\n        /**\n         * Informs of changes to an attributes value through an event. Won't trigger\n         * the event if the value hasn't changed or if it's being initialized.\n         * @param {string} name The name of the attribute.\n         * @param {*} prevVal The previous value of the attribute.\n         * @protected\n         */\n        informChange_(name, prevVal) {\n            if (this.shouldInformChange_(name, prevVal)) {\n                var data = {\n                    attrName: name,\n                    newVal: this[name],\n                    prevVal: prevVal\n                };\n                this.emit(name + 'Changed', data);\n                this.scheduleBatchEvent_(data);\n            }\n        }\n\n        /**\n         * Initializes the specified attribute, giving it a first value.\n         * @param {string} name The name of the attribute.\n         * @protected\n         */\n        initAttr_(name) {\n            var info = this.attrsInfo_[name];\n            if (info.state !== src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.UNINITIALIZED) {\n                return;\n            }\n\n            info.state = src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.INITIALIZING;\n            this.setInitialValue_(name);\n            if (!info.written) {\n                info.state = src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.INITIALIZING_DEFAULT;\n                this.setDefaultValue_(name);\n            }\n            info.state = src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.INITIALIZED;\n        }\n\n        /**\n         * Merges an array of values for the ATTRS property into a single object.\n         * @param {!Array} values The values to be merged.\n         * @return {!Object} The merged value.\n         * @protected\n         */\n        mergeAttrs_(values) {\n            return src$public$vendor$metaljs$src$object$object$$default.mixin.apply(null, [{}].concat(values.reverse()));\n        }\n\n        /**\n         * Merges the values of the `INVALID_ATTRS` static for the whole hierarchy of\n         * the current instance.\n         * @protected\n         */\n        mergeInvalidAttrs_() {\n            src$public$vendor$metaljs$src$core$$default.mergeSuperClassesProperty(this.constructor, 'INVALID_ATTRS', function(values) {\n                return src$public$vendor$metaljs$src$array$array$$default.flatten(values).reduce(function(merged, val) {\n                    if (val) {\n                        merged[val] = true;\n                    }\n                    return merged;\n                }, {});\n            });\n        }\n\n        /**\n         * Removes the requested attribute.\n         * @param {string} name The name of the attribute.\n         */\n        removeAttr(name) {\n            this.attrsInfo_[name] = null;\n            delete this[name];\n        }\n\n        /**\n         * Schedules an attribute change batch event to be emitted asynchronously.\n         * @param {!Object} attrChangeData Information about an attribute's update.\n         * @protected\n         */\n        scheduleBatchEvent_(attrChangeData) {\n            if (!this.scheduledBatchData_) {\n                src$public$vendor$metaljs$src$async$async$$default.nextTick(this.emitBatchEvent_, this);\n                this.scheduledBatchData_ = {\n                    changes: {}\n                };\n            }\n\n            var name = attrChangeData.attrName;\n            var changes = this.scheduledBatchData_.changes;\n            if (changes[name]) {\n                changes[name].newVal = attrChangeData.newVal;\n            } else {\n                changes[name] = attrChangeData;\n            }\n        }\n\n        /**\n         * Sets the value of all the specified attributes.\n         * @param {!Object.<string,*>} values A map of attribute names to the values they\n         *   should be set to.\n         */\n        setAttrs(values) {\n            var names = Object.keys(values);\n\n            for (var i = 0; i < names.length; i++) {\n                this[names[i]] = values[names[i]];\n            }\n        }\n\n        /**\n         * Sets the value of the specified attribute. This is passed as that attribute's\n         * setter to the `Object.defineProperty` call inside the `addAttr` method.\n         * @param {string} name The name of the attribute.\n         * @param {*} value The new value of the attribute.\n         * @protected\n         */\n        setAttrValue_(name, value) {\n            if (!this.canSetAttribute(name) || !this.validateAttrValue_(name, value)) {\n                return;\n            }\n\n            var info = this.attrsInfo_[name];\n            if (info.initialValue === undefined && info.state === src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.UNINITIALIZED) {\n                info.state = src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.INITIALIZED;\n            }\n\n            var prevVal = this[name];\n            info.value = this.callSetter_(name, value);\n            info.written = true;\n            this.informChange_(name, prevVal);\n        }\n\n        /**\n         * Sets the default value of the requested attribute.\n         * @param {string} name The name of the attribute.\n         * @return {*}\n         */\n        setDefaultValue_(name) {\n            var config = this.attrsInfo_[name].config;\n\n            if (config.value !== undefined) {\n                this[name] = config.value;\n            } else {\n                this[name] = this.callFunction_(config.valueFn);\n            }\n        }\n\n        /**\n         * Sets the initial value of the requested attribute.\n         * @param {string} name The name of the attribute.\n         * @return {*}\n         */\n        setInitialValue_(name) {\n            var info = this.attrsInfo_[name];\n            if (info.initialValue !== undefined) {\n                this[name] = info.initialValue;\n                info.initialValue = undefined;\n            }\n        }\n\n        /**\n         * Checks if we should inform about an attributes update. Updates are ignored\n         * during attribute initialization. Otherwise, updates to primitive values\n         * are only informed when the new value is different from the previous\n         * one. Updates to objects (which includes functions and arrays) are always\n         * informed outside initialization though, since we can't be sure if all of\n         * the internal data has stayed the same.\n         * @param {string} name The name of the attribute.\n         * @param {*} prevVal The previous value of the attribute.\n         * @return {boolean}\n         */\n        shouldInformChange_(name, prevVal) {\n            var info = this.attrsInfo_[name];\n            return (info.state === src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.INITIALIZED) &&\n            (src$public$vendor$metaljs$src$core$$default.isObject(prevVal) || prevVal !== this[name]);\n        }\n\n        /**\n         * Validates the attribute's value, which includes calling the validator defined\n         * in the attribute's configuration object, if there is one.\n         * @param {string} name The name of the attribute.\n         * @param {*} value The value to be validated.\n         * @return {boolean} Flag indicating if value is valid or not.\n         */\n        validateAttrValue_(name, value) {\n            var info = this.attrsInfo_[name];\n\n            return info.state === src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States.INITIALIZING_DEFAULT ||\n                this.callValidator_(name, value);\n        }\n    }\n\n    /**\n     * A list with attribute names that will automatically be rejected as invalid.\n     * Subclasses can define their own invalid attributes by setting this static\n     * on their constructors, which will be merged together and handled automatically.\n     * @type {!Array<string>}\n     */\n    src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.INVALID_ATTRS = ['attrs'];\n\n    /**\n     * Constants that represent the states that an attribute can be in.\n     * @type {!Object}\n     */\n    src$public$vendor$metaljs$src$attribute$Attribute$$Attribute.States = {\n        UNINITIALIZED: 0,\n        INITIALIZING: 1,\n        INITIALIZING_DEFAULT: 2,\n        INITIALIZED: 3\n    };\n\n    var src$public$vendor$metaljs$src$attribute$Attribute$$default = src$public$vendor$metaljs$src$attribute$Attribute$$Attribute;\n    'use strict';\n\n    /**\n     * EventEmitterProxy utility. It's responsible for linking two EventEmitter\n     * instances together, emitting events from the first emitter through the\n     * second one. That means that listening to a supported event on the target\n     * emitter will mean listening to it on the origin emitter as well.\n     * @param {EventEmitter | Element} originEmitter Events originated on this emitter\n     *   will be fired for the target emitter's listeners as well. Can be either a real\n     *   EventEmitter instance or a DOM element.\n     * @param {EventEmitter} targetEmitter Event listeners attached to this emitter\n     *   will also be triggered when the event is fired by the origin emitter.\n     * @param {Object} opt_blacklist Optional blacklist of events that should not be\n     *   proxied.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class src$public$vendor$metaljs$src$events$EventEmitterProxy$$EventEmitterProxy extends src$public$vendor$metaljs$src$disposable$Disposable$$default {\n        constructor(originEmitter, targetEmitter, opt_blacklist, opt_whitelist) {\n            /**\n             * Map of events that should not be proxied.\n             * @type {Object}\n             * @protected\n             */\n         this.blacklist_ = opt_blacklist || {};\n\n            /**\n             * The origin emitter. This emitter's events will be proxied through the\n             * target emitter.\n             * @type {EventEmitter}\n             * @protected\n             */\n            this.originEmitter_ = originEmitter;\n\n            /**\n             * Holds a map of events from the origin emitter that are already being proxied.\n             * @type {Object}\n             * @protected\n             */\n            this.proxiedEvents_ = {};\n\n            /**\n             * The target emitter. This emitter will emit all events that come from\n             * the origin emitter.\n             * @type {EventEmitter}\n             * @protected\n             */\n            this.targetEmitter_ = targetEmitter;\n\n             /**\n                * Map of events that should be proxied. If whitelist is set blacklist is\n                * ignored.\n                * @type {Object}\n                * @protected\n                */\n            this.whitelist_ = opt_whitelist;\n\n            this.startProxy_();\n        }\n\n        /**\n         * @inheritDoc\n         */\n        disposeInternal() {\n            var removeFnName = this.originEmitter_.removeEventListener ? 'removeEventListener' : 'removeListener';\n            for (var event in this.proxiedEvents_) {\n                this.originEmitter_[removeFnName](event, this.proxiedEvents_[event]);\n            }\n\n            this.proxiedEvents_ = null;\n            this.originEmitter_ = null;\n            this.targetEmitter_ = null;\n        }\n\n        /**\n         * Proxies the given event from the origin to the target emitter.\n         * @param {string} event\n         */\n        proxyEvent_(event) {\n            if (!this.shouldProxyEvent_(event)) {\n                return;\n            }\n\n            var self = this;\n            this.proxiedEvents_[event] = function() {\n                var args = [event].concat(Array.prototype.slice.call(arguments, 0));\n                self.targetEmitter_.emit.apply(self.targetEmitter_, args);\n            };\n\n            var addFnName = this.originEmitter_.addEventListener ? 'addEventListener' : 'on';\n            this.originEmitter_[addFnName](event, this.proxiedEvents_[event]);\n        }\n\n        /**\n         * Checks if the given event should be proxied.\n         * @param {string} event\n         * @return {boolean}\n         * @protected\n         */\n        shouldProxyEvent_(event) {\n            if (this.whitelist_ && !this.whitelist_[event]) {\n                return false;\n            }\n            if (this.blacklist_[event]) {\n                return false;\n            }\n            return !this.proxiedEvents_[event] &&\n                (!(this.originEmitter_.removeEventListener || this.originEmitter_.addEventListener) ||\n                        src$public$vendor$metaljs$src$dom$dom$$default.supportsEvent(this.originEmitter_, event));\n        }\n\n        /**\n         * Starts proxying all events from the origin to the target emitter.\n         * @protected\n         */\n        startProxy_() {\n            this.targetEmitter_.on('newListener', this.proxyEvent_.bind(this));\n        }\n    }\n\n    var src$public$vendor$metaljs$src$events$EventEmitterProxy$$default = src$public$vendor$metaljs$src$events$EventEmitterProxy$$EventEmitterProxy;\n    'use strict';\n\n    /**\n     * Affix utility.\n     */\n    class lib$scripts$Affix$$Affix extends src$public$vendor$metaljs$src$attribute$Attribute$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n\n        if (!lib$scripts$Affix$$Affix.emitter_) {\n          lib$scripts$Affix$$Affix.emitter_ = new src$public$vendor$metaljs$src$events$EventEmitter$$default();\n          lib$scripts$Affix$$Affix.proxy_ = new src$public$vendor$metaljs$src$events$EventEmitterProxy$$default(document, lib$scripts$Affix$$Affix.emitter_, null, { scroll: true });\n        }\n\n        /**\n         * Holds the last position.\n         * @type {Position.Bottom|Position.Default|Position.Top}\n         * @private\n         */\n        this.lastPosition_ = null;\n\n        /**\n         * Holds event handle that listens scroll shared event emitter proxy.\n         * @type {EventHandle}\n         * @protected\n         */\n        this.scrollHandle_ = lib$scripts$Affix$$Affix.emitter_.on('scroll', this.checkPosition.bind(this));\n\n        this.on('elementChanged', this.checkPosition);\n        this.on('offsetTopChanged', this.checkPosition);\n        this.on('offsetBottomChanged', this.checkPosition);\n        this.checkPosition();\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        src$public$vendor$metaljs$src$dom$dom$$default.removeClasses(this.element, [lib$scripts$Affix$$Affix.Position.Bottom, lib$scripts$Affix$$Affix.Position.Default, lib$scripts$Affix$$Affix.Position.Top]);\n        this.scrollHandle_.dispose();\n        super.disposeInternal();\n      }\n\n      /**\n       * Synchronize bottom, top and element regions and checks if position has\n       * changed. If position has changed syncs position.\n       */\n      checkPosition() {\n        if (this.intersectTopRegion()) {\n          this.syncPosition(lib$scripts$Affix$$Affix.Position.Top);\n        }\n        else if (this.intersectBottomRegion()) {\n          this.syncPosition(lib$scripts$Affix$$Affix.Position.Bottom);\n        }\n        else {\n          this.syncPosition(lib$scripts$Affix$$Affix.Position.Default);\n        }\n      }\n\n      /**\n       * Whether the element is intersecting with bottom region defined by\n       * offsetBottom.\n       * @return {boolean}\n       */\n      intersectBottomRegion() {\n        if (!src$public$vendor$metaljs$src$core$$default.isDef(this.offsetBottom)) {\n          return false;\n        }\n        var clientHeight = src$public$vendor$metal$position$src$position$$default.getHeight(this.scrollElement);\n        var scrollElementClientHeight = src$public$vendor$metal$position$src$position$$default.getClientHeight(this.scrollElement);\n        return src$public$vendor$metal$position$src$position$$default.getScrollTop(this.scrollElement) + scrollElementClientHeight >= clientHeight - this.offsetBottom;\n      }\n\n      /**\n       * Whether the element is intersecting with top region defined by\n       * offsetTop.\n       * @return {boolean}\n       */\n      intersectTopRegion() {\n        if (!src$public$vendor$metaljs$src$core$$default.isDef(this.offsetTop)) {\n          return false;\n        }\n        return src$public$vendor$metal$position$src$position$$default.getScrollTop(this.scrollElement) <= this.offsetTop;\n      }\n\n      /**\n       * Synchronizes element css classes to match with the specified position.\n       * @param {Position.Bottom|Position.Default|Position.Top} position\n       */\n      syncPosition(position) {\n        if (this.lastPosition_ !== position) {\n          src$public$vendor$metaljs$src$dom$dom$$default.addClasses(this.element, [position]);\n          src$public$vendor$metaljs$src$dom$dom$$default.removeClasses(this.element, [this.lastPosition_]);\n          this.lastPosition_ = position;\n        }\n      }\n    }\n\n    /**\n     * Holds positions enum.\n     * @enum {string}\n     */\n    lib$scripts$Affix$$Affix.Position = {\n      Top: 'affix-top',\n      Bottom: 'affix-bottom',\n      Default: 'affix-default'\n    };\n\n    lib$scripts$Affix$$Affix.ATTRS = {\n      /**\n       * The scrollElement element to be used as scrollElement area for affix. The scrollElement is\n       * where the scroll event is listened from.\n       * @type {Element|Window}\n       */\n      scrollElement: {\n        setter: src$public$vendor$metaljs$src$dom$dom$$default.toElement,\n        value: document\n      },\n\n      /**\n       * Defines the offset bottom that triggers affix.\n       * @type {Number}\n       */\n      offsetTop: {\n        validator: src$public$vendor$metaljs$src$core$$default.isNumber\n      },\n\n      /**\n       * Defines the offset top that triggers affix.\n       * @type {Number}\n       */\n       offsetBottom: {\n         validator: src$public$vendor$metaljs$src$core$$default.isNumber\n       },\n\n      /**\n       * Element to be used as alignment reference of affix.\n       * @type {Element}\n       */\n      element: {\n        setter: src$public$vendor$metaljs$src$dom$dom$$default.toElement\n      }\n    };\n\n    var lib$scripts$Affix$$default = lib$scripts$Affix$$Affix;\n    'use strict';\n\n    /**\n     * Class with static methods responsible for doing browser feature checks.\n     */\n    class src$public$vendor$metaljs$src$dom$features$$features {\n        /**\n         * Some browsers (like IE9) change the order of element attributes, when html\n         * is rendered. This method can be used to check if this behavior happens on\n         * the current browser.\n         * @return {boolean}\n         */\n        static checkAttrOrderChange() {\n            if (src$public$vendor$metaljs$src$dom$features$$features.attrOrderChange_ === undefined) {\n                var originalContent = '<div data-component=\"\" data-ref=\"\"></div>';\n                var element = document.createElement('div');\n                src$public$vendor$metaljs$src$dom$dom$$default.append(element, originalContent);\n                src$public$vendor$metaljs$src$dom$features$$features.attrOrderChange_ = originalContent !== element.innerHTML;\n            }\n            return src$public$vendor$metaljs$src$dom$features$$features.attrOrderChange_;\n        }\n    }\n\n    src$public$vendor$metaljs$src$dom$features$$features.attrOrderChange_ = undefined;\n\n    var src$public$vendor$metaljs$src$dom$features$$default = src$public$vendor$metaljs$src$dom$features$$features;\n    'use strict';\n\n    class src$public$vendor$metaljs$src$string$string$$string {\n        /**\n         * Removes the breaking spaces from the left and right of the string and\n         * collapses the sequences of breaking spaces in the middle into single spaces.\n         * The original and the result strings render the same way in HTML.\n         * @param {string} str A string in which to collapse spaces.\n         * @return {string} Copy of the string with normalized breaking spaces.\n         */\n        static collapseBreakingSpaces(str) {\n            return str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n        }\n\n        /**\n         * Calculates the hashcode for a string. The hashcode value is computed by\n         * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n         * property of using 31 prime is that the multiplication can be replaced by\n         * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n         * Modern VMs do this sort of optimization automatically.\n         * @param {String} val Target string.\n         * @return {Number} Returns the string hashcode.\n         */\n        static hashCode(val) {\n            var hash = 0;\n            for (var i = 0, len = val.length; i < len; i++) {\n                hash = 31 * hash + val.charCodeAt(i);\n                hash %= 0x100000000;\n            }\n            return hash;\n        }\n\n        /**\n         * Replaces interval into the string with specified value, e.g.\n         * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n         * @param {string} str The input string.\n         * @param {Number} start Start interval position to be replaced.\n         * @param {Number} end End interval position to be replaced.\n         * @param {string} value The value that replaces the specified interval.\n         * @return {string}\n         */\n        static replaceInterval(str, start, end, value) {\n            return str.substring(0, start) + value + str.substring(end);\n        }\n    }\n\n    var src$public$vendor$metaljs$src$string$string$$default = src$public$vendor$metaljs$src$string$string$$string;\n    'use strict';\n\n    class src$public$vendor$metaljs$src$html$html$$html {\n        /**\n         * Minifies given HTML source by removing extra white spaces, comments and\n         * other unneeded characters without breaking the content structure. As a\n         * result HTML become smaller in size.\n         * - Contents within <code>, <pre>, <script>, <style>, <textarea> and\n         *   conditional comments tags are preserved.\n         * - Comments are removed.\n         * - Conditional comments are preserved.\n         * - Breaking spaces are collapsed into a single space.\n         * - Unneeded spaces inside tags (around = and before />) are removed.\n         * - Spaces between tags are removed, even from inline-block elements.\n         * - Spaces surrounding tags are removed.\n         * - DOCTYPE declaration is simplified to <!DOCTYPE html>.\n         * - Does not remove default attributes from <script>, <style>, <link>,\n         *   <form>, <input>.\n         * - Does not remove values from boolean tag attributes.\n         * - Does not remove \"javascript:\" from in-line event handlers.\n         * - Does not remove http:// and https:// protocols.\n         * @param {string} htmlString Input HTML to be compressed.\n         * @return {string} Compressed version of the HTML.\n         */\n        static compress(htmlString) {\n            var preserved = {};\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveBlocks_(htmlString, preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.simplifyDoctype_(htmlString);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.removeComments_(htmlString);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.removeIntertagSpaces_(htmlString);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.collapseBreakingSpaces_(htmlString);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.removeSpacesInsideTags_(htmlString);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.removeSurroundingSpaces_(htmlString);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.returnBlocks_(htmlString, preserved);\n            return htmlString.trim();\n        }\n\n        /**\n         * Collapses breaking spaces into a single space.\n         * @param {string} htmlString\n         * @return {string}\n         * @protected\n         */\n        static collapseBreakingSpaces_(htmlString) {\n            return src$public$vendor$metaljs$src$string$string$$default.collapseBreakingSpaces(htmlString);\n        }\n\n        /**\n         * Searches for first occurrence of the specified open tag string pattern\n         * and from that point finds next \">\" position, identified as possible tag\n         * end position.\n         * @param {string} htmlString\n         * @param {string} openTag Open tag string pattern without open tag ending\n         *     character, e.g. \"<textarea\" or \"<code\".\n         * @return {string}\n         * @protected\n         */\n        static lookupPossibleTagBoundary_(htmlString, openTag) {\n            var tagPos = htmlString.indexOf(openTag);\n            if (tagPos > -1) {\n                tagPos += htmlString.substring(tagPos).indexOf('>') + 1;\n            }\n            return tagPos;\n        }\n\n        /**\n         * Preserves contents inside any <code>, <pre>, <script>, <style>,\n         * <textarea> and conditional comment tags. When preserved, original content\n         * are replaced with an unique generated block id and stored into\n         * `preserved` map.\n         * @param {string} htmlString\n         * @param {Object} preserved Object to preserve the content indexed by an\n         *     unique generated block id.\n         * @return {html} The preserved HTML.\n         * @protected\n         */\n        static preserveBlocks_(htmlString, preserved) {\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveOuterHtml_(htmlString, '<!--[if', '<![endif]-->', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveInnerHtml_(htmlString, '<code', '</code', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveInnerHtml_(htmlString, '<pre', '</pre', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveInnerHtml_(htmlString, '<script', '</script', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveInnerHtml_(htmlString, '<style', '</style', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveInnerHtml_(htmlString, '<textarea', '</textarea', preserved);\n            return htmlString;\n        }\n\n        /**\n         * Preserves inner contents inside the specified tag. When preserved,\n         * original content are replaced with an unique generated block id and\n         * stored into `preserved` map.\n         * @param {string} htmlString\n         * @param {string} openTag Open tag string pattern without open tag ending\n         *     character, e.g. \"<textarea\" or \"<code\".\n         * @param {string} closeTag Close tag string pattern without close tag\n         *     ending character, e.g. \"</textarea\" or \"</code\".\n         * @param {Object} preserved Object to preserve the content indexed by an\n         *     unique generated block id.\n         * @return {html} The preserved HTML.\n         * @protected\n         */\n        static preserveInnerHtml_(htmlString, openTag, closeTag, preserved) {\n            var tagPosEnd = src$public$vendor$metaljs$src$html$html$$html.lookupPossibleTagBoundary_(htmlString, openTag);\n            while (tagPosEnd > -1) {\n                var tagEndPos = htmlString.indexOf(closeTag);\n                htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveInterval_(htmlString, tagPosEnd, tagEndPos, preserved);\n                htmlString = htmlString.replace(openTag, '%%%~1~%%%');\n                htmlString = htmlString.replace(closeTag, '%%%~2~%%%');\n                tagPosEnd = src$public$vendor$metaljs$src$html$html$$html.lookupPossibleTagBoundary_(htmlString, openTag);\n            }\n            htmlString = htmlString.replace(/%%%~1~%%%/g, openTag);\n            htmlString = htmlString.replace(/%%%~2~%%%/g, closeTag);\n            return htmlString;\n        }\n\n        /**\n         * Preserves interval of the specified HTML into the preserved map replacing\n         * original contents with an unique generated id.\n         * @param {string} htmlString\n         * @param {Number} start Start interval position to be replaced.\n         * @param {Number} end End interval position to be replaced.\n         * @param {Object} preserved Object to preserve the content indexed by an\n         *     unique generated block id.\n         * @return {string} The HTML with replaced interval.\n         * @protected\n         */\n        static preserveInterval_(htmlString, start, end, preserved) {\n            var blockId = '%%%~BLOCK~' + src$public$vendor$metaljs$src$core$$default.getUid() + '~%%%';\n            preserved[blockId] = htmlString.substring(start, end);\n            return src$public$vendor$metaljs$src$string$string$$default.replaceInterval(htmlString, start, end, blockId);\n        }\n\n        /**\n         * Preserves outer contents inside the specified tag. When preserved,\n         * original content are replaced with an unique generated block id and\n         * stored into `preserved` map.\n         * @param {string} htmlString\n         * @param {string} openTag Open tag string pattern without open tag ending\n         *     character, e.g. \"<textarea\" or \"<code\".\n         * @param {string} closeTag Close tag string pattern without close tag\n         *     ending character, e.g. \"</textarea\" or \"</code\".\n         * @param {Object} preserved Object to preserve the content indexed by an\n         *     unique generated block id.\n         * @return {html} The preserved HTML.\n         * @protected\n         */\n        static preserveOuterHtml_(htmlString, openTag, closeTag, preserved) {\n            var tagPos = htmlString.indexOf(openTag);\n            while (tagPos > -1) {\n                var tagEndPos = htmlString.indexOf(closeTag) + closeTag.length;\n                htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveInterval_(htmlString, tagPos, tagEndPos, preserved);\n                tagPos = htmlString.indexOf(openTag);\n            }\n            return htmlString;\n        }\n\n        /**\n         * Removes all comments of the HTML. Including conditional comments and\n         * \"<![CDATA[\" blocks.\n         * @param {string} htmlString\n         * @return {string} The HTML without comments.\n         * @protected\n         */\n        static removeComments_(htmlString) {\n            var preserved = {};\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveOuterHtml_(htmlString, '<![CDATA[', ']]>', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveOuterHtml_(htmlString, '<!--', '-->', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.replacePreservedBlocks_(htmlString, preserved, '');\n            return htmlString;\n        }\n\n        /**\n         * Removes spaces between tags, even from inline-block elements.\n         * @param {string} htmlString\n         * @return {string} The HTML without spaces between tags.\n         * @protected\n         */\n        static removeIntertagSpaces_(htmlString) {\n            htmlString = htmlString.replace(src$public$vendor$metaljs$src$html$html$$html.Patterns.INTERTAG_CUSTOM_CUSTOM, '~%%%%%%~');\n            htmlString = htmlString.replace(src$public$vendor$metaljs$src$html$html$$html.Patterns.INTERTAG_CUSTOM_TAG, '~%%%<');\n            htmlString = htmlString.replace(src$public$vendor$metaljs$src$html$html$$html.Patterns.INTERTAG_TAG, '><');\n            htmlString = htmlString.replace(src$public$vendor$metaljs$src$html$html$$html.Patterns.INTERTAG_TAG_CUSTOM, '>%%%~');\n            return htmlString;\n        }\n\n        /**\n         * Removes spaces inside tags.\n         * @param {string} htmlString\n         * @return {string} The HTML without spaces inside tags.\n         * @protected\n         */\n        static removeSpacesInsideTags_(htmlString) {\n            htmlString = htmlString.replace(src$public$vendor$metaljs$src$html$html$$html.Patterns.TAG_END_SPACES, '$1$2');\n            htmlString = htmlString.replace(src$public$vendor$metaljs$src$html$html$$html.Patterns.TAG_QUOTE_SPACES, '=$1$2$3');\n            return htmlString;\n        }\n\n        /**\n         * Removes spaces surrounding tags.\n         * @param {string} htmlString\n         * @return {string} The HTML without spaces surrounding tags.\n         * @protected\n         */\n        static removeSurroundingSpaces_(htmlString) {\n            return htmlString.replace(src$public$vendor$metaljs$src$html$html$$html.Patterns.SURROUNDING_SPACES, '$1');\n        }\n\n        /**\n         * Restores preserved map keys inside the HTML. Note that the passed HTML\n         * should contain the unique generated block ids to be replaced.\n         * @param {string} htmlString\n         * @param {Object} preserved Object to preserve the content indexed by an\n         *     unique generated block id.\n         * @param {string} replaceValue The value to replace any block id inside the\n         * HTML.\n         * @return {string}\n         * @protected\n         */\n        static replacePreservedBlocks_(htmlString, preserved, replaceValue) {\n            for (var blockId in preserved) {\n                htmlString = htmlString.replace(blockId, replaceValue);\n            }\n            return htmlString;\n        }\n\n        /**\n         * Simplifies DOCTYPE declaration to <!DOCTYPE html>.\n         * @param {string} htmlString\n         * @return {string}\n         * @protected\n         */\n        static simplifyDoctype_(htmlString) {\n            var preserved = {};\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.preserveOuterHtml_(htmlString, '<!DOCTYPE', '>', preserved);\n            htmlString = src$public$vendor$metaljs$src$html$html$$html.replacePreservedBlocks_(htmlString, preserved, '<!DOCTYPE html>');\n            return htmlString;\n        }\n\n        /**\n         * Restores preserved map original contents inside the HTML. Note that the\n         * passed HTML should contain the unique generated block ids to be restored.\n         * @param {string} htmlString\n         * @param {Object} preserved Object to preserve the content indexed by an\n         *     unique generated block id.\n         * @return {string}\n         * @protected\n         */\n        static returnBlocks_(htmlString, preserved) {\n            for (var blockId in preserved) {\n                htmlString = htmlString.replace(blockId, preserved[blockId]);\n            }\n            return htmlString;\n        }\n    }\n\n    /**\n     * HTML regex patterns.\n     * @enum {RegExp}\n     * @protected\n     */\n    src$public$vendor$metaljs$src$html$html$$html.Patterns = {\n        /**\n         * @type {RegExp}\n         */\n        INTERTAG_CUSTOM_CUSTOM: /~%%%\\s+%%%~/g,\n\n        /**\n         * @type {RegExp}\n         */\n        INTERTAG_TAG_CUSTOM: />\\s+%%%~/g,\n\n        /**\n         * @type {RegExp}\n         */\n        INTERTAG_CUSTOM_TAG: /~%%%\\s+</g,\n\n        /**\n         * @type {RegExp}\n         */\n        INTERTAG_TAG: />\\s+</g,\n\n        /**\n         * @type {RegExp}\n         */\n        SURROUNDING_SPACES: /\\s*(<[^>]+>)\\s*/g,\n\n        /**\n         * @type {RegExp}\n         */\n        TAG_END_SPACES: /(<(?:[^>]+?))(?:\\s+?)(\\/?>)/g,\n\n        /**\n         * @type {RegExp}\n         */\n        TAG_QUOTE_SPACES: /\\s*=\\s*([\"']?)\\s*(.*?)\\s*(\\1)/g\n    };\n\n    var src$public$vendor$metaljs$src$html$html$$default = src$public$vendor$metaljs$src$html$html$$html;\n    'use strict';\n\n    /**\n     * EventHandler utility. It's useful for easily removing a group of\n     * listeners from different EventEmitter instances.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class src$public$vendor$metaljs$src$events$EventHandler$$EventHandler extends src$public$vendor$metaljs$src$disposable$Disposable$$default {\n        constructor() {\n                /**\n                 * An array that holds the added event handles, so the listeners can be\n                 * removed later.\n                 * @type {Array.<EventHandle>}\n                 * @protected\n                 */\n                this.eventHandles_ = [];\n        }\n\n        /**\n         * Adds event handles to be removed later through the `removeAllListeners`\n         * method.\n         * @param {...(!EventHandle)} var_args\n         */\n        add() {\n            for (var i = 0; i < arguments.length; i++) {\n                this.eventHandles_.push(arguments[i]);\n            }\n        }\n\n        /**\n         * Disposes of this instance's object references.\n         * @override\n         */\n        disposeInternal() {\n            this.eventHandles_ = null;\n        }\n\n        /**\n         * Removes all listeners that have been added through the `add` method.\n         */\n        removeAllListeners() {\n            for (var i = 0; i < this.eventHandles_.length; i++) {\n                this.eventHandles_[i].removeListener();\n            }\n\n            this.eventHandles_ = [];\n        }\n    }\n\n    var src$public$vendor$metaljs$src$events$EventHandler$$default = src$public$vendor$metaljs$src$events$EventHandler$$EventHandler;\n    'use strict';\n\n    /**\n     * Component collects common behaviors to be followed by UI components, such\n     * as Lifecycle, bounding box element creation, CSS classes management,\n     * events encapsulation and surfaces support. Surfaces are an area of the\n     * component that can have information rendered into it. A component\n     * manages multiple surfaces. Surfaces are only rendered when its content is\n     * modified, representing render performance gains. For each surface, render\n     * attributes could be associated, when the render context of a surface gets\n     * modified the component Lifecycle re-paints the modified surface\n     * automatically.\n     *\n     * Example:\n     *\n     * <code>\n     * class CustomComponent extends Component {\n     *   constructor(config) {\n     *     super(config);\n     *   }\n     *\n     *   created() {\n     *   }\n     *\n     *   decorateInternal() {\n     *   }\n     *\n     *   renderInternal() {\n     *     this.element.appendChild(this.getSurfaceElement('header'));\n     *     this.element.appendChild(this.getSurfaceElement('bottom'));\n     *   }\n     *\n     *   getSurfaceContent(surfaceId) {\n     *   }\n     *\n     *   attached() {\n     *   }\n     *\n     *   detached() {\n     *   }\n     * }\n     *\n     * CustomComponent.ATTRS = {\n     *   title: { value: 'Title' },\n     *   fontSize: { value: '10px' }\n     * };\n     *\n     * CustomComponent.SURFACES = {\n     *   header: { renderAttrs: ['title', 'fontSize'] },\n     *   bottom: { renderAttrs: ['fontSize'] }\n     * };\n     * </code>\n     *\n     * @param {!Object} opt_config An object with the initial values for this component's\n     *   attributes.\n     * @constructor\n     * @extends {Attribute}\n     */\n    class src$public$vendor$metaljs$src$component$Component$$Component extends src$public$vendor$metaljs$src$attribute$Attribute$$default {\n        constructor(opt_config) {\n            super(opt_config);\n\n            /**\n             * Whether the element is being decorated.\n             * @type {boolean}\n             * @protected\n             */\n            this.decorating_ = false;\n\n            /**\n             * Holds events that were listened through the `delegate` Component function.\n             * @type {EventHandler}\n             * @protected\n             */\n            this.delegateEventHandler_ = null;\n\n            /**\n             * Instance of `EventEmitterProxy` which proxies events from the component's\n             * element to the component itself.\n             * @type {EventEmitterProxy}\n             * @protected\n             */\n            this.elementEventProxy_ = null;\n\n            /**\n             * Whether the element is in document.\n             * @type {boolean}\n             */\n            this.inDocument = false;\n\n            /**\n             * Maps that index the surfaces instances by the surface id.\n             * @type {Object}\n             * @default null\n             * @protected\n             */\n            this.surfaces_ = null;\n\n            /**\n             * Whether the element was rendered.\n             * @type {boolean}\n             */\n            this.wasRendered = false;\n\n            /**\n             * Whether the element was decorated.\n             * @type {boolean}\n             */\n            this.wasDecorated = false;\n\n            src$public$vendor$metaljs$src$core$$default.mergeSuperClassesProperty(this.constructor, 'ELEMENT_CLASSES', this.mergeElementClasses_);\n            src$public$vendor$metaljs$src$core$$default.mergeSuperClassesProperty(this.constructor, 'ELEMENT_TAG_NAME', src$public$vendor$metaljs$src$array$array$$default.firstDefinedValue);\n            src$public$vendor$metaljs$src$core$$default.mergeSuperClassesProperty(this.constructor, 'SURFACE_TAG_NAME', src$public$vendor$metaljs$src$array$array$$default.firstDefinedValue);\n            this.addSurfacesFromStaticHint_();\n\n            this.delegateEventHandler_ = new src$public$vendor$metaljs$src$events$EventHandler$$default();\n\n            this.created_();\n        }\n\n        /**\n         * Overrides `addSingleListener_` from `EventEmitter`, so we can create\n         * the `EventEmitterProxy` instance only when it's needed for the first\n         * time.\n         * @param {string} event\n         * @param {!Function} listener\n         * @param {Function=} opt_origin The original function that was added as a\n         *   listener, if there is any.\n         * @protected\n         * @override\n         */\n        addSingleListener_(event, listener, opt_origin) {\n            if (!this.elementEventProxy_ &&\n                    src$public$vendor$metaljs$src$dom$dom$$default.supportsEvent(this.constructor.ELEMENT_TAG_NAME_MERGED, event)) {\n                this.elementEventProxy_ = new src$public$vendor$metaljs$src$events$EventEmitterProxy$$default(this.element, this);\n            }\n            super.addSingleListener_(event, listener, opt_origin);\n        }\n\n        /**\n         * Registers a surface to the component. Surface elements are not\n         * automatically appended to the component element.\n         * @param {string} surfaceId The surface id to be registered.\n         * @param {Object=} opt_config Optional surface configuration.\n         * @chainable\n         */\n        addSurface(surfaceId, opt_config) {\n            this.surfaces_[surfaceId] = opt_config || {};\n            this.cacheSurfaceRenderAttrs_(surfaceId);\n            return this;\n        }\n\n        /**\n         * Registers surfaces to the component. Surface elements are not\n         * automatically appended to the component element.\n         * @param {!Object.<string, Object=>} configs An object that maps the names\n         *     of all the surfaces to be added to their configuration objects.\n         * @chainable\n         */\n        addSurfaces(configs) {\n            for (var surfaceId in configs) {\n                this.addSurface(surfaceId, configs[surfaceId]);\n            }\n            return this;\n        }\n\n        /**\n         * Adds surfaces from super classes static hint.\n         * @protected\n         */\n        addSurfacesFromStaticHint_() {\n            src$public$vendor$metaljs$src$core$$default.mergeSuperClassesProperty(this.constructor, 'SURFACES', this.mergeSurfaces_);\n            this.surfaces_ = {};\n            this.surfacesRenderAttrs_ = {};\n\n            var configs = this.constructor.SURFACES_MERGED;\n            for (var surfaceId in configs) {\n                this.addSurface(surfaceId, src$public$vendor$metaljs$src$object$object$$default.mixin({}, configs[surfaceId]));\n            }\n        }\n\n        /**\n         * Invokes the attached Lifecycle. When attached, the component element is\n         * appended to the DOM and any other action to be performed must be\n         * implemented in this method, such as, binding DOM events. A component can\n         * be re-attached multiple times.\n         * @param {(string|Element)=} opt_parentElement Optional parent element\n         *     to render the component.\n         * @param {(string|Element)=} opt_siblingElement Optional sibling element\n         *     to render the component before it. Relevant when the component needs\n         *     to be rendered before an existing element in the DOM, e.g.\n         *     `component.render(null, existingElement)`.\n         * @protected\n         * @chainable\n         */\n        attach(opt_parentElement, opt_siblingElement) {\n            if (!this.inDocument) {\n                this.renderElement_(opt_parentElement, opt_siblingElement);\n                this.inDocument = true;\n                this.attached();\n            }\n            return this;\n        }\n\n        /**\n         * Lifecycle. When attached, the component element is appended to the DOM\n         * and any other action to be performed must be implemented in this method,\n         * such as, binding DOM events. A component can be re-attached multiple\n         * times, therefore the undo behavior for any action performed in this phase\n         * must be implemented on the detach phase.\n         */\n        attached() {\n        }\n\n        /**\n         * Caches the given content for the surface with the requested id.\n         * @param {string} surfaceId\n         * @param {string} content\n         */\n        cacheSurfaceContent(surfaceId, content) {\n            var cacheState = this.computeSurfaceCacheState_(content);\n            var surface = this.getSurface(surfaceId);\n            surface.cacheState = cacheState;\n        }\n\n        /**\n         * Caches surface render attributes into a O(k) flat map representation.\n         * Relevant for performance to calculate the surfaces group that were\n         * modified by attributes mutation.\n         * @param {string} surfaceId The surface id to be cached into the flat map.\n         * @protected\n         */\n        cacheSurfaceRenderAttrs_(surfaceId) {\n            var attrs = this.getSurface(surfaceId).renderAttrs || [];\n            for (var i = 0; i < attrs.length; i++) {\n                this.surfacesRenderAttrs_[attrs[i]] = this.surfacesRenderAttrs_[attrs[i]] || {};\n                this.surfacesRenderAttrs_[attrs[i]][surfaceId] = true;\n            }\n        }\n\n        /**\n         * Clears the surfaces content cache.\n         * @protected\n         */\n        clearSurfacesCache_() {\n            for (var surfaceId in this.surfaces_) {\n                this.getSurface(surfaceId).cacheState = src$public$vendor$metaljs$src$component$Component$$Component.Cache.NOT_INITIALIZED;\n            }\n        }\n\n        /**\n         * Computes the cache state for the surface content. If value is string, the\n         * cache state is represented by its hashcode.\n         * @param {Object} value The value to calculate the cache state.\n         * @return {Object} The computed cache state.\n         * @protected\n         */\n        computeSurfaceCacheState_(value) {\n            if (src$public$vendor$metaljs$src$core$$default.isString(value)) {\n                if (src$public$vendor$metaljs$src$dom$features$$default.checkAttrOrderChange()) {\n                    value = this.convertHtmlToBrowserFormat_(value);\n                }\n                return src$public$vendor$metaljs$src$string$string$$default.hashCode(value);\n            }\n            return src$public$vendor$metaljs$src$component$Component$$Component.Cache.NOT_CACHEABLE;\n        }\n\n        /**\n         * Computes the cache state for the surface content based on the decorated\n         * DOM element. The innerHTML of the surface element is read and compressed\n         * in order to minimize mismatches caused by breaking spaces or HTML\n         * formatting differences that does not affect the content structure.\n         * @protected\n         */\n        computeSurfacesCacheStateFromDom_() {\n            for (var surfaceId in this.surfaces_) {\n                this.cacheSurfaceContent(surfaceId, src$public$vendor$metaljs$src$html$html$$default.compress(this.getSurfaceElement(surfaceId).innerHTML));\n            }\n        }\n\n        /**\n         * Converts the given html string to the format the current browser uses\n         * when html is rendered. This is done by rendering the html in a temporary\n         * element, and returning its resulting rendered html.\n         * @param {string} htmlString The html to be converted.\n         * @return {string}\n         * @protected\n         */\n        convertHtmlToBrowserFormat_(htmlString) {\n            var element = document.createElement('div');\n            src$public$vendor$metaljs$src$dom$dom$$default.append(element, htmlString);\n            return element.innerHTML;\n        }\n\n        /**\n         * Lifecycle. Creation phase of the component happens once after the\n         * component is instantiated, therefore its the initial phase of the\n         * component Lifecycle. Be conscious about actions performed in this phase\n         * to not compromise instantiation time with operations that can be\n         * postponed to further phases. It's recommended to bind component custom\n         * events in this phase, in contrast to DOM events that must be bind on\n         * attach phase.\n         */\n        created() {\n        }\n\n        /**\n         * Creates the surface element with its id namespaced to the component id.\n         * @param {string} surfaceElementId The id of the element for the surface to be\n         *   created.\n         * @return {Element} The surface element.\n         * @protected\n         */\n        createSurfaceElement_(surfaceElementId) {\n            var el = document.createElement(this.constructor.SURFACE_TAG_NAME_MERGED);\n            el.id = surfaceElementId;\n            return el;\n        }\n\n        /**\n         * Lifecycle. Internal implementation for decoration. Any extra operation\n         * necessary to prepare the component DOM must be implemented in this phase.\n         */\n        decorateInternal() {\n        }\n\n        /**\n         * Listens to a delegate event on the component's element.\n         * @param {string} eventName The name of the event to listen to.\n         * @param {string} selector The selector that matches the child elements that\n         *   the event should be triggered for.\n         * @param {!function(!Object)} callback Function to be called when the event is\n         *   triggered. It will receive the normalized event object.\n         * @return {!DomEventHandle} Can be used to remove the listener.\n         */\n        delegate(eventName, selector, callback) {\n            var handle = src$public$vendor$metaljs$src$dom$dom$$default.delegate(this.element, eventName, selector, callback);\n            this.delegateEventHandler_.add(handle);\n            return handle;\n        }\n\n        /**\n         * Invokes the detached Lifecycle. When detached, the component element is\n         * removed from the DOM and any other action to be performed must be\n         * implemented in this method, such as, unbinding DOM events. A component\n         * can be detached multiple times.\n         * @chainable\n         */\n        detach() {\n            if (this.inDocument) {\n                this.element.parentNode.removeChild(this.element);\n                this.inDocument = false;\n                this.detached();\n            }\n            return this;\n        }\n\n        /**\n         * Lifecycle. When detached, the component element is removed from the DOM\n         * and any other action to be performed must be implemented in this method,\n         * such as, unbinding DOM events. A component can be detached multiple\n         * times, therefore the undo behavior for any action performed in this phase\n         * must be implemented on the attach phase.\n         */\n        detached() {\n        }\n\n        /**\n         * Internal implementation for the creation phase of the component.\n         * @protected\n         */\n        created_() {\n            this.on('attrsChanged', this.handleAttributesChanges_);\n            this.created();\n        }\n\n        /**\n         * Lifecycle. Creates the component using existing DOM elements. Often the\n         * component can be created using existing elements in the DOM to leverage\n         * progressive enhancement. Any extra operation necessary to prepare the\n         * component DOM must be implemented in this phase. Decorate phase replaces\n         * render phase.\n         *\n         * Decoration Lifecycle:\n         *   decorate - Decorate is manually called.\n         *   decorateInternal - Internal implementation for decoration happens.\n         *   render surfaces - All surfaces content are rendered.\n         *   attribute synchronization - All synchronization methods are called.\n         *   attach - Attach Lifecycle is called.\n         * @chainable\n         */\n        decorate() {\n            if (this.inDocument) {\n                throw new Error(src$public$vendor$metaljs$src$component$Component$$Component.Error.ALREADY_RENDERED);\n            }\n            this.decorating_ = true;\n\n            this.decorateInternal();\n            this.computeSurfacesCacheStateFromDom_(); // TODO(edu): This optimization seems worth it, analyze it.\n            this.renderSurfacesContent_(this.surfaces_); // TODO(edu): Sync surfaces on decorate?\n\n            this.syncAttrs_();\n\n            this.attach();\n\n            this.decorating_ = false;\n            this.wasDecorated = true;\n            this.wasRendered = true;\n\n            return this;\n        }\n\n        /**\n         * @inheritDoc\n         */\n        disposeInternal() {\n            this.detach();\n\n            if (this.elementEventProxy_) {\n                this.elementEventProxy_.dispose();\n                this.elementEventProxy_ = null;\n            }\n\n            this.delegateEventHandler_.removeAllListeners();\n            this.delegateEventHandler_ = null;\n\n            this.surfaces_ = null;\n            this.surfacesRenderAttrs_ = null;\n            super.disposeInternal();\n        }\n\n        /**\n         * Extracts the surfaceId from the elementId.\n         * @param {Element} element\n         * @return {?string}\n         */\n        static extractComponentId(surfaceElementId) {\n            var index = surfaceElementId.lastIndexOf('-');\n            return index === -1 ? surfaceElementId : surfaceElementId.substring(0, index);\n        }\n\n        /**\n         * Fires attributes synchronization changes for attributes.\n         * @protected\n         */\n        syncAttrs_() {\n            var attrNames = this.getAttrNames();\n            for (var i = 0; i < attrNames.length; i++) {\n                this.fireAttrChange_(attrNames[i]);\n            }\n        }\n\n        /**\n         * Fires attributes synchronization changes for attributes.\n         * @param {Object.<string, Object>} changes Object containing the attribute\n         *     name as key and an object with newVal and prevVal as value.\n         * @protected\n         */\n        syncAttrsFromChanges_(changes) {\n            for (var attr in changes) {\n                this.fireAttrChange_(attr, changes[attr]);\n            }\n        }\n\n        /**\n         * Fires attribute synchronization change for the attribute.\n         * @param {Object.<string, Object>} change Object containing newVal and\n         *     prevVal keys.\n         * @protected\n         */\n        fireAttrChange_(attr, opt_change) {\n            var fn = this['sync' + attr.charAt(0).toUpperCase() + attr.slice(1)];\n            if (src$public$vendor$metaljs$src$core$$default.isFunction(fn)) {\n                if (!opt_change) {\n                    opt_change = {\n                        newVal: this[attr],\n                        prevVal: undefined\n                    };\n                }\n                fn.call(this, opt_change.newVal, opt_change.prevVal);\n            }\n        }\n\n        /**\n         * Gets surfaces that got modified by the specified attributes changes.\n         * @param {Object.<string, Object>} changes Object containing the attribute\n         *     name as key and an object with newVal and prevVal as value.\n         * @return {Object.<string, boolean>} Object containing modified surface ids\n         *     as key and true as value.\n         */\n        getModifiedSurfacesFromChanges_(changes) {\n            var surfaces = [];\n            for (var attr in changes) {\n                surfaces.push(this.surfacesRenderAttrs_[attr]);\n            }\n            return src$public$vendor$metaljs$src$object$object$$default.mixin.apply(null, surfaces);\n        }\n\n        /**\n         * Gets surface configuration object. If surface is not registered returns\n         * null.\n         * @param {string} surfaceId The surface id.\n         * @return {?Object} The surface configuration object.\n         */\n        getSurface(surfaceId) {\n            return this.surfaces_[surfaceId] || null;\n        }\n\n        /**\n         * Gets the content for the requested surface. Should be implemented by subclasses.\n         * @param {string} surfaceId The surface id.\n         * @return {Object|string} The content to be rendered.\n         */\n        getSurfaceContent() {\n        }\n\n        /**\n         * Gets the content for the requested surface. By default this just calls\n         * `getSurfaceContent`, but can be overriden to add more behavior (check\n         * `SoyComponent` for an example).\n         * @param {string} surfaceId The surface id.\n         * @return {Object|string} The content to be rendered.\n         * @protected\n         */\n        getSurfaceContent_(surfaceId) {\n            return this.getSurfaceContent(surfaceId);\n        }\n\n        /**\n         * Queries from the document or creates an element for the surface. Surface\n         * elements have its surface id namespaced to the component id, e.g. for a\n         * component with id `gallery` and a surface with id `pictures` the surface\n         * element will be represented by the id `gallery-pictures`. Surface\n         * elements must also be appended to the component element.\n         * @param {string} surfaceId The surface id.\n         * @return {Element} The surface element or null if surface not registered.\n         */\n        getSurfaceElement(surfaceId) {\n            var surface = this.getSurface(surfaceId);\n            if (!surface) {\n                return null;\n            }\n            if (!surface.element) {\n                var surfaceElementId = this.makeSurfaceId_(surfaceId);\n                surface.element = document.getElementById(surfaceElementId) ||\n                    this.element.querySelector('#' + surfaceElementId) ||\n                this.createSurfaceElement_(surfaceElementId);\n            }\n            return surface.element;\n        }\n\n        /**\n         * A map of surface ids to the respective surface object.\n         * @return {!Object}\n         */\n        getSurfaces() {\n            return this.surfaces_;\n        }\n\n        /**\n         * Handles attributes batch changes. Responsible for surface mutations and\n         * attributes synchronization.\n         * @param {Event} event\n         * @protected\n         */\n        handleAttributesChanges_(event) {\n            if (this.inDocument) {\n                this.renderSurfacesContent_(this.getModifiedSurfacesFromChanges_(event.changes));\n            }\n            this.syncAttrsFromChanges_(event.changes);\n        }\n\n        /**\n         * Makes an unique id for the component.\n         * @return {string} Unique id.\n         * @protected\n         */\n        makeId_() {\n            return 'metal_c_' + src$public$vendor$metaljs$src$core$$default.getUid(this);\n        }\n\n        /**\n         * Makes the id for the surface scoped by the component.\n         * @param {string} surfaceId The surface id.\n         * @return {string}\n         * @protected\n         */\n        makeSurfaceId_(surfaceId) {\n            return this.id + '-' + surfaceId;\n        }\n\n        /**\n         * Merges an array of values for the ELEMENT_CLASSES property into a single object.\n         * @param {!Array.<string>} values The values to be merged.\n         * @return {!string} The merged value.\n         * @protected\n         */\n        mergeElementClasses_(values) {\n            return values.filter(function(val) {\n                return val;\n            }).join(' ');\n        }\n\n        /**\n         * Merges an array of values for the SURFACES property into a single object.\n         * @param {!Array} values The values to be merged.\n         * @return {!Object} The merged value.\n         * @protected\n         */\n        mergeSurfaces_(values) {\n            return src$public$vendor$metaljs$src$object$object$$default.mixin.apply(null, [{}].concat(values.reverse()));\n        }\n\n        /**\n         * Unregisters a surface and removes its element from the DOM.\n         * @param {string} surfaceId The surface id.\n         * @chainable\n         */\n        removeSurface(surfaceId) {\n            var el = this.getSurfaceElement(surfaceId);\n            if (el && el.parentNode) {\n                el.parentNode.removeChild(el);\n            }\n            delete this.surfaces_[surfaceId];\n            return this;\n        }\n\n        /**\n         * Lifecycle. Renders the component into the DOM. Render phase replaces\n         * decorate phase, without progressive enhancement support.\n         *\n         * Render Lifecycle:\n         *   render - Decorate is manually called.\n         *   renderInternal - Internal implementation for rendering happens.\n         *   render surfaces - All surfaces content are rendered.\n         *   attribute synchronization - All synchronization methods are called.\n         *   attach - Attach Lifecycle is called.\n         *\n         * @param {(string|Element)=} opt_parentElement Optional parent element\n         *     to render the component.\n         * @param {(string|Element)=} opt_siblingElement Optional sibling element\n         *     to render the component before it. Relevant when the component needs\n         *     to be rendered before an existing element in the DOM, e.g.\n         *     `component.render(null, existingElement)`.\n         * @chainable\n         */\n        render(opt_parentElement, opt_siblingElement) {\n            if (this.wasRendered) {\n                throw new Error(src$public$vendor$metaljs$src$component$Component$$Component.Error.ALREADY_RENDERED);\n            }\n\n            this.renderInternal();\n            this.clearSurfacesCache_();\n            this.renderSurfacesContent_(this.surfaces_);\n\n            this.syncAttrs_();\n\n            this.attach(opt_parentElement, opt_siblingElement);\n\n            this.wasRendered = true;\n\n            return this;\n        }\n\n        /**\n         * Renders the component element into the DOM.\n         * @param {(string|Element)=} opt_parentElement Optional parent element\n         *     to render the component.\n         * @param {(string|Element)=} opt_siblingElement Optional sibling element\n         *     to render the component before it. Relevant when the component needs\n         *     to be rendered before an existing element in the DOM, e.g.\n         *     `component.render(null, existingElement)`.\n         * @protected\n         */\n        renderElement_(opt_parentElement, opt_siblingElement) {\n            var element = this.element;\n            element.id = this.id;\n            if (opt_siblingElement || !element.parentNode) {\n                var parent = src$public$vendor$metaljs$src$dom$dom$$default.toElement(opt_parentElement) || document.body;\n                parent.insertBefore(element, src$public$vendor$metaljs$src$dom$dom$$default.toElement(opt_siblingElement));\n            }\n        }\n\n        /**\n         * Lifecycle. Internal implementation for rendering. Any extra operation\n         * necessary to prepare the component DOM must be implemented in this phase.\n         */\n        renderInternal() {\n        }\n\n        /**\n         * Render content into a surface. If the specified content is the same of\n         * the current surface content, nothing happens. If the surface cache state\n         * is not initialized or the content is not eligible for cache or content is\n         * different, the surfaces re-renders. It's not recommended to use this\n         * method directly since surface content can be provided by\n         * `getSurfaceContent(surfaceId)`.\n         * @param {string} surfaceId The surface id.\n         * @param {Object|string} content The content to be rendered.\n         */\n        renderSurfaceContent(surfaceId, content) {\n            if (src$public$vendor$metaljs$src$core$$default.isDefAndNotNull(content)) {\n                var surface = this.getSurface(surfaceId);\n                var previousCacheState = surface.cacheState;\n                this.cacheSurfaceContent(surfaceId, content);\n\n                var cacheState = surface.cacheState;\n                surface.cacheMiss = cacheState === src$public$vendor$metaljs$src$component$Component$$Component.Cache.NOT_INITIALIZED ||\n                    cacheState === src$public$vendor$metaljs$src$component$Component$$Component.Cache.NOT_CACHEABLE ||\n                    cacheState !== previousCacheState;\n                if (surface.cacheMiss) {\n                    this.replaceSurfaceContent_(surfaceId, content);\n                }\n            }\n        }\n\n        /**\n         * Renders all surfaces contents ignoring the cache.\n         * @param {Object.<string, Object=>} surfaces Object map where the key is\n         *     the surface id and value the optional surface configuration.\n         * @protected\n         */\n        renderSurfacesContent_(surfaces) {\n            for (var surfaceId in surfaces) {\n                this.renderSurfaceContent(surfaceId, this.getSurfaceContent_(surfaceId));\n            }\n        }\n\n        /**\n         * Replaces the content of a surface with a new one.\n         * @param {string} surfaceId The surface id.\n         * @param {Element|string} content The content to be rendered.\n         * @protected\n         */\n        replaceSurfaceContent_(surfaceId, content) {\n            var el = this.getSurfaceElement(surfaceId);\n            src$public$vendor$metaljs$src$dom$dom$$default.removeChildren(el);\n            src$public$vendor$metaljs$src$dom$dom$$default.append(el, content);\n        }\n\n        /**\n         * Setter logic for element attribute.\n         * @param {string|Element} val\n         * @return {Element}\n         * @protected\n         */\n        setterElementFn_(val) {\n            var element = src$public$vendor$metaljs$src$dom$dom$$default.toElement(val);\n            if (!element) {\n                element = this.valueElementFn_();\n            }\n            return element;\n        }\n\n        /**\n         * Attribute synchronization logic for elementClasses attribute.\n         * @param {string} newVal\n         * @param {string} prevVal\n         */\n        syncElementClasses(newVal, prevVal) {\n            var classesToAdd = this.constructor.ELEMENT_CLASSES_MERGED;\n            if (newVal) {\n                classesToAdd = classesToAdd + ' ' + newVal;\n            }\n            if (prevVal) {\n                src$public$vendor$metaljs$src$dom$dom$$default.removeClasses(this.element, prevVal.split(' '));\n            }\n            src$public$vendor$metaljs$src$dom$dom$$default.addClasses(this.element, classesToAdd.split(' '));\n        }\n\n        /**\n         * Validator logic for element attribute.\n         * @param {string|Element} val\n         * @return {boolean} True if val is a valid element.\n         * @protected\n         */\n        validatorElementFn_(val) {\n            return src$public$vendor$metaljs$src$core$$default.isElement(val) || src$public$vendor$metaljs$src$core$$default.isString(val);\n        }\n\n        /**\n         * Validator logic for elementClasses attribute.\n         * @param {string} val\n         * @return {Boolean} True if val is a valid element classes.\n         * @protected\n         */\n        validatorElementClassesFn_(val) {\n            return src$public$vendor$metaljs$src$core$$default.isString(val);\n        }\n\n        /**\n         * Validator logic for id attribute.\n         * @param {string} val\n         * @return {Boolean} True if val is a valid id.\n         * @protected\n         */\n        validatorIdFn_(val) {\n            return src$public$vendor$metaljs$src$core$$default.isString(val);\n        }\n\n        /**\n         * Provides the default value for element attribute.\n         * @return {Element} The element.\n         * @protected\n         */\n        valueElementFn_() {\n            return document.createElement(this.constructor.ELEMENT_TAG_NAME_MERGED);\n        }\n\n        /**\n         * Provides the default value for id attribute.\n         * @return {string} The id.\n         * @protected\n         */\n        valueIdFn_() {\n            return this.element.id || this.makeId_();\n        }\n    }\n\n    /**\n     * Component attributes definition.\n     * @type {Object}\n     * @static\n     */\n    src$public$vendor$metaljs$src$component$Component$$Component.ATTRS = {\n        /**\n         * Component element bounding box.\n         * @type {Element}\n         * @writeOnce\n         */\n        element: {\n            setter: 'setterElementFn_',\n            validator: 'validatorElementFn_',\n            valueFn: 'valueElementFn_',\n            writeOnce: true\n        },\n\n        /**\n         * CSS classes to be applied to the element.\n         * @type {Array.<string>}\n         */\n        elementClasses: {\n            validator: 'validatorElementClassesFn_'\n        },\n\n        /**\n         * Component element id. If not specified will be generated.\n         * @type {string}\n         * @writeOnce\n         */\n        id: {\n            validator: 'validatorIdFn_',\n            valueFn: 'valueIdFn_',\n            writeOnce: true\n        }\n    };\n\n    /**\n     * CSS classes to be applied to the element.\n     * @type {string}\n     * @protected\n     * @static\n     */\n    src$public$vendor$metaljs$src$component$Component$$Component.ELEMENT_CLASSES = 'component';\n\n    /**\n     * Element tag name is a string that specifies the type of element to be\n     * created. The nodeName of the created element is initialized with the\n     * value of tag name.\n     * @type {string}\n     * @default div\n     * @protected\n     * @static\n     */\n    src$public$vendor$metaljs$src$component$Component$$Component.ELEMENT_TAG_NAME = 'div';\n\n    /**\n     * Surface tag name is a string that specifies the type of element to be\n     * created for the surfaces. The nodeName of the created element is\n     * initialized with the value of tag name.\n     * @type {string}\n     * @default div\n     * @protected\n     * @static\n     */\n    src$public$vendor$metaljs$src$component$Component$$Component.SURFACE_TAG_NAME = 'div';\n\n    /**\n     * Cache states for the component.\n     * @enum {string}\n     */\n    src$public$vendor$metaljs$src$component$Component$$Component.Cache = {\n        /**\n         * Cache is not allowed for this state.\n         */\n        NOT_CACHEABLE: -1,\n\n        /**\n         * Cache not initialized.\n         */\n        NOT_INITIALIZED: -2\n    };\n\n    /**\n     * Errors thrown by the component.\n     * @enum {string}\n     */\n    src$public$vendor$metaljs$src$component$Component$$Component.Error = {\n        /**\n         * Error when the component is already rendered and another render attempt\n         * is made.\n         */\n        ALREADY_RENDERED: 'Component already rendered'\n    };\n\n    /**\n     * A list with attribute names that will automatically be rejected as invalid.\n     * @type {!Array<string>}\n     */\n    src$public$vendor$metaljs$src$component$Component$$Component.INVALID_ATTRS = ['componentName', 'components', 'elementContent', 'ref'];\n\n    var src$public$vendor$metaljs$src$component$Component$$default = src$public$vendor$metaljs$src$component$Component$$Component;\n    'use strict';\n\n    /**\n     * The component registry is used to register components, so they can\n     * be accessible by name.\n     * @type {Object}\n     */\n    class src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry {\n        /**\n         * Gets the constructor function for the given component name, or\n         * undefined if it hasn't been registered yet.\n         * @param {string} name The component's name.\n         * @return {?function}\n         * @static\n         */\n        static getConstructor(name) {\n            var constructorFn = src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry.components_[name];\n            if (!constructorFn) {\n                console.error(\n                    'There\\'s no constructor registered for the component ' +\n                    'named ' + name + '. Components need to be registered via ' +\n                    'ComponentRegistry.register.'\n                );\n            }\n            return constructorFn;\n        }\n\n        /**\n         * Registers a component.\n         * @param {string} name The component's name.\n         * @param {string} constructorFn The component's constructor function.\n         * @static\n         */\n        static register(name, constructorFn) {\n            src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry.components_[name] = constructorFn;\n            constructorFn.NAME = name;\n            constructorFn.TEMPLATES = src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry.Templates[name];\n        }\n    }\n\n    /**\n     * Holds all registered components, indexed by their names.\n     * @type {!Object<string, function()>}\n     * @protected\n     * @static\n     */\n    src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry.components_ = {};\n\n    /**\n     * Holds all registered component templates, indexed by component names.\n     * Soy files automatically add their templates to this object when imported.\n     * @type {!Object<string, !Object<string, !function()>>}\n     * @static\n     */\n    src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry.Templates = {};\n\n    var src$public$vendor$metaljs$src$component$ComponentRegistry$$default = src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry;\n    'use strict';\n\n    class src$public$vendor$metaljs$src$component$ComponentCollector$$ComponentCollector extends src$public$vendor$metaljs$src$disposable$Disposable$$default {\n        constructor() {\n            super();\n        }\n\n        /**\n         * Creates the appropriate component from the given config data if it doesn't\n         * exist yet, or updates an existing instance with the new attributes.\n         * @param {string} componentName The name of the component to be extracted.\n         * @param {!Object} data The component's config data.\n         * @return {!Component} The extracted component instance.\n         */\n        createOrUpdateComponent(componentName, data) {\n            var component = src$public$vendor$metaljs$src$component$ComponentCollector$$ComponentCollector.components[data.id];\n            if (component) {\n                component.setAttrs(data);\n            } else {\n                var ConstructorFn = src$public$vendor$metaljs$src$component$ComponentRegistry$$default.getConstructor(componentName);\n                data.element = '#' + data.id;\n                component = new ConstructorFn(data);\n                src$public$vendor$metaljs$src$component$ComponentCollector$$ComponentCollector.components[data.id] = component;\n            }\n            return component;\n        }\n\n        /**\n         * Handles the given string of rendered templates, converting them to\n         * component instances.\n         * @param {string} renderedComponents Rendered components.\n         * @return {!Array<!Component>}\n         */\n        extractComponentsFromString(renderedComponents) {\n            var components = [];\n            var regex = /\\%\\%\\%\\%~comp-([^~]+)~\\%\\%\\%\\%/g;\n            var match = regex.exec(renderedComponents);\n            while(match) {\n                if (match && match.length === 2) {\n                    var id = match[1];\n                    var component = src$public$vendor$metaljs$src$component$ComponentCollector$$ComponentCollector.components[id];\n                    if (component) {\n                        components.push(component);\n                    }\n                    match = regex.exec(renderedComponents);\n                }\n            }\n            return components;\n        }\n    }\n\n    /**\n     * Holds all collected components, indexed by their id.\n     * @type {!Object<string, !Component>}\n     */\n    src$public$vendor$metaljs$src$component$ComponentCollector$$ComponentCollector.components = {};\n\n    var src$public$vendor$metaljs$src$component$ComponentCollector$$default = src$public$vendor$metaljs$src$component$ComponentCollector$$ComponentCollector;\n    'use strict';\n\n    /**\n     * Collects inline events from a passed element, detaching previously\n     * attached events that are not being used anymore.\n     * @param {Component} component\n     * @constructor\n     * @extends {Disposable}\n     */\n    class src$public$vendor$metaljs$src$component$EventsCollector$$EventsCollector extends src$public$vendor$metaljs$src$disposable$Disposable$$default {\n        constructor(component) {\n            super();\n\n            if (!component) {\n                throw new Error('The component instance is mandatory');\n            }\n\n            /**\n             * Holds the component intance.\n             * @type {!Component}\n             * @protected\n             */\n            this.component_ = component;\n\n            /**\n             * Holds the attached delegate event handles, indexed by the css selector.\n             * @type {!Object<string, !DomEventHandle>}\n             * @protected\n             */\n            this.eventHandles_ = {};\n\n            /**\n             * Holds flags indicating which selectors a group has listeners for.\n             * @type {!Object<string, !Object<string, boolean>>}\n             * @protected\n             */\n            this.groupHasListener_ = {};\n        }\n\n        /**\n         * Attaches the listener described by the given params, unless it has already\n         * been attached.\n         * @param {string} eventType\n         * @param {string} fnName\n         * @param {boolean} permanent\n         * @protected\n         */\n        attachListener_(eventType, fnName, groupName) {\n            var selector = '[data-on' + eventType + '=\"' + fnName + '\"]';\n\n            this.groupHasListener_[groupName][selector] = true;\n\n            if (!this.eventHandles_[selector]) {\n                var fn = this.component_[fnName].bind(this.component_);\n                this.eventHandles_[selector] = this.component_.delegate(eventType, selector, fn);\n            }\n        }\n\n        /**\n         * Attaches all listeners declared as attributes on the given element and\n         * its children.\n         * @param {string} content\n         * @param {boolean} groupName\n         */\n        attachListeners(content, groupName) {\n            this.groupHasListener_[groupName] = {};\n            this.attachListenersFromHtml_(content, groupName);\n        }\n\n        /**\n         * Attaches listeners found in the given html content.\n         * @param {string} content\n         * @param {boolean} groupName\n         * @protected\n         */\n        attachListenersFromHtml_(content, groupName) {\n            if (content.indexOf('data-on') === -1) {\n                return;\n            }\n            var regex = /data-on([a-z]+)=['|\"](\\w+)['|\"]/g;\n            var match = regex.exec(content);\n            while(match) {\n                this.attachListener_(match[1], match[2], groupName);\n                match = regex.exec(content);\n            }\n        }\n\n        /**\n         * Removes all previously attached event listeners to the component.\n         */\n        detachAllListeners() {\n            for (var selector in this.eventHandles_) {\n                if (this.eventHandles_[selector]) {\n                    this.eventHandles_[selector].removeListener();\n                }\n            }\n            this.eventHandles_ = {};\n            this.listenerCounts_ = {};\n        }\n\n        /**\n         * Detaches all existing listeners that are not being used anymore.\n         * @protected\n         */\n        detachUnusedListeners() {\n            for (var selector in this.eventHandles_) {\n                var unused = true;\n                for (var groupName in this.groupHasListener_) {\n                    if (this.groupHasListener_[groupName][selector]) {\n                        unused = false;\n                        break;\n                    }\n                }\n                if (unused) {\n                    this.eventHandles_[selector].removeListener();\n                    this.eventHandles_[selector] = null;\n                }\n            }\n        }\n\n        /**\n         * @inheritDoc\n         */\n        disposeInternal() {\n            this.detachAllListeners();\n            this.component_ = null;\n        }\n    }\n\n    var src$public$vendor$metaljs$src$component$EventsCollector$$default = src$public$vendor$metaljs$src$component$EventsCollector$$EventsCollector;\n    var src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates = src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from SoyComponent.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.SoyComponent.\n     * @hassoydeltemplate {Component}\n     * @hassoydeltemplate {ComponentChildren}\n     * @hassoydeltemplate {Surface}\n     * @hassoydelcall {ComponentTemplate}\n     */\n\n    if (typeof src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent == 'undefined') { src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.component = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), opt_data.componentName, true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.component.soyTemplateName = 'Templates.SoyComponent.component';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.surface = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(opt_data.content));\n    };\n    if (goog.DEBUG) {\n      src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.surface.soyTemplateName = 'Templates.SoyComponent.surface';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s6_0084916f = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.component(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s6_0084916f.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s6_0084916f';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Component'), '', 0, src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s6_0084916f);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s8_26860e4b = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-children-placeholder\" data-component-children=\"\">' + ((opt_data.children) ? soy.$$escapeHtml(opt_data.children) : '') + '</div>');\n    };\n    if (goog.DEBUG) {\n      src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s8_26860e4b.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s8_26860e4b';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentChildren'), '', 0, src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s8_26860e4b);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s16_ec6fc81f = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.surface(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s16_ec6fc81f.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s16_ec6fc81f';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Surface'), '', 0, src$public$vendor$metaljs$src$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s16_ec6fc81f);\n\n    'use strict';\n\n    /**\n     * We need to listen to calls to the SoyComponent template so we can use them to\n     * properly instantiate and update child components defined through soy.\n     * TODO: Switch to using proper AOP.\n     */\n    var src$public$vendor$metaljs$src$soy$SoyComponent$$originalTemplate = src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates.SoyComponent.component;\n    var src$public$vendor$metaljs$src$soy$SoyComponent$$originalSurfaceTemplate = src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates.SoyComponent.surface;\n\n    /**\n     * Special Component class that handles a better integration between soy templates\n     * and the components. It allows for automatic rendering of surfaces that have soy\n     * templates defined with their names, skipping the call to `getSurfaceContent`.\n     * @param {Object} opt_config An object with the initial values for this component's\n     *   attributes.\n     * @constructor\n     * @extends {Component}\n     */\n    class src$public$vendor$metaljs$src$soy$SoyComponent$$SoyComponent extends src$public$vendor$metaljs$src$component$Component$$default {\n        constructor(opt_config) {\n            src$public$vendor$metaljs$src$core$$default.mergeSuperClassesProperty(this.constructor, 'TEMPLATES', this.mergeTemplates_);\n\n            /**\n             * Gets all nested components.\n             * @type {!Array<!Component>}\n             */\n            this.components = {};\n\n            /**\n             * Helper responsible for extracting components from strings and config data.\n             * @type {!ComponentCollector}\n             * @protected\n             */\n            this.componentsCollector_ = new src$public$vendor$metaljs$src$component$ComponentCollector$$default();\n\n            /**\n             * Holds events that were listened through the element.\n             * @type {!EventHandler}\n             * @protected\n             */\n            this.eventsCollector_ = new src$public$vendor$metaljs$src$component$EventsCollector$$default(this);\n\n            /**\n             * The component that should receive extracted component references when a\n             * soy template is called. Starts with this component instance, but can change\n             * as nested templates are called.\n             * @type {!Component}\n             * @protected\n             */\n            this.componentInProcess_ = this;\n\n            /**\n             * Holds the html strings of each rendered nested component or surface,\n             * indexed by their element ids.\n             * @type {!Object<string, !{content: string, isSurface: ?boolean}>}\n             * @protected\n             */\n            this.renderedTemplates_ = {};\n\n            /**\n             * Holds the ids of the components that were most recently added via\n             * `addComponentRef`. This object is cleared after the `attach` and\n             * `renderSurfacesContent` methods are run.\n             * @type {!Array<string>}\n             * @protected\n             */\n            this.recentlyAddedComponents_ = [];\n\n            super(opt_config);\n\n            this.addSurfacesFromTemplates_();\n        }\n\n        /**\n         * Adds a component reference to the `components` variable.\n         * @param {string} ref Key that should be used to reference the give component.\n         * @param {!Component} component Component instance to be referenced.\n         */\n        addComponentRef(ref, component) {\n            this.components[ref] = component;\n            this.recentlyAddedComponents_.push(ref);\n        }\n\n        /**\n         * Adds surfaces for each registered template that is not named `element`.\n         * @protected\n         */\n        addSurfacesFromTemplates_() {\n            var templates = this.constructor.TEMPLATES_MERGED;\n            var templateNames = Object.keys(templates);\n            for (var i = 0; i < templateNames.length; i++) {\n                var templateName = templateNames[i];\n                if (templateName !== 'content' &&\n                    templateName.substr(0, 13) !== '__deltemplate') {\n\n                    var surface = this.getSurface(templateName);\n                    if (!surface) {\n                        this.addSurface(templateName, {\n                            renderAttrs: templates[templateName].params\n                        });\n                    }\n                }\n            }\n        }\n\n        /**\n         * @inheritDoc\n         * @override\n         */\n        attach(opt_parentElement, opt_siblingElement) {\n            if (this.decorating_) {\n                // We need to call the element soy template function when the component\n                // is being decorated, even though we won't use its results. This call is\n                // only needed in order for us to intercept the call data for nested components\n                // that are outside surfaces.\n                var templateContent = this.renderElementTemplate({skipSurfaceContents: true});\n                this.renderedTemplates_[this.id] = {content: templateContent};\n            }\n\n            super.attach(opt_parentElement, opt_siblingElement);\n\n            if (!this.wasRendered) {\n                this.attachNestedComponents_();\n                this.finishProcessingRenderedTemplates_();\n            }\n\n            return this;\n        }\n\n        /**\n         * Attaches the given component at the position of the given placeholder.\n         * @param {!Component} component\n         * @param {!Element} placeholder\n         * @protected\n         */\n        attachNestedComponent_(component, placeholder) {\n            var replacedPlaceholder = false;\n            if (placeholder !== component.element) {\n                // If the component's element is not the placeholder, we need to replace\n                // the placeholder with the real element.\n                placeholder.parentNode.insertBefore(component.element, placeholder);\n                placeholder.parentNode.removeChild(placeholder);\n                replacedPlaceholder = true;\n            }\n\n            if (!component.wasRendered) {\n                // If this component hasn't been rendered yet, we should do it now.\n                if (replacedPlaceholder) {\n                    // If we had to replace the placeholder with the component's element,\n                    // we'll need to copy the html over so we don't have to run soy again\n                    // to render it.\n                    src$public$vendor$metaljs$src$dom$dom$$default.append(component.element, placeholder.innerHTML);\n                }\n                component.decorateAsSubComponent();\n            }\n        }\n\n        /**\n         * Attaches recently added components to the dom.\n         * @protected\n         */\n        attachNestedComponents_() {\n            var element = this.element;\n            var componentIds = this.recentlyAddedComponents_;\n            for (var i = componentIds.length - 1; i >= 0; i--) {\n                var id = componentIds[i];\n                var placeholder = document.getElementById(id) || element.querySelector('#' + id);\n                if (placeholder) {\n                    this.attachNestedComponent_(this.components[id], placeholder);\n                }\n            }\n            this.recentlyAddedComponents_ = [];\n        }\n\n        /**\n         * Overrides Attribute's `buildAttrInfo_` method to handle the `isComponentsArray`\n         * special attribute config.\n         * @param {string} name The name of the attribute.\n         * @param {Object} config The config object of the attribute.\n         * @param {*} initialValue The initial value of the attribute.\n         * @protected\n         * @override\n         */\n        buildAttrInfo_(name, config, initialValue) {\n            if (config.isComponentsArray && !config.setter) {\n                config.setter = 'extractComponents_';\n            }\n            super.buildAttrInfo_(name, config, initialValue);\n        }\n\n        /**\n         * Builds the config data for a component from the data that was passed to its\n         * soy template function.\n         * @param {!Object} templateData\n         * @return {!Object} The component's config data.\n         * @protected\n         */\n        buildComponentConfigData_(templateData) {\n            var config = {};\n            for (var key in templateData) {\n                config[key] = templateData[key];\n            }\n            return config;\n        }\n\n        /**\n         * Builds the data object that should be passed to the real soy template function\n         * for a component.\n         * @param {!Component} component The component that was extracted from the original\n         *   template data.\n         * @param {!Object} data The original data passed to the template function.\n         * @return {!Object}\n         * @protected\n         */\n        buildTemplateData_(component, data) {\n            var newData = {};\n            var attrNames = component.getAttrNames();\n            for (var i = 0; i < attrNames.length; i++) {\n                var name = attrNames[i];\n                if (name !== 'element' && !component.getAttrConfig(name).isComponentsArray) {\n                    newData[name] = component[name];\n                }\n            }\n            newData.componentName = data.componentName;\n            newData.children = data.children;\n            return newData;\n        }\n\n        /**\n         * Overrides the original `cacheSurfaceContent_` function from `Component`, so it\n         * will cache a version of the surface content without nested component contents\n         * (that is, before replacing their placeholders with the contents).\n         * @param {string} surfaceId\n         * @param {string} content\n         * @override\n         */\n        cacheSurfaceContent(surfaceId, content) {\n            if (this.decorating_) {\n                return super.cacheSurfaceContent(surfaceId, content);\n            }\n\n            var elementId = this.makeSurfaceId_(surfaceId);\n            if (this.renderedTemplates_[elementId]) {\n                content = this.renderedTemplates_[elementId].content;\n            }\n            super.cacheSurfaceContent(surfaceId, content);\n        }\n\n        /**\n         * Decorates this component as a subcomponent, meaning that no rendering is\n         * needed since it was already rendered by the parent component.\n         */\n        decorateAsSubComponent() {\n            this.decoratingAsSubcomponent_ = true;\n\n            this.syncAttrs_();\n            this.attach();\n\n            this.wasRendered = true;\n            this.decoratingAsSubcomponent_ = false;\n        }\n\n        /**\n         * @inheritDoc\n         * @override\n         */\n        detach() {\n            this.eventsCollector_.detachAllListeners();\n            super.detach();\n            return this;\n        }\n\n        /**\n         * Extracts components from the given value, if it's a rendered soy template.\n         * Otherwise, returns the original value.\n         * @param {!Array|string} val\n         * @return {!Array}\n         * @protected\n         */\n        extractComponents_(val) {\n            if (this.hasSubcomponents_(val)) {\n                return this.componentsCollector_.extractComponentsFromString(val);\n            }\n            return val;\n        }\n\n        /**\n         * Finishes processing the templates rendered by this component. This processing\n         * includes attaching listeners and caching surface contents.\n         * @protected\n         */\n        finishProcessingRenderedTemplates_() {\n            src$public$vendor$metaljs$src$component$ComponentCollector$$default.components[this.id] = this;\n            for (var id in this.renderedTemplates_) {\n                var componentId = id;\n                if (this.renderedTemplates_[id].isSurface) {\n                    componentId = src$public$vendor$metaljs$src$component$Component$$default.extractComponentId(id);\n                }\n                var componentInProcess = src$public$vendor$metaljs$src$component$ComponentCollector$$default.components[componentId];\n                componentInProcess.getEventsCollector().attachListeners(this.renderedTemplates_[id].content, id);\n\n                if (this.renderedTemplates_[id].isSurface) {\n                    var surfaceId = id.substr(componentId.length + 1);\n                    componentInProcess.cacheSurfaceContent(surfaceId, this.renderedTemplates_[id].content);\n                }\n            }\n            this.renderedTemplates_ = {};\n        }\n\n        /**\n         * Gets this component's `EventsCollector` instance.\n         * @return {!EventsCollector}\n         */\n        getEventsCollector() {\n            return this.eventsCollector_;\n        }\n\n        /**\n         * Overrides the default behavior so that this can automatically render\n         * the appropriate soy template when one exists.\n         * @param {string} surfaceId The surface id.\n         * @return {Object|string} The content to be rendered.\n         * @protected\n         * @override\n         */\n        getSurfaceContent_(surfaceId) {\n            var surfaceTemplate = this.constructor.TEMPLATES_MERGED[surfaceId];\n            if (src$public$vendor$metaljs$src$core$$default.isFunction(surfaceTemplate)) {\n                var content = this.renderTemplate_(surfaceTemplate);\n                this.renderedTemplates_[this.makeSurfaceId_(surfaceId)] = {\n                    content: content,\n                    isSurface: true\n                };\n                return this.replaceComponentStringPlaceholders_(content);\n            }\n            return super.getSurfaceContent_(surfaceId);\n        }\n\n        /**\n         * Handles a call to the SoyComponent surface template.\n         * @param {!Object} data The data the template was called with.\n         * @param {(null|undefined)=} ignored Second argument for soy templates.\n         * @param {Object.<string, *>=} ijData Optional injected data.\n         * @return {string} The original return value of the template.\n         * @protected\n         */\n        handleSurfaceCall_(data, ignored, ijData) {\n            var rendered = src$public$vendor$metaljs$src$soy$SoyComponent$$originalSurfaceTemplate(data, ignored, ijData);\n            this.renderedTemplates_[data.id] = {\n                content: rendered.content,\n                isSurface: true\n            };\n            return '%%%%~surface-' + data.id + '~%%%%';\n        }\n\n        /**\n         * Handles a call to the SoyComponent component template.\n         * @param {!Object} data The data the template was called with.\n         * @param {(null|undefined)=} ignored Second argument for soy templates.\n         * @param {Object.<string, *>=} ijData Optional injected data.\n         * @return {string} The original return value of the template.\n         * @protected\n         */\n        handleTemplateCall_(data, ignored, ijData) {\n            var config = this.buildComponentConfigData_(data);\n            var component = this.componentsCollector_.createOrUpdateComponent(data.componentName, config);\n            this.componentInProcess_.addComponentRef(data.id, component);\n\n            var prevComponentInProcess = this.componentInProcess_;\n            this.componentInProcess_ = component;\n            var newData = this.buildTemplateData_(component, data);\n            var renderedComponent = src$public$vendor$metaljs$src$soy$SoyComponent$$originalTemplate(newData, ignored, ijData);\n            this.renderedTemplates_[data.id] = renderedComponent;\n            this.componentInProcess_ = prevComponentInProcess;\n\n            return '%%%%~comp-' + data.id + '~%%%%';\n        }\n\n        /**\n         * Checks if the given value has subcomponents to be extracted.\n         * @param {*} value\n         * @return {boolean}\n         * @protected\n         */\n        hasSubcomponents_(value) {\n            return value instanceof soydata.SanitizedHtml;\n        }\n\n        /**\n         * Merges an array of values for the `TEMPLATES` property into a single object.\n         * @param {!Array} values The values to be merged.\n         * @return {!Object} The merged value.\n         * @protected\n         */\n        mergeTemplates_(values) {\n            return src$public$vendor$metaljs$src$object$object$$default.mixin.apply(null, [{}].concat(values.reverse()));\n        }\n\n        /**\n         * Renders this component's child components, if their placeholder is found.\n         * @param {!Array<!Component>} children\n         * @protected\n         * TODO(edu): Re-think this part.\n         */\n        renderChildrenComponents_(children) {\n            var id = this.makeSurfaceId_('children-placeholder');\n            var placeholder = document.getElementById(id) || this.element.querySelector('#' + id);\n            if (placeholder && children.length) {\n                src$public$vendor$metaljs$src$dom$dom$$default.removeChildren(placeholder);\n                children.forEach(function(child) {\n                    if (child.wasRendered) {\n                        src$public$vendor$metaljs$src$dom$dom$$default.append(placeholder, child.element);\n                    } else {\n                        child.render(placeholder);\n                    }\n                });\n            }\n        }\n\n        /**\n         * Renders the main element's template.\n         * @param {Object=} opt_injectedData\n         * @return {?string} The template's result content, or undefined if the\n         *   template doesn't exist.\n         */\n        renderElementTemplate(opt_injectedData) {\n            var elementTemplate = this.constructor.TEMPLATES_MERGED.content;\n            if (src$public$vendor$metaljs$src$core$$default.isFunction(elementTemplate)) {\n                return this.renderTemplate_(elementTemplate, opt_injectedData);\n            }\n        }\n\n        /**\n         * Overrides the behavior of this method to automatically render the element\n         * template if it's defined and to automatically attach listeners to all\n         * specified events by the user in the template. Also handles any calls to\n         * component templates.\n         * @override\n         */\n        renderInternal() {\n            var templateContent = this.renderElementTemplate();\n            if (templateContent) {\n                this.renderedTemplates_[this.id] = {content: templateContent};\n                templateContent = this.replaceComponentStringPlaceholders_(templateContent);\n                src$public$vendor$metaljs$src$dom$dom$$default.append(this.element, templateContent);\n            }\n        }\n\n        /**\n         * @inheritDoc\n         */\n        renderSurfacesContent_(surfaces) {\n            // If this component is still being rendered we shouldn't render\n            // surfaces content or attach inline listeners, since these will\n            // already be done for the entire content.\n            if (this.inDocument || this.decorating_) {\n                super.renderSurfacesContent_(surfaces);\n                this.renderedTemplates_ = {};\n            }\n            if (this.inDocument) {\n                this.attachNestedComponents_();\n                this.eventsCollector_.detachUnusedListeners();\n            }\n        }\n\n        /**\n         * Renders the specified template.\n         * @param {!function()} templateFn\n         * @param {Object=} opt_injectedData\n         * @return {string} The template's result content.\n         */\n        renderTemplate_(templateFn, opt_injectedData) {\n            src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates.SoyComponent.component = this.handleTemplateCall_.bind(this);\n            src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates.SoyComponent.surface = this.handleSurfaceCall_.bind(this);\n            var content = templateFn(this, null, opt_injectedData || {}).content;\n            src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates.SoyComponent.component = src$public$vendor$metaljs$src$soy$SoyComponent$$originalTemplate;\n            src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates.SoyComponent.surface = src$public$vendor$metaljs$src$soy$SoyComponent$$originalSurfaceTemplate;\n            return content;\n        }\n\n        /**\n         * Replaces the matched placeholder with the appropriate component's content, if\n         * it exists. Otherwise, keep the original content as it is.\n         * @param {string} match String placeholder.\n         * @param {string} type Either `comp` or `surface`.\n         * @param {string} id The id of the component that should replace the placeholder.\n         * @return {string} The content that should replace the placeholder.\n         * @protected\n         */\n        replaceComponentStringPlaceholder_(match, type, id) {\n            return this.renderedTemplates_[id] ? this.renderedTemplates_[id].content : match[0];\n        }\n\n        /**\n         * Replaces all string placeholders added to the given content by `handleTemplateCall_`\n         * with the real component content that should have been inserted there instead.\n         * @param {string} content\n         * @return {string} The content string with the replaced placeholders.\n         * @protected\n         */\n        replaceComponentStringPlaceholders_(content) {\n            var regex = /\\%\\%\\%\\%~(comp|surface)-([^~]+)~\\%\\%\\%\\%/g;\n            var previousContent;\n            do {\n                previousContent = content;\n                content = content.replace(regex, this.replaceComponentStringPlaceholder_.bind(this));\n            } while (previousContent !== content);\n            return content;\n        }\n\n        /**\n         * @inheritDoc\n         * @override\n         */\n        replaceSurfaceContent_(surfaceId, content) {\n            var id = this.makeSurfaceId_(surfaceId);\n            this.eventsCollector_.attachListeners(this.renderedTemplates_[id].content, id);\n            super.replaceSurfaceContent_(surfaceId, content);\n        }\n\n        /**\n         * Syncs the component according to the new value of the `children` attribute.\n         */\n        syncChildren(newVal, prevVal) {\n            if (!this.decoratingAsSubcomponent_ && !src$public$vendor$metaljs$src$array$array$$default.equal(newVal, prevVal || [])) {\n                this.renderChildrenComponents_(newVal);\n            }\n        }\n\n        /**\n         * Validator logic for `children` element.\n         * @param {*} val\n         * @return {boolean}\n         * @protected\n         */\n        validatorChildrenFn_(val) {\n            return this.hasSubcomponents_(val) || Array.isArray(val);\n        }\n\n        /**\n         * Provides the default value for element attribute.\n         * @return {Element} The element.\n         * @protected\n         */\n        valueElementFn_() {\n            var templateFn = soy.$$getDelegateFn(this.constructor.NAME, 'element', true);\n            var attrs = this.getAttrs();\n            attrs.elementContent = '';\n            attrs.id = attrs.id || this.makeId_();\n            var rendered = templateFn(attrs, null, {}).content;\n            if (!rendered) {\n                return super.valueElementFn_();\n            }\n\n            var frag = src$public$vendor$metaljs$src$dom$dom$$default.buildFragment(rendered);\n            var element = frag.childNodes[0];\n\n            // Remove element from fragment, so it won't have a parent. Otherwise,\n            // the `attach` method will think that the element has already been\n            // attached.\n            frag.removeChild(element);\n\n            return element;\n        }\n\n        /**\n         * Overrides the default value function for the `id` attribute, so it will\n         * handle the case where `element` is in the middle of its creation, which\n         * means the id should be generated.\n         * @return {string} The id.\n         * @protected\n         * @override\n         */\n        valueIdFn_() {\n            if (!this.element) {\n                return this.makeId_();\n            }\n            return super.valueIdFn_();\n        }\n    }\n\n    /**\n     * SoyComponent attributes definition.\n     * @type {Object}\n     * @static\n     */\n    src$public$vendor$metaljs$src$soy$SoyComponent$$SoyComponent.ATTRS = {\n        /**\n         * Child components passed to this component.\n         * @type {Array<Component>}\n         */\n        children: {\n            isComponentsArray: true,\n            validator: 'validatorChildrenFn_',\n            valueFn: function() {\n                return [];\n            }\n        }\n    };\n\n    /**\n     * The soy templates for this component. Templates that have the same\n     * name of a registered surface will be used for automatically rendering\n     * it.\n     * @type {Object<string, !function(Object):Object>}\n     * @protected\n     * @static\n     */\n    src$public$vendor$metaljs$src$soy$SoyComponent$$SoyComponent.TEMPLATES = {};\n\n    var src$public$vendor$metaljs$src$soy$SoyComponent$$default = src$public$vendor$metaljs$src$soy$SoyComponent$$SoyComponent;\n    'use strict';\n\n    class lib$scripts$Component$$Component extends src$public$vendor$metaljs$src$soy$SoyComponent$$default {\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      syncVisible(visible) {\n        this.element.style.display = visible ? null : 'none';\n      }\n    }\n\n    lib$scripts$Component$$Component.ATTRS = {\n      visible: {\n        validator: src$public$vendor$metaljs$src$core$$default.isBoolean,\n        value: true\n      }\n    };\n\n    var lib$scripts$Component$$default = lib$scripts$Component$$Component;\n    var lib$scripts$Modal$soy$$Templates = src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from Modal.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.Modal.\n     * @hassoydeltemplate {ComponentElement}\n     * @hassoydeltemplate {ComponentTemplate}\n     * @hassoydeltemplate {Modal}\n     * @hassoydeltemplate {Modal.body}\n     * @hassoydeltemplate {Modal.footer}\n     * @hassoydeltemplate {Modal.header}\n     * @hassoydelcall {Component}\n     * @hassoydelcall {ComponentElement}\n     * @hassoydelcall {Modal}\n     * @hassoydelcall {Modal.body}\n     * @hassoydelcall {Modal.footer}\n     * @hassoydelcall {Modal.header}\n     * @hassoydelcall {Surface}\n     */\n\n    if (typeof lib$scripts$Modal$soy$$Templates.Modal == 'undefined') { lib$scripts$Modal$soy$$Templates.Modal = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.content = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.content.soyTemplateName = 'Templates.Modal.content';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.body = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.body) ? soy.$$escapeHtml(opt_data.body) : '');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.body.soyTemplateName = 'Templates.Modal.body';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.footer = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.footer) ? soy.$$escapeHtml(opt_data.footer) : '');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.footer.soyTemplateName = 'Templates.Modal.footer';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.header = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.header) ? '<a class=\"modal-close icon-12-close-long\" data-onclick=\"close\"></a>' + soy.$$escapeHtml(opt_data.header) : '');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.header.soyTemplateName = 'Templates.Modal.header';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s19_65c2d4d4 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<section id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-body\">' + soy.$$escapeHtml(opt_data.elementContent) + '</section>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s19_65c2d4d4.soyTemplateName = 'Templates.Modal.__deltemplate_s19_65c2d4d4';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s19_65c2d4d4);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s25_c9897a65 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<footer id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-footer\">' + soy.$$escapeHtml(opt_data.elementContent) + '</footer>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s25_c9897a65.soyTemplateName = 'Templates.Modal.__deltemplate_s25_c9897a65';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s25_c9897a65);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s31_499dc9aa = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<header id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-header\">' + soy.$$escapeHtml(opt_data.elementContent) + '</header>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s31_499dc9aa.soyTemplateName = 'Templates.Modal.__deltemplate_s31_499dc9aa';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s31_499dc9aa);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s37_45b138fb = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Modal'}), null, opt_ijData)));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s37_45b138fb.soyTemplateName = 'Templates.Modal.__deltemplate_s37_45b138fb';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s37_45b138fb);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s40_29e4e741 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$Modal$soy$$Templates.Modal.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s40_29e4e741.soyTemplateName = 'Templates.Modal.__deltemplate_s40_29e4e741';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Modal', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s40_29e4e741);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s44_31c78f9d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s44_31c78f9d.soyTemplateName = 'Templates.Modal.__deltemplate_s44_31c78f9d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s44_31c78f9d);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s46_df8ef55a = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"modal component' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? ' ' + opt_data.elementClasses : '') + '\" data-component=\"\">' + soy.$$escapeHtml(opt_data.elementContent) + '</div>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s46_df8ef55a.soyTemplateName = 'Templates.Modal.__deltemplate_s46_df8ef55a';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s46_df8ef55a);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s54_90747620 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$Modal$soy$$Templates.Modal.body(opt_data, null, opt_ijData)), id: opt_data.id + '-body'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s54_90747620.soyTemplateName = 'Templates.Modal.__deltemplate_s54_90747620';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s54_90747620);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s63_231e36e7 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$Modal$soy$$Templates.Modal.footer(opt_data, null, opt_ijData)), id: opt_data.id + '-footer'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s63_231e36e7.soyTemplateName = 'Templates.Modal.__deltemplate_s63_231e36e7';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s63_231e36e7);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s72_b8354b7d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$Modal$soy$$Templates.Modal.header(opt_data, null, opt_ijData)), id: opt_data.id + '-header'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s72_b8354b7d.soyTemplateName = 'Templates.Modal.__deltemplate_s72_b8354b7d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s72_b8354b7d);\n\n    lib$scripts$Modal$soy$$Templates.Modal.body.params = [\"body\"];\n    lib$scripts$Modal$soy$$Templates.Modal.footer.params = [\"footer\"];\n    lib$scripts$Modal$soy$$Templates.Modal.header.params = [\"header\"];\n    'use strict';\n\n    /**\n     * Modal component.\n     */\n    class lib$scripts$Modal$$Modal extends lib$scripts$Component$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      /**\n       * Closes the tooltip.\n       */\n      close() {\n        this.visible = false;\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        src$public$vendor$metaljs$src$dom$dom$$default.exitDocument(this.overlayElement);\n        super.disposeInternal();\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncOverlay(overlay) {\n        src$public$vendor$metaljs$src$dom$dom$$default[overlay ? 'enterDocument' : 'exitDocument'](this.overlayElement);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncVisible(visible) {\n        if (this.overlay) {\n          this.syncOverlay(visible);\n        }\n        super.syncVisible(visible);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      valueOverlayElementFn_() {\n        return src$public$vendor$metaljs$src$dom$dom$$default.buildFragment('<div class=\"overlay\"></div>').firstChild\n      }\n    }\n\n    /**\n     * Default modal elementClasses.\n     * @default modal\n     * @type {String}\n     * @static\n     */\n    lib$scripts$Modal$$Modal.ELEMENT_CLASSES = 'modal';\n\n    lib$scripts$Modal$$Modal.ATTRS = {\n      /**\n       * Content to be placed inside modal body.\n       * @type {String}\n       */\n      body: {\n        validator: src$public$vendor$metaljs$src$core$$default.isString\n      },\n\n      /**\n       * Modal default elementClasses attribute.\n       * @default centered\n       * @type {String}\n       */\n      elementClasses: {\n        value: 'centered'\n      },\n\n      /**\n       * Content to be placed inside modal footer.\n       * @type {String}\n       */\n      footer: {\n        validator: src$public$vendor$metaljs$src$core$$default.isString\n      },\n\n      /**\n       * Content to be placed inside modal header.\n       * @type {String}\n       */\n      header: {\n        validator: src$public$vendor$metaljs$src$core$$default.isString\n      },\n\n      /**\n       * Whether overlay should be visible when modal is visible.\n       * @type {boolean}\n       * @default true\n       */\n      overlay: {\n        validator: src$public$vendor$metaljs$src$core$$default.isBoolean,\n        value: true\n      },\n\n      /**\n       * Element to be used as overlay.\n       * @type {Element}\n       */\n      overlayElement: {\n        initOnly: true,\n        valueFn: 'valueOverlayElementFn_'\n      }\n    };\n\n    src$public$vendor$metaljs$src$component$ComponentRegistry$$default.register('Modal', lib$scripts$Modal$$Modal);\n\n    var lib$scripts$Modal$$default = lib$scripts$Modal$$Modal;\n    'use strict';\n\n    /**\n     * Position utility. Computes region or best region to align an element with\n     * another. Regions are relative to viewport, make sure to use element with\n     * position fixed, or position absolute when the element first positioned\n     * parent is the body element.\n     */\n    class lib$scripts$Position$$Position {\n\n      /**\n       * Aligns the element with the best region around alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {!Element} element Element to be aligned.\n       * @param {!Element} alignElement Element to align with.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n       *     The initial position to try. Options `Position.Top`, `Position.Right`,\n       *     `Position.Bottom`, `Position.Left`.\n       * @static\n       */\n      static align(element, alignElement, position) {\n        var bestRegion = this.getAlignBestRegion(element, alignElement, position);\n\n        var computedStyle = window.getComputedStyle(element, null);\n        if (computedStyle.getPropertyValue('position') !== 'fixed') {\n          var docEl = window.document.documentElement;\n          bestRegion.top += docEl.clientTop + window.pageYOffset;\n          bestRegion.left += docEl.clientLeft + window.pageXOffset;\n        }\n\n        element.style.top = bestRegion.top + 'px';\n        element.style.left = bestRegion.left + 'px';\n      }\n\n      /**\n       * Returns the best region to align element with alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {!Element} element Element to be aligned.\n       * @param {!Element} alignElement Element to align with.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n       *     The initial position to try. Options `Position.Top`, `Position.Right`,\n       *     `Position.Bottom`, `Position.Left`.\n       * @return {DOMRect} Best region to align element.\n       * @static\n       */\n      static getAlignBestRegion(element, alignElement, position) {\n        var bestArea = 0;\n        var bestPosition = position;\n        var bestRegion = this.getAlignRegion(element, alignElement, bestPosition);\n        var tryPosition = bestPosition;\n        var tryRegion = bestRegion;\n        var viewportRegion = src$public$vendor$metal$position$src$position$$default.getRegion(window);\n\n        for (var i = 0; i < 4;) {\n          if (src$public$vendor$metal$position$src$position$$default.intersectRegion(viewportRegion, tryRegion)) {\n            var visibleRegion = src$public$vendor$metal$position$src$position$$default.intersection(viewportRegion, tryRegion);\n            var area = visibleRegion.width * visibleRegion.height;\n            if (area > bestArea) {\n              bestArea = area;\n              bestRegion = tryRegion;\n              bestPosition = tryPosition;\n            }\n            if (src$public$vendor$metal$position$src$position$$default.insideViewport(tryRegion)) {\n              break;\n            }\n          }\n          tryPosition = (position + (++i)) % 4;\n          tryRegion = this.getAlignRegion(element, alignElement, tryPosition);\n        }\n\n        return bestRegion;\n      }\n\n      /**\n       * Returns the region to align element with alignElement. The element is\n       * always aligned in the middle of alignElement axis.\n       * @param {!Element} element Element to be aligned.\n       * @param {!Element} alignElement Element to align with.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n       *     The position to align. Options `Position.Top`, `Position.Right`,\n       *     `Position.Bottom`, `Position.Left`.\n       * @return {DOMRect} Region to align element.\n       * @static\n       */\n      static getAlignRegion(element, alignElement, position) {\n        var r1 = src$public$vendor$metal$position$src$position$$default.getRegion(alignElement);\n        var r2 = src$public$vendor$metal$position$src$position$$default.getRegion(element);\n        var top = 0;\n        var left = 0;\n\n        switch(position) {\n          case lib$scripts$Position$$Position.Top:\n            top = r1.top - r2.height;\n            left = r1.left + r1.width/2 - r2.width/2;\n            break;\n          case lib$scripts$Position$$Position.Right:\n            top = r1.top + r1.height/2 - r2.height/2;\n            left = r1.left + r1.width;\n            break;\n          case lib$scripts$Position$$Position.Bottom:\n            top = r1.bottom;\n            left = r1.left + r1.width/2 - r2.width/2;\n            break;\n          case lib$scripts$Position$$Position.Left:\n            top = r1.top + r1.height/2 - r2.height/2;\n            left = r1.left - r2.width;\n            break;\n        }\n\n        return {\n          bottom: top + r2.height,\n          height: r2.height,\n          left: left,\n          right: left + r2.width,\n          top: top,\n          width: r2.width\n        };\n      }\n\n      /**\n       * Checks if specified value is a valid position. Options `Position.Top`,\n       *     `Position.Right`, `Position.Bottom`, `Position.Left`.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} val\n       * @return {Boolean} Returns true if value is a valid position.\n       * @static\n       */\n      static isValidPosition(val) {\n        return 0 <= val && val <= 3;\n      }\n    }\n\n    /**\n     * Represents the `Position.Top` constant.\n     * @type {Number}\n     * @default 0\n     * @static\n     */\n    lib$scripts$Position$$Position.Top = 0;\n\n    /**\n     * Represents the `Position.Right` constant.\n     * @type {Number}\n     * @default 1\n     * @static\n     */\n    lib$scripts$Position$$Position.Right = 1;\n\n    /**\n     * Represents the `Position.Bottom` constant.\n     * @type {Number}\n     * @default 2\n     * @static\n     */\n    lib$scripts$Position$$Position.Bottom = 2;\n\n    /**\n     * Represents the `Position.Left` constant.\n     * @type {Number}\n     * @default 3\n     * @static\n     */\n    lib$scripts$Position$$Position.Left = 3;\n\n    var lib$scripts$Position$$default = lib$scripts$Position$$Position;\n    'use strict';\n\n    /**\n     * Scrollspy utility.\n     */\n    class lib$scripts$Scrollspy$$Scrollspy extends src$public$vendor$metaljs$src$attribute$Attribute$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n\n        /**\n         * Holds the active index.\n         * @type {Number}\n         * @private\n         * @default -1\n         */\n        this.activeIndex = -1;\n\n        /**\n         * Holds the regions cache.\n         * @type {Object}\n         * @private\n         * @default []\n         */\n        this.regions = [];\n\n        /**\n         * Holds event handle that listens scroll shared event emitter proxy.\n         * @type {EventHandle}\n         * @protected\n         */\n        this.scrollHandle_ = src$public$vendor$metaljs$src$dom$dom$$default.on(this.scrollElement, 'scroll', this.checkPosition.bind(this));\n\n        this.refresh();\n        this.checkPosition();\n        this.on('elementChanged', this.refresh);\n        this.on('offsetChanged', this.refresh);\n        this.on('scrollElementChanged', this.refresh);\n        this.on('selectorChanged', this.refresh);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        this.deactivateAll();\n        this.scrollHandle_.dispose();\n        super.disposeInternal();\n      }\n\n      /**\n       * Activates index matching element.\n       * @param {Number} index\n       */\n      activate(index) {\n        if (this.activeIndex >= 0) {\n          this.deactivate(this.activeIndex);\n        }\n        this.activeIndex = index;\n        src$public$vendor$metaljs$src$dom$dom$$default.addClasses(this.resolveElement(this.regions[index].link), [this.activeClass]);\n      }\n\n      /**\n       * Checks position of elements and activate the one in region.\n       */\n      checkPosition() {\n        var scrollHeight = this.getScrollHeight_();\n        var scrollTop = src$public$vendor$metal$position$src$position$$default.getScrollTop(this.scrollElement);\n\n        if (this.activeIndex >= 0 && scrollTop < this.offset) {\n          this.deactivateAll();\n          return;\n        }\n\n        if (scrollHeight !== this.scrollHeight_) {\n          this.refresh();\n          return;\n        }\n\n        if (scrollHeight < scrollTop + this.offset) {\n          this.activate(this.regions.length - 1);\n          return;\n        }\n\n        var index = this.findBestRegionAt_(scrollTop);\n        if (index >= 0 && index !== this.activeIndex) {\n          this.activate(index);\n        }\n      }\n\n      /**\n       * Deactivates index matching element.\n       * @param {Number} index\n       */\n      deactivate(index) {\n        src$public$vendor$metaljs$src$dom$dom$$default.removeClasses(this.resolveElement(this.regions[index].link), [this.activeClass]);\n      }\n\n      /**\n       * Deactivates all elements.\n       */\n      deactivateAll() {\n        for (var i = 0; i < this.regions.length; i++) {\n          this.deactivate(i);\n        }\n        this.activeIndex = -1;\n      }\n\n      /**\n       * Finds best region to activate.\n       * @param {number} scrollTop The scrollTop to use as reference.\n       * @return {number} The index of best region found.\n       */\n      findBestRegionAt_(scrollTop) {\n        var index = -1;\n        var origin = scrollTop + this.offset + this.scrollElementRegion_.top;\n        for (var i = 0; i < this.regions.length; i++) {\n          var region = this.regions[i];\n          if ((origin >= region.top) && (origin < region.bottom)) {\n            index = i;\n            break;\n          }\n        }\n        return index;\n      }\n\n      /**\n       * Gets the scroll height of `scrollElement`.\n       * @return {Number}\n       */\n      getScrollHeight_() {\n        var scrollHeight = src$public$vendor$metal$position$src$position$$default.getHeight(this.scrollElement);\n        scrollHeight += this.scrollElementRegion_.top;\n        scrollHeight -= src$public$vendor$metal$position$src$position$$default.getClientHeight(this.scrollElement);\n        return scrollHeight;\n      }\n\n      /**\n       * Refreshes all regions from document. Relevant when spying elements that\n       * nodes can be added and removed.\n       */\n      refresh() {\n        this.deactivateAll();\n\n        this.scrollElementRegion_ = src$public$vendor$metal$position$src$position$$default.getRegion(this.scrollElement);\n        this.scrollHeight_ = this.getScrollHeight_();\n\n        this.regions = [];\n        var links = this.element.querySelectorAll(this.selector);\n        var scrollTop = src$public$vendor$metal$position$src$position$$default.getScrollTop(this.scrollElement);\n        for (var i = 0; i < links.length; ++i) {\n          var link = links[i];\n          if (link.hash && (link.hash.length > 1)) {\n            var element = document.getElementById(link.hash.substring(1));\n            if (element) {\n              var region = src$public$vendor$metal$position$src$position$$default.getRegion(element);\n              this.regions.push({\n                link: link,\n                top: region.top + scrollTop,\n                bottom: region.bottom + scrollTop\n              });\n            }\n          }\n        }\n        this.sortRegions_();\n      }\n\n      /**\n       * Sorts regions from lower to higher on y-axis.\n       * @protected\n       */\n      sortRegions_() {\n        this.regions.sort(function(a, b) {\n          return a.top - b.top;\n        });\n      }\n    }\n\n    lib$scripts$Scrollspy$$Scrollspy.ATTRS = {\n      /**\n       * Class to be used as active class.\n       * @attribute activeClass\n       * @type {string}\n       */\n      activeClass: {\n        validator: src$public$vendor$metaljs$src$core$$default.isString,\n        value: 'active'\n      },\n\n      /**\n       * Function that receives the matching element as argument and return\n       * itself. Relevant when the `activeClass` must be applied to a different\n       * element, e.g. a parentNode.\n       * @type {function}\n       * @default core.identityFunction\n       */\n      resolveElement: {\n        validator: src$public$vendor$metaljs$src$core$$default.isFunction,\n        value: src$public$vendor$metaljs$src$core$$default.identityFunction\n      },\n\n      /**\n       * The scrollElement element to be used as scrollElement area for affix. The scrollElement is\n       * where the scroll event is listened from.\n       * @type {Element|Window}\n       */\n      scrollElement: {\n        setter: src$public$vendor$metaljs$src$dom$dom$$default.toElement,\n        value: document\n      },\n\n      /**\n       * Defines the offset that triggers scrollspy.\n       * @type {Number}\n       * @default 0\n       */\n      offset: {\n        validator: src$public$vendor$metaljs$src$core$$default.isNumber,\n        value: 0\n      },\n\n      /**\n       * Element to be used as alignment reference of affix.\n       * @type {Element}\n       */\n      element: {\n        setter: src$public$vendor$metaljs$src$dom$dom$$default.toElement\n      },\n\n      /**\n       * Selector to query elements inside `element` to be activated.\n       * @type {Element}\n       * @default 'a'\n       */\n      selector: {\n        validator: src$public$vendor$metaljs$src$core$$default.isString,\n        value: 'a'\n      }\n    };\n\n    var lib$scripts$Scrollspy$$default = lib$scripts$Scrollspy$$Scrollspy;\n    var lib$scripts$Tooltip$soy$$Templates = src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from Tooltip.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.Tooltip.\n     * @hassoydeltemplate {ComponentElement}\n     * @hassoydeltemplate {ComponentTemplate}\n     * @hassoydeltemplate {Tooltip}\n     * @hassoydelcall {Component}\n     * @hassoydelcall {ComponentElement}\n     * @hassoydelcall {Tooltip}\n     */\n\n    if (typeof lib$scripts$Tooltip$soy$$Templates.Tooltip == 'undefined') { lib$scripts$Tooltip$soy$$Templates.Tooltip = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.content = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(opt_data.content));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.content.soyTemplateName = 'Templates.Tooltip.content';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s84_8d49094e = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Tooltip'}), null, opt_ijData)));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s84_8d49094e.soyTemplateName = 'Templates.Tooltip.__deltemplate_s84_8d49094e';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), '', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s84_8d49094e);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s87_606fdd83 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$Tooltip$soy$$Templates.Tooltip.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s87_606fdd83.soyTemplateName = 'Templates.Tooltip.__deltemplate_s87_606fdd83';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Tooltip', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s87_606fdd83);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s91_a8d4319d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s91_a8d4319d.soyTemplateName = 'Templates.Tooltip.__deltemplate_s91_a8d4319d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s91_a8d4319d);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s93_71828d2a = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip component' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? ' ' + opt_data.elementClasses : '') + '\" data-component=\"\">' + soy.$$escapeHtml(opt_data.elementContent) + '</div>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s93_71828d2a.soyTemplateName = 'Templates.Tooltip.__deltemplate_s93_71828d2a';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s93_71828d2a);\n\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.content.params = [\"content\"];\n    'use strict';\n\n    /**\n     * Tooltip component.\n     */\n    class lib$scripts$Tooltip$$Tooltip extends lib$scripts$Component$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      attached() {\n        this.align();\n      }\n\n      /**\n       * Aligns the tooltip with the best region around alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {Element=} opt_alignElement Optional element to align with.\n       */\n      align(opt_alignElement) {\n        this.syncAlignElement(opt_alignElement || this.alignElement);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncAlignElement(alignElement) {\n        if (this.inDocument && alignElement) {\n          lib$scripts$Tooltip$$Tooltip.Position.align(this.element, alignElement, this.position);\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncContent(content) {\n        if (this.inDocument) {\n          src$public$vendor$metaljs$src$dom$dom$$default.removeChildren(this.element);\n          src$public$vendor$metaljs$src$dom$dom$$default.append(this.element, content);\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncVisible(visible) {\n        super.syncVisible(visible);\n        this.align();\n      }\n    }\n\n    /**\n     * @inheritDoc\n     * @see `Position` class.\n     * @static\n     */\n    lib$scripts$Tooltip$$Tooltip.Position = lib$scripts$Position$$default;\n\n    /**\n     * Default tooltip elementClasses.\n     * @default tooltip\n     * @type {String}\n     * @static\n     */\n    lib$scripts$Tooltip$$Tooltip.ELEMENT_CLASSES = 'tooltip';\n\n    /**\n     * Tooltip attrbutes definition.\n     * @type {Object}\n     * @static\n     */\n    lib$scripts$Tooltip$$Tooltip.ATTRS = {\n      /**\n       * Element to align tooltip with.\n       * @type {Element}\n       */\n      alignElement: {\n        setter: src$public$vendor$metaljs$src$dom$dom$$default.toElement\n      },\n\n      /**\n       * Content to be placed inside tooltip.\n       * @type {String}\n       */\n      content: {\n        validator: src$public$vendor$metaljs$src$core$$default.isString\n      },\n\n      /**\n       * The position to try alignment. If not possible the best position will be\n       * found.\n       * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n       * @default Position.Bottom\n       */\n      position: {\n        validator: lib$scripts$Tooltip$$Tooltip.Position.isValidPosition,\n        value: lib$scripts$Tooltip$$Tooltip.Position.Bottom\n      }\n    };\n\n    src$public$vendor$metaljs$src$component$ComponentRegistry$$default.register('Tooltip', lib$scripts$Tooltip$$Tooltip);\n\n    var lib$scripts$Tooltip$$default = lib$scripts$Tooltip$$Tooltip;\n    var lib$scripts$TooltipMenu$soy$$Templates = src$public$vendor$metaljs$src$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from TooltipMenu.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.TooltipMenu.\n     * @hassoydeltemplate {ComponentElement}\n     * @hassoydeltemplate {ComponentTemplate}\n     * @hassoydeltemplate {TooltipMenu}\n     * @hassoydeltemplate {TooltipMenu.items}\n     * @hassoydelcall {Component}\n     * @hassoydelcall {ComponentElement}\n     * @hassoydelcall {Surface}\n     * @hassoydelcall {TooltipMenu}\n     * @hassoydelcall {TooltipMenu.items}\n     */\n\n    if (typeof lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu == 'undefined') { lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.content = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.content.soyTemplateName = 'Templates.TooltipMenu.content';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items = function(opt_data, opt_ignored, opt_ijData) {\n      var output = '';\n      var itemList105 = opt_data.items;\n      var itemListLen105 = itemList105.length;\n      for (var itemIndex105 = 0; itemIndex105 < itemListLen105; itemIndex105++) {\n        var itemData105 = itemList105[itemIndex105];\n        output += '<li class=\"tooltip-menu-item\"><a class=\"tooltip-menu-link\" href=\"' + soy.$$escapeHtmlAttribute(soy.$$filterNormalizeUri(itemData105.href ? itemData105.href : '#')) + '\">' + soy.$$escapeHtml(itemData105.content) + '</a></li>';\n      }\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(output);\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items.soyTemplateName = 'Templates.TooltipMenu.items';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s112_cfc546d2 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<nav id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip-menu ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + soy.$$escapeHtml(opt_data.elementContent) + '</nav>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s112_cfc546d2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s112_cfc546d2';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s112_cfc546d2);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s120_c0ab3df3 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<ul id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-items\" class=\"tooltip-menu-list\">' + soy.$$escapeHtml(opt_data.elementContent) + '</ul>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s120_c0ab3df3.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s120_c0ab3df3';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s120_c0ab3df3);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s126_8f8c631d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'TooltipMenu'}), null, opt_ijData)));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s126_8f8c631d.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s126_8f8c631d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), '', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s126_8f8c631d);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s129_270e148b = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s129_270e148b.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s129_270e148b';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'TooltipMenu', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s129_270e148b);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s133_da5bead2 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s133_da5bead2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s133_da5bead2';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s133_da5bead2);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s135_8278e063 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items(opt_data, null, opt_ijData)), id: opt_data.id + '-items'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s135_8278e063.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s135_8278e063';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s135_8278e063);\n\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items.params = [\"items\"];\n    'use strict';\n\n    /**\n     * TooltipMenu component.\n     */\n    class lib$scripts$TooltipMenu$$TooltipMenu extends lib$scripts$Component$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      attached() {\n        this.align();\n      }\n\n      /**\n       * Aligns the tooltip with the best region around alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {Element=} opt_alignElement Optional element to align with.\n       */\n      align(opt_alignElement) {\n        this.syncAlignElement(opt_alignElement || this.alignElement);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncAlignElement(alignElement) {\n        if (this.inDocument && alignElement) {\n          lib$scripts$TooltipMenu$$TooltipMenu.Position.align(this.element, alignElement, this.position);\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncVisible(visible) {\n        super.syncVisible(visible);\n        this.align();\n      }\n    }\n\n    /**\n     * @inheritDoc\n     * @see `Position` class.\n     * @static\n     */\n    lib$scripts$TooltipMenu$$TooltipMenu.Position = lib$scripts$Position$$default;\n\n    /**\n     * Default tooltip elementClasses.\n     * @default tooltip\n     * @type {String}\n     * @static\n     */\n    lib$scripts$TooltipMenu$$TooltipMenu.ELEMENT_CLASSES = 'tooltip-menu';\n\n    /**\n     * TooltipMenu attrbutes definition.\n     * @type {Object}\n     * @static\n     */\n    lib$scripts$TooltipMenu$$TooltipMenu.ATTRS = {\n      /**\n       * Element to align tooltip with.\n       * @type {Element}\n       */\n      alignElement: {\n        setter: src$public$vendor$metaljs$src$dom$dom$$default.toElement\n      },\n\n      /**\n       * Items to be placed inside tooltip menu. Each item must contain at least a\n       * label key.\n       * @type {!Array.<!object>}\n       */\n      items: {\n        validator: Array.isArray,\n        valueFn: function() {\n          return [];\n        }\n      },\n\n      /**\n       * The position to try alignment. If not possible the best position will be\n       * found.\n       * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n       * @default Position.Bottom\n       */\n      position: {\n        validator: lib$scripts$TooltipMenu$$TooltipMenu.Position.isValidPosition,\n        value: lib$scripts$TooltipMenu$$TooltipMenu.Position.Bottom\n      }\n    };\n\n    src$public$vendor$metaljs$src$component$ComponentRegistry$$default.register('TooltipMenu', lib$scripts$TooltipMenu$$TooltipMenu);\n\n    var lib$scripts$TooltipMenu$$default = lib$scripts$TooltipMenu$$TooltipMenu;\n    this.ui = this.ui || {};\n    this.ui.Affix = lib$scripts$Affix$$Affix;\n    this.ui.Component = lib$scripts$Component$$Component;\n    this.ui.Modal = lib$scripts$Modal$$Modal;\n    this.ui.Position = lib$scripts$Position$$Position;\n    this.ui.Scrollspy = lib$scripts$Scrollspy$$Scrollspy;\n    this.ui.Tooltip = lib$scripts$Tooltip$$Tooltip;\n    this.ui.TooltipMenu = lib$scripts$TooltipMenu$$TooltipMenu;\n    this.ui.core = src$public$vendor$metaljs$src$core$$core;\n    this.ui.dom = src$public$vendor$metaljs$src$dom$dom$$dom;\n    this.ui.position = src$public$vendor$metal$position$src$position$$position;\n    this.ui.Attribute = src$public$vendor$metaljs$src$attribute$Attribute$$Attribute;\n    this.ui.EventEmitter = src$public$vendor$metaljs$src$events$EventEmitter$$EventEmitter;\n    this.ui.EventEmitterProxy = src$public$vendor$metaljs$src$events$EventEmitterProxy$$EventEmitterProxy;\n    this.ui.SoyComponent = src$public$vendor$metaljs$src$soy$SoyComponent$$SoyComponent;\n    this.ui.ComponentRegistry = src$public$vendor$metaljs$src$component$ComponentRegistry$$ComponentRegistry;\n    this.ui.object = src$public$vendor$metaljs$src$object$object$$object;\n    this.ui.DomEventHandle = src$public$vendor$metaljs$src$events$DomEventHandle$$DomEventHandle;\n    this.ui.math = src$public$vendor$metal$position$src$math$$math;\n    this.ui.array = src$public$vendor$metaljs$src$array$array$$array;\n    this.ui.async = src$public$vendor$metaljs$src$async$async$$async;\n    this.ui.Disposable = src$public$vendor$metaljs$src$disposable$Disposable$$Disposable;\n    this.ui.EventHandle = src$public$vendor$metaljs$src$events$EventHandle$$EventHandle;\n    this.ui.Component = src$public$vendor$metaljs$src$component$Component$$Component;\n    this.ui.ComponentCollector = src$public$vendor$metaljs$src$component$ComponentCollector$$ComponentCollector;\n    this.ui.EventsCollector = src$public$vendor$metaljs$src$component$EventsCollector$$EventsCollector;\n    this.ui.features = src$public$vendor$metaljs$src$dom$features$$features;\n    this.ui.html = src$public$vendor$metaljs$src$html$html$$html;\n    this.ui.string = src$public$vendor$metaljs$src$string$string$$string;\n    this.ui.EventHandler = src$public$vendor$metaljs$src$events$EventHandler$$EventHandler;\n}).call(this);","'use strict';\n\n/**\n * A collection of core utility functions.\n * @const\n */\nclass core {\n\t/**\n\t * When defining a class Foo with an abstract method bar(), you can do:\n\t * Foo.prototype.bar = core.abstractMethod\n\t *\n\t * Now if a subclass of Foo fails to override bar(), an error will be thrown\n\t * when bar() is invoked.\n\t *\n\t * @type {!Function}\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic abstractMethod() {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Loops constructor super classes collecting its properties values. If\n\t * property is not available on the super class `undefined` will be\n\t * collected as value for the class hierarchy position.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @return {Array.<*>} Array of collected values.\n\t * TODO(*): Rethink superclass loop.\n\t */\n\tstatic collectSuperClassesProperty(constructor, propertyName) {\n\t\tvar propertyValues = [constructor[propertyName]];\n\t\twhile (constructor.__proto__ && !constructor.__proto__.isPrototypeOf(Function)) {\n\t\t\tconstructor = constructor.__proto__;\n\t\t\tpropertyValues.push(constructor[propertyName]);\n\t\t}\n\t\treturn propertyValues;\n\t}\n\n\t/**\n\t * Gets an unique id. If `opt_object` argument is passed, the object is\n\t * mutated with an unique id. Consecutive calls with the same object\n\t * reference won't mutate the object again, instead the current object uid\n\t * returns. See {@link core.UID_PROPERTY}.\n\t * @type {opt_object} Optional object to be mutated with the uid. If not\n\t *     specified this method only returns the uid.\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic getUid(opt_object) {\n\t\tif (opt_object) {\n\t\t\treturn opt_object[core.UID_PROPERTY] ||\n\t\t\t\t(opt_object[core.UID_PROPERTY] = core.uniqueIdCounter_++);\n\t\t}\n\t\treturn core.uniqueIdCounter_++;\n\t}\n\n\t/**\n\t * The identity function. Returns its first argument.\n\t * @param {*=} opt_returnValue The single value that will be returned.\n\t * @return {?} The first argument.\n\t */\n\tstatic identityFunction(opt_returnValue) {\n\t\treturn opt_returnValue;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a boolean.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is boolean.\n\t */\n\tstatic isBoolean(val) {\n\t\treturn typeof val === 'boolean';\n\t}\n\n\t/**\n\t * Returns true if the specified value is not undefined.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is defined.\n\t */\n\tstatic isDef(val) {\n\t\treturn val !== undefined;\n\t}\n\n\t/**\n\t * Returns true if value is not undefined or null.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isDefAndNotNull(val) {\n\t\treturn core.isDef(val) && !core.isNull(val);\n\t}\n\n\t/**\n\t * Returns true if value is a document.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isDocument(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 9;\n\t}\n\n\t/**\n\t * Returns true if value is a dom element.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isElement(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 1;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a function.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a function.\n\t */\n\tstatic isFunction(val) {\n\t\treturn typeof val === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is null.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isNull(val) {\n\t\treturn val === null;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a number.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a number.\n\t */\n\tstatic isNumber(val) {\n\t\treturn typeof val === 'number';\n\t}\n\n\t/**\n\t * Returns true if value is a window.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isWindow(val) {\n\t\treturn val !== null && val === val.window;\n\t}\n\n\t/**\n\t * Returns true if the specified value is an object. This includes arrays\n\t * and functions.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is an object.\n\t */\n\tstatic isObject(val) {\n\t\tvar type = typeof val;\n\t\treturn type === 'object' && val !== null || type === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is a string.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isString(val) {\n\t\treturn typeof val === 'string';\n\t}\n\n\t/**\n\t * Merges the values of a static property a class with the values of that\n\t * property for all its super classes, and stores it as a new static\n\t * property of that class. If the static property already existed, it won't\n\t * be recalculated.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @param {function(*, *):*=} opt_mergeFn Function that receives an array filled\n\t *   with the values of the property for the current class and all its super classes.\n\t *   Should return the merged value to be stored on the current class.\n\t * @return {*} The value of the merged property.\n\t */\n\tstatic mergeSuperClassesProperty(constructor, propertyName, opt_mergeFn) {\n\t\tvar mergedName = propertyName + '_MERGED';\n\t\tif (constructor.hasOwnProperty(mergedName)) {\n\t\t\treturn constructor[mergedName];\n\t\t}\n\n\t\tvar merged = core.collectSuperClassesProperty(constructor, propertyName);\n\t\tif (opt_mergeFn) {\n\t\t\tmerged = opt_mergeFn(merged);\n\t\t}\n\t\tconstructor[mergedName] = merged;\n\t\treturn constructor[mergedName];\n\t}\n\n\t/**\n\t * Null function used for default values of callbacks, etc.\n\t * @return {void} Nothing.\n\t */\n\tstatic nullFunction() {\n\n\t}\n}\n\n/**\n * Unique id property prefix.\n * @type {String}\n * @protected\n */\ncore.UID_PROPERTY = 'core_' + ((Math.random() * 1e9) >>> 0);\n\n/**\n * Counter for unique id.\n * @type {Number}\n * @private\n */\ncore.uniqueIdCounter_ = 1;\n\nexport default core;\n","'use strict';\n\nclass object {\n\t/**\n\t * Copies all the members of a source object to a target object.\n\t * @param {Object} target Target object.\n\t * @param {...Object} var_args The objects from which values will be copied.\n\t * @return {Object} Returns the target object reference.\n\t */\n\tstatic mixin(target) {\n\t\tvar key, source;\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\tsource = arguments[i];\n\t\t\tfor (key in source) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n}\n\nexport default object;\n","'use strict';\n\n/**\n * Disposable utility. When inherited provides the `dispose` function to its\n * subclass, which is responsible for disposing of any object references\n * when an instance won't be used anymore. Subclasses should override\n * `disposeInternal` to implement any specific disposing logic.\n * @constructor\n */\nclass Disposable {\n\tconstructor() {\n\t\t/**\n\t\t * Flag indicating if this instance has already been disposed.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.disposed_ = false;\n\t}\n\n\t/**\n\t * Disposes of this instance's object references. Calls `disposeInternal`.\n\t */\n\tdispose() {\n\t\tif (!this.disposed_) {\n\t\t\tthis.disposeInternal();\n\t\t\tthis.disposed_ = true;\n\t\t}\n\t}\n\n\t/**\n\t * Subclasses should override this method to implement any specific\n\t * disposing logic (like clearing references and calling `dispose` on other\n\t * disposables).\n\t */\n\tdisposeInternal() {\n\t}\n\n\t/**\n\t * Checks if this instance has already been disposed.\n\t * @return {boolean}\n\t */\n\tisDisposed() {\n\t\treturn this.disposed_;\n\t}\n}\n\nexport default Disposable;\n","'use strict';\n\nimport Disposable from \"src/public/vendor/metaljs/src/disposable/Disposable\";\n\n/**\n * EventHandle utility. Holds information about an event subscription, and\n * allows removing them easily.\n * EventHandle is a Disposable, but it's important to note that the\n * EventEmitter that created it is not the one responsible for disposing it.\n * That responsibility is for the code that holds a reference to it.\n * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n * @param {string} event The name of the event that was subscribed to.\n * @param {!Function} listener The listener subscribed to the event.\n * @constructor\n * @extends {Disposable}\n */\nclass EventHandle extends Disposable {\n\tconstructor(emitter, event, listener) {\n\t\t/**\n\t\t * The EventEmitter instance that the event was subscribed to.\n\t\t * @type {EventEmitter}\n\t\t * @protected\n\t\t */\n\t\tthis.emitter_ = emitter;\n\n\t\t/**\n\t\t * The name of the event that was subscribed to.\n\t\t * @type {string}\n\t\t * @protected\n\t\t */\n\t\tthis.event_ = event;\n\n\t\t/**\n\t\t * The listener subscribed to the event.\n\t\t * @type {Function}\n\t\t * @protected\n\t\t */\n\t\tthis.listener_ = listener;\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tthis.removeListener();\n\t\tthis.emitter_ = null;\n\t\tthis.listener_ = null;\n\t}\n\n\t/**\n\t * Removes the listener subscription from the emitter.\n\t */\n\tremoveListener() {\n\t\tif (!this.emitter_.isDisposed()) {\n\t\t\tthis.emitter_.removeListener(this.event_, this.listener_);\n\t\t}\n\t}\n}\n\nexport default EventHandle;\n","'use strict';\n\nimport EventHandle from \"src/public/vendor/metaljs/src/events/EventHandle\";\n\n/**\n * This is a special EventHandle, that is responsible for dom events, instead\n * of EventEmitter events.\n * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n * @param {string} event The name of the event that was subscribed to.\n * @param {!Function} listener The listener subscribed to the event.\n * @constructor\n * @extends {EventHandle}\n */\nclass DomEventHandle extends EventHandle {\n\tconstructor(emitter, event, listener) {\n\t\tsuper(emitter, event, listener);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tremoveListener() {\n\t\tthis.emitter_.removeEventListener(this.event_, this.listener_);\n\t}\n}\n\nexport default DomEventHandle;\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport object from \"src/public/vendor/metaljs/src/object/object\";\nimport DomEventHandle from \"src/public/vendor/metaljs/src/events/DomEventHandle\";\n\nclass dom {\n\t/**\n\t * Adds the requested CSS classes to an element.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {!Array<string>} classes CSS classes to add.\n\t */\n\tstatic addClasses(element, classes) {\n\t\tif ('classList' in element) {\n\t\t\tdom.addClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.addClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {!Array<string>} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithNative_(element, classes) {\n\t\tclasses.forEach(function(className) {\n\t\t\telement.classList.add(className);\n\t\t});\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element without using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {!Array<string>} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\t\tvar classesToAppend = '';\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = classes[i];\n\n\t\t\tif (elementClassName.indexOf(' ' + className + ' ') === -1) {\n\t\t\t\tclassesToAppend += ' ' + className;\n\t\t\t}\n\t\t}\n\n\t\tif (classesToAppend) {\n\t\t\telement.className = element.className + classesToAppend;\n\t\t}\n\t}\n\n\t/**\n\t * Appends a child node with text or other nodes to a parent node. If\n\t * child is a HTML string it will be automatically converted to a document\n\t * fragment before appending it to the parent.\n\t * @param {!Element} parent The node to append nodes to.\n\t * @param {!Element|String} child The thing to append to the parent.\n\t * @return {!Element} The appended child.\n\t */\n\tstatic append(parent, child) {\n\t\tif (core.isString(child)) {\n\t\t\tchild = dom.buildFragment(child);\n\t\t}\n\t\treturn parent.appendChild(child);\n\t}\n\n\t/**\n\t * Helper for converting a HTML string into a document fragment.\n\t * @param {string} htmlString The HTML string to convert.\n\t * @return {!Element} The resulting document fragment.\n\t */\n\tstatic buildFragment(htmlString) {\n\t\tvar tempDiv = document.createElement('div');\n\t\ttempDiv.innerHTML = '<br>' + htmlString;\n\t\ttempDiv.removeChild(tempDiv.firstChild);\n\n\t\tvar fragment = document.createDocumentFragment();\n\t\twhile (tempDiv.firstChild) {\n\t\t\tfragment.appendChild(tempDiv.firstChild);\n\t\t}\n\t\treturn fragment;\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element, but only calls the\n\t * callback with the event when it triggered by elements that match the given\n\t * selector.\n\t * @param {!Element} element The container DOM element to listen to the event on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {string} selector The selector that matches the child elements that\n\t *   the event should be triggered for.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic delegate(element, eventName, selector, callback) {\n\t\treturn dom.on(\n\t\t\telement,\n\t\t\teventName,\n\t\t\tdom.handleDelegateEvent_.bind(null, selector, callback)\n\t\t);\n\t}\n\n\t/**\n\t * Inserts node in document as last element.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic enterDocument(node) {\n\t\tdom.append(document.body, node);\n\t}\n\n\t/**\n\t * Removes node from document.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic exitDocument(node) {\n\t\tif (node.parentNode) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t}\n\n\t/**\n\t * This is called when an event is triggered by a delegate listener (see\n\t * `dom.delegate` for more details).\n\t * @param {string} selector The selector or element that matches the child\n\t *   elements that the event should be triggered for.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *   is triggered. It will receive the normalized event object.\n\t * @param {!Event} event The event payload.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *   false, or true otherwise.\n\t */\n\tstatic handleDelegateEvent_(selector, callback, event) {\n\t\tdom.normalizeDelegateEvent_(event);\n\n\t\tvar currentElement = event.target;\n\t\tvar returnValue = true;\n\n\t\twhile (currentElement && !event.stopped) {\n\t\t\tif (core.isString(selector) && dom.match(currentElement, selector)) {\n\t\t\t\tevent.delegateTarget = currentElement;\n\t\t\t\treturnValue &= callback(event);\n\t\t\t}\n\t\t\tcurrentElement = currentElement.parentNode;\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t */\n\tstatic hasClass(element, className) {\n\t\tif ('classList' in element) {\n\t\t\treturn dom.hasClassWithNative_(element, className);\n\t\t} else {\n\t\t\treturn dom.hasClassWithoutNative_(element, className);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithNative_(element, className) {\n\t\treturn element.classList.contains(className);\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class without using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithoutNative_(element, className) {\n\t\treturn (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n\t}\n\n\t/**\n\t * Check if an element matches a given selector.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t */\n\tstatic match(element, selector) {\n\t\tif (!element || element.nodeType !== 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar p = Element.prototype;\n\t\tvar m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\t\tif (m) {\n\t\t\treturn m.call(element, selector);\n\t\t}\n\n\t\treturn dom.matchFallback_(element, selector);\n\t}\n\n\t/**\n\t * Check if an element matches a given selector, using an internal implementation\n\t * instead of calling existing javascript functions.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic matchFallback_(element, selector) {\n\t\tvar nodes = document.querySelectorAll(selector, element.parentNode);\n\t\tfor (var i = 0; i < nodes.length; ++i) {\n\t\t\tif (nodes[i] === element) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Normalizes the event payload for delegate listeners.\n\t * @param {!Event} event\n\t */\n\tstatic normalizeDelegateEvent_(event) {\n\t\tevent.stopPropagation = dom.stopPropagation_;\n\t\tevent.stopImmediatePropagation = dom.stopImmediatePropagation_;\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element. This function normalizes\n\t * DOM event payloads and functions so they'll work the same way on all supported\n\t * browsers.\n\t * @param {!Element} element The DOM element to listen to the event on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic on(element, eventName, callback) {\n\t\telement.addEventListener(eventName, callback);\n\t\treturn new DomEventHandle(element, eventName, callback);\n\t}\n\n\t/**\n\t * Removes all the child nodes on a DOM node.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic removeChildren(node) {\n\t\tvar child;\n\t\twhile ((child = node.firstChild)) {\n\t\t\tnode.removeChild(child);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {!Array<string>} classes CSS classes to remove.\n\t */\n\tstatic removeClasses(element, classes) {\n\t\tif ('classList' in element) {\n\t\t\tdom.removeClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.removeClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {!Array<string>} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithNative_(element, classes) {\n\t\tclasses.forEach(function(className) {\n\t\t\telement.classList.remove(className);\n\t\t});\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element without using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {!Array<string>} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\telementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * The function that replaces `stopImmediatePropagation_` for events.\n\t * @protected\n\t */\n\tstatic stopImmediatePropagation_() {\n\t\tthis.stopped = true;\n\t\tEvent.prototype.stopImmediatePropagation.call(this);\n\t}\n\n\t/**\n\t * The function that replaces `stopPropagation` for events.\n\t * @protected\n\t */\n\tstatic stopPropagation_() {\n\t\tthis.stopped = true;\n\t\tEvent.prototype.stopPropagation.call(this);\n\t}\n\n\t/**\n\t * Checks if the given element supports the given event type.\n\t * @param {!Element|string} element The DOM element or element tag name to check.\n\t * @param {string} eventName The name of the event to check.\n\t * @return {boolean}\n\t */\n\tstatic supportsEvent(element, eventName) {\n\t\tif (core.isString(element)) {\n\t\t\tif (!elementsByTag[element]) {\n\t\t\t\telementsByTag[element] = document.createElement(element);\n\t\t\t}\n\t\t\telement = elementsByTag[element];\n\t\t}\n\t\treturn 'on' + eventName in element;\n\t}\n\n\t/**\n\t * Converts the given argument to a DOM element. Strings are assumed to\n\t * be selectors, and so a matched element will be returned. If the arg\n\t * is already a DOM element it will be the return value.\n\t * @param {string|Element|Document} selectorOrElement\n\t * @return {Element} The converted element, or null if none was found.\n\t */\n\tstatic toElement(selectorOrElement) {\n\t\tif (core.isElement(selectorOrElement) || core.isDocument(selectorOrElement)) {\n\t\t\treturn selectorOrElement;\n\t\t} else if (core.isString(selectorOrElement)) {\n\t\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t\t} else {\n\t\t\t\treturn document.querySelector(selectorOrElement);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Triggers the specified event on the given element.\n\t * NOTE: This should mostly be used for testing, not on real code.\n\t * @param {!Element} element The node that should trigger the event.\n\t * @param {string} eventName The name of the event to be triggred.\n\t * @param {Object=} opt_eventObj An object with data that should be on the\n\t *   triggered event's payload.\n\t */\n\tstatic triggerEvent(element, eventName, opt_eventObj) {\n\t\tvar eventObj = document.createEvent('HTMLEvents');\n\t\teventObj.initEvent(eventName, true, true);\n\t\tobject.mixin(eventObj, opt_eventObj);\n\t\telement.dispatchEvent(eventObj);\n\t}\n}\n\nvar elementsByTag = {};\n\nexport default dom;\n","class math {\n  /**\n     * Tests if a rectangle intersects with another.\n     *\n     * <pre>\n     *  x0y0 --------       x2y2 --------\n     *      |       |           |       |\n     *      -------- x1y1       -------- x3y3\n     * </pre>\n     *\n     * Note that coordinates starts from top to down (y), left to right (x):\n     *\n     * <pre>\n     *      ------> (x)\n     *      |\n     *      |\n     *     (y)\n     * </pre>\n     *\n     * @param {number} x0 Horizontal coordinate of P0.\n     * @param {number} y0 Vertical coordinate of P0.\n     * @param {number} x1 Horizontal coordinate of P1.\n     * @param {number} y1 Vertical coordinate of P1.\n     * @param {number} x2 Horizontal coordinate of P2.\n     * @param {number} y2 Vertical coordinate of P2.\n     * @param {number} x3 Horizontal coordinate of P3.\n     * @param {number} y3 Vertical coordinate of P3.\n     * @return {boolean}\n     */\n    static intersectRect(x0, y0, x1, y1, x2, y2, x3, y3) {\n      return !(x2 > x1 || x3 < x0 || y2 > y1 || y3 < y0);\n    }\n}\n\nexport default math;\n","import core from \"src/public/vendor/metaljs/src/core\";\nimport math from \"src/public/vendor/metal-position/src/math\";\n\n/**\n * Class with static methods responsible for doing browser position checks.\n */\nclass position {\n  /**\n   * Gets the client height of the specified node. Scroll height is not\n   * included.\n   * @param {Element|Document|Window=} node\n   * @return {Number}\n   */\n  static getClientHeight(node) {\n    return this.getClientSize_(node, 'Height');\n  }\n\n  /**\n   * Gets the client height or width of the specified node. Scroll height is\n   * not included.\n   * @param {Element|Document|Window=} node\n   * @param {string} `Width` or `Height` property.\n   * @return {Number}\n   * @protected\n   */\n  static getClientSize_(node, prop) {\n    var el = node;\n    if (core.isWindow(node)) {\n      el = node.document.documentElement;\n    }\n    if (core.isDocument(node)) {\n      el = node.documentElement;\n    }\n    return el['client' + prop];\n  }\n\n  /**\n   * Gets the client width of the specified node. Scroll width is not\n   * included.\n   * @param {Element|Document|Window=} node\n   * @return {Number}\n   */\n  static getClientWidth(node) {\n    return this.getClientSize_(node, 'Width');\n  }\n\n  /**\n   * Gets the region of the element, document or window.\n   * @param {Element|Document|Window=} opt_element Optional element to test.\n   * @return {!DOMRect} The returned value is a simulated DOMRect object which\n   *     is the union of the rectangles returned by getClientRects() for the\n   *     element, i.e., the CSS border-boxes associated with the element.\n   * @protected\n   */\n  static getDocumentRegion_(opt_element) {\n    var height = this.getHeight(opt_element);\n    var width = this.getWidth(opt_element);\n    return this.makeRegion(height, height, 0, width, 0, width);\n  }\n\n  /**\n   * Gets the height of the specified node. Scroll height is included.\n   * @param {Element|Document|Window=} node\n   * @return {Number}\n   */\n  static getHeight(node) {\n    return this.getSize_(node, 'Height');\n  }\n\n  /**\n   * Gets the size of an element and its position relative to the viewport.\n   * @param {!Document|Element|Window} node\n   * @return {!DOMRect} The returned value is a DOMRect object which is the\n   *     union of the rectangles returned by getClientRects() for the element,\n   *     i.e., the CSS border-boxes associated with the element.\n   */\n  static getRegion(node) {\n    if (core.isDocument(node) || core.isWindow(node)) {\n      return this.getDocumentRegion_(node);\n    }\n    return this.makeRegionFromBoundingRect_(node.getBoundingClientRect());\n  }\n\n  /**\n   * Gets the scroll left position of the specified node.\n   * @param {Element|Document|Window=} node\n   * @return {Number}\n   */\n  static getScrollLeft(node) {\n    if (core.isWindow(node)) {\n      return node.pageXOffset;\n    }\n    if (core.isDocument(node)) {\n      return node.defaultView.pageXOffset;\n    }\n    return node.scrollLeft;\n  }\n\n  /**\n   * Gets the scroll top position of the specified node.\n   * @param {Element|Document|Window=} node\n   * @return {Number}\n   */\n  static getScrollTop(node) {\n    if (core.isWindow(node)) {\n      return node.pageYOffset;\n    }\n    if (core.isDocument(node)) {\n      return node.defaultView.pageYOffset;\n    }\n    return node.scrollTop;\n  }\n\n  /**\n   * Gets the height or width of the specified node. Scroll height is\n   * included.\n   * @param {Element|Document|Window=} node\n   * @param {string} `Width` or `Height` property.\n   * @return {Number}\n   * @protected\n   */\n  static getSize_(node, prop) {\n    if (core.isWindow(node)) {\n      return this.getClientSize_(node, prop);\n    }\n    if (core.isDocument(node)) {\n      var docEl = node.documentElement;\n      return Math.max(\n        node.body['scroll' + prop], docEl['scroll' + prop],\n        node.body['offset' + prop], docEl['offset' + prop], docEl['client' + prop]);\n    }\n    return Math.max(node['client' + prop], node['scroll' + prop], node['offset' + prop]);\n  }\n\n  /**\n   * Gets the width of the specified node. Scroll width is included.\n   * @param {Element|Document|Window=} node\n   * @return {Number}\n   */\n  static getWidth(node) {\n    return this.getSize_(node, 'Width');\n  }\n\n  /**\n   * Tests if a region intersects with another.\n   * @param {DOMRect} r1\n   * @param {DOMRect} r2\n   * @return {boolean}\n   */\n  static intersectRegion(r1, r2) {\n    return math.intersectRect(\n      r1.top, r1.left, r1.bottom, r1.right,\n      r2.top, r2.left, r2.bottom, r2.right);\n  }\n\n  /**\n   * Tests if a region is inside another.\n   * @param {DOMRect} r1\n   * @param {DOMRect} r2\n   * @return {boolean}\n   */\n  static insideRegion(r1, r2) {\n    return (r2.top >= r1.top) && (r2.bottom <= r1.bottom) &&\n              (r2.right <= r1.right) && (r2.left >= r1.left);\n  }\n\n  /**\n   * Tests if a region is inside viewport region.\n   * @param {DOMRect} region\n   * @return {boolean}\n   */\n  static insideViewport(region) {\n    return this.insideRegion(this.getRegion(window), region);\n  }\n\n  /**\n   * Computes the intersection region between two regions.\n   * @param {DOMRect} r1\n   * @param {DOMRect} r2\n   * @return {?DOMRect} Intersection region or null if regions doesn't\n   *     intersects.\n   */\n  static intersection(r1, r2) {\n    if (!this.intersectRegion(r1, r2)) {\n      return null;\n    }\n    var bottom = Math.min(r1.bottom, r2.bottom);\n    var right = Math.min(r1.right, r2.right);\n    var left = Math.max(r1.left, r2.left);\n    var top = Math.max(r1.top, r2.top);\n    return this.makeRegion(bottom, bottom - top, left, right, top, right - left);\n  }\n\n  /**\n   * Makes a region object. It's a writable version of DOMRect.\n   * @param {Number} bottom\n   * @param {Number} height\n   * @param {Number} left\n   * @param {Number} right\n   * @param {Number} top\n   * @param {Number} width\n   * @return {!DOMRect} The returned value is a DOMRect object which is the\n   *     union of the rectangles returned by getClientRects() for the element,\n   *     i.e., the CSS border-boxes associated with the element.\n   */\n  static makeRegion(bottom, height, left, right, top, width) {\n    return {\n      bottom: bottom,\n      height: height,\n      left: left,\n      right: right,\n      top: top,\n      width: width\n    };\n  }\n\n  /**\n   * Makes a region from a DOMRect result from `getBoundingClientRect`.\n   * @param  {!DOMRect} The returned value is a DOMRect object which is the\n   *     union of the rectangles returned by getClientRects() for the element,\n   *     i.e., the CSS border-boxes associated with the element.\n   * @return {DOMRect} Writable version of DOMRect.\n   * @protected\n   */\n  static makeRegionFromBoundingRect_(rect) {\n    return this.makeRegion(rect.bottom, rect.height, rect.left, rect.right, rect.top, rect.width);\n  }\n}\n\nexport default position;\n","'use strict';\n\nclass array {\n\t/**\n\t * Checks if the given arrays have the same content.\n\t * @param {!Array<*>} arr1\n\t * @param {!Array<*>} arr2\n\t * @return {boolean}\n\t */\n\tstatic equal(arr1, arr2) {\n\t\tfor (var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn arr1.length === arr2.length;\n\t}\n\n\t/**\n\t * Returns the first value in the given array that isn't undefined.\n\t * @param {!Array} arr\n\t * @return {*}\n\t */\n\tstatic firstDefinedValue(arr) {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (arr[i] !== undefined) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Transforms the input nested array to become flat.\n\t * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n\t * @param {Array.<*>} opt_output Optional output array.\n\t * @return {Array.<*>} Flat array.\n\t */\n\tstatic flatten(arr, opt_output) {\n\t\tvar output = opt_output || [];\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (Array.isArray(arr[i])) {\n\t\t\t\tarray.flatten(arr[i], output);\n\t\t\t} else {\n\t\t\t\toutput.push(arr[i]);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Removes the first occurrence of a particular value from an array.\n\t * @param {Array.<T>} arr Array from which to remove value.\n\t * @param {T} obj Object to remove.\n\t * @return {boolean} True if an element was removed.\n\t * @template T\n\t */\n\t static remove(arr, obj) {\n\t\tvar i = arr.indexOf(obj);\n\t\tvar rv;\n\t\tif ( (rv = i >= 0) ) {\n\t\t\tarray.removeAt(arr, i);\n\t\t}\n\t\treturn rv;\n\t}\n\n\t/**\n\t * Removes from an array the element at index i\n\t * @param {Array} arr Array or array like object from which to remove value.\n\t * @param {number} i The index to remove.\n\t * @return {boolean} True if an element was removed.\n\t */\n\tstatic removeAt(arr, i) {\n\t\treturn Array.prototype.splice.call(arr, i, 1).length === 1;\n\t}\n}\n\nexport default array;\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport Disposable from \"src/public/vendor/metaljs/src/disposable/Disposable\";\nimport EventHandle from \"src/public/vendor/metaljs/src/events/EventHandle\";\n\n/**\n * EventEmitter utility.\n * @constructor\n * @extends {Disposable}\n */\nclass EventEmitter extends Disposable {\n\tconstructor() {\n\t\t/**\n\t\t * Holds event listeners scoped by event type.\n\t\t * @type {!Object<string, !Array<!function()>>}\n\t\t * @protected\n\t\t */\n\t\tthis.events_ = [];\n\n\t\t/**\n\t\t * The maximum number of listeners allowed for each event type. If the number\n\t\t * becomes higher than the max, a warning will be issued.\n\t\t * @type {number}\n\t\t * @protected\n\t\t */\n\t\tthis.maxListeners_ = 10;\n\n\t\t/**\n\t\t * Configuration option which determines if an event facade should be sent\n\t\t * as a param of listeners when emitting events. If set to true, the facade\n\t\t * will be passed as the first argument of the listener.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.shouldUseFacade_ = false;\n\t}\n\n\t/**\n\t * Adds a listener to the end of the listeners array for the specified events.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\taddListener(events, listener) {\n\t\tthis.validateListener_(listener);\n\n\t\tevents = this.normalizeEvents_(events);\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tthis.addSingleListener_(events[i], listener);\n\t\t}\n\n\t\treturn new EventHandle(this, events, listener);\n\t}\n\n\t/**\n\t * Adds a listener to the end of the listeners array for a single event.\n\t * @param {string} event\n\t * @param {!Function} listener\n\t * @param {Function=} opt_origin The original function that was added as a\n\t *   listener, if there is any.\n\t * @protected\n\t */\n\taddSingleListener_(event, listener, opt_origin) {\n\t\tthis.emit('newListener', event, listener);\n\n\t\tif (!this.events_[event]) {\n\t\t\tthis.events_[event] = [];\n\t\t}\n\t\tthis.events_[event].push({\n\t\t\tfn: listener,\n\t\t\torigin: opt_origin\n\t\t});\n\n\t\tvar listeners = this.events_[event];\n\t\tif (listeners.length > this.maxListeners_ && !listeners.warned) {\n\t\t\tconsole.warn(\n\t\t\t\t'Possible EventEmitter memory leak detected. %d listeners added ' +\n\t\t\t\t'for event %s. Use emitter.setMaxListeners() to increase limit.',\n\t\t\t\tlisteners.length,\n\t\t\t\tevent\n\t\t\t);\n\t\t\tlisteners.warned = true;\n\t\t}\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tthis.events_ = [];\n\t}\n\n\t/**\n\t * Execute each of the listeners in order with the supplied arguments.\n\t * @param {string} event\n\t * @param {*} opt_args [arg1], [arg2], [...]\n\t * @return {boolean} Returns true if event had listeners, false otherwise.\n\t */\n\temit(event) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar listened = false;\n\t\tvar listeners = this.listeners(event);\n\n\t\tif (this.getShouldUseFacade()) {\n\t\t\tvar facade = {\n\t\t\t\ttype: event\n\t\t\t};\n\t\t\targs = [facade].concat(args);\n\t\t}\n\n\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\tlisteners[i].apply(this, args);\n\t\t\tlistened = true;\n\t\t}\n\n\t\treturn listened;\n\t}\n\n\t/**\n\t * Gets the configuration option which determines if an event facade should\n\t * be sent as a param of listeners when emitting events. If set to true, the\n\t * facade will be passed as the first argument of the listener.\n\t * @return {boolean}\n\t */\n\tgetShouldUseFacade() {\n\t\treturn this.shouldUseFacade_;\n\t}\n\n\t/**\n\t * Returns an array of listeners for the specified event.\n\t * @param {string} event\n\t * @return {Array} Array of listeners.\n\t */\n\tlisteners(event) {\n\t\treturn (this.events_[event] || []).map(function(listener) {\n\t\t\treturn listener.fn;\n\t\t});\n\t}\n\n\t/**\n\t * Adds a listener that will be invoked a fixed number of times for the\n\t * events. After each event is triggered the specified amount of times, the\n\t * listener is removed for it.\n\t * @param {!(Array|string)} events\n\t * @param {number} amount The amount of times this event should be listened\n\t * to.\n\t * @param {!Function} listener\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\tmany(events, amount, listener) {\n\t\tevents = this.normalizeEvents_(events);\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tthis.many_(events[i], amount, listener);\n\t\t}\n\n\t\treturn new EventHandle(this, events, listener);\n\t}\n\n\t/**\n\t * Adds a listener that will be invoked a fixed number of times for a single\n\t * event. After the event is triggered the specified amount of times, the\n\t * listener is removed.\n\t * @param {string} event\n\t * @param {number} amount The amount of times this event should be listened\n\t * to.\n\t * @param {!Function} listener\n\t * @protected\n\t */\n\tmany_(event, amount, listener) {\n\t\tvar self = this;\n\n\t\tif (amount <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction handlerInternal() {\n\t\t\tif (--amount === 0) {\n\t\t\t\tself.removeListener(event, handlerInternal);\n\t\t\t}\n\t\t\tlistener.apply(self, arguments);\n\t\t}\n\n\t\tself.addSingleListener_(event, handlerInternal, listener);\n\t}\n\n\t/**\n\t * Checks if a listener object matches the given listener function. To match,\n\t * it needs to either point to that listener or have it as its origin.\n\t * @param {!Object} listenerObj\n\t * @param {!Function} listener\n\t * @return {boolean}\n\t * @protected\n\t */\n\tmatchesListener_(listenerObj, listener) {\n\t\treturn listenerObj.fn === listener ||\n\t\t\t(listenerObj.origin && listenerObj.origin === listener);\n\t}\n\n\t/**\n\t * Converts the parameter to an array if only one event is given.\n\t * @param  {!(Array|string)} events\n\t * @return {!Array}\n\t * @protected\n\t */\n\tnormalizeEvents_(events) {\n\t\treturn core.isString(events) ? [events] : events;\n\t}\n\n\t/**\n\t * Removes a listener for the specified events.\n\t * Caution: changes array indices in the listener array behind the listener.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\toff(events, listener) {\n\t\tthis.validateListener_(listener);\n\n\t\tevents = this.normalizeEvents_(events);\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar listenerObjs = this.events_[events[i]] || [];\n\t\t\tthis.removeMatchingListenerObjs_(listenerObjs, listener);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a listener to the end of the listeners array for the specified events.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\ton() {\n\t\treturn this.addListener.apply(this, arguments);\n\t}\n\n\t/**\n\t * Adds a one time listener for the events. This listener is invoked only the\n\t * next time each event is fired, after which it is removed.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\tonce(events, listener) {\n\t\treturn this.many(events, 1, listener);\n\t}\n\n\t/**\n\t * Removes all listeners, or those of the specified events. It's not a good\n\t * idea to remove listeners that were added elsewhere in the code,\n\t * especially when it's on an emitter that you didn't create.\n\t * @param {(Array|string)=} opt_events\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tremoveAllListeners(opt_events) {\n\t\tif (opt_events) {\n\t\t\tvar events = this.normalizeEvents_(opt_events);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.events_[events[i]] = null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.events_ = {};\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes all listener objects from the given array that match the given\n\t * listener function.\n\t * @param {!Array.<Object>} listenerObjs\n\t * @param {!Function} listener\n\t * @protected\n\t */\n\tremoveMatchingListenerObjs_(listenerObjs, listener) {\n\t\tfor (var i = listenerObjs.length - 1; i >= 0; i--) {\n\t\t\tif (this.matchesListener_(listenerObjs[i], listener)) {\n\t\t\t\tlistenerObjs.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes a listener for the specified events.\n\t * Caution: changes array indices in the listener array behind the listener.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tremoveListener() {\n\t\treturn this.off.apply(this, arguments);\n\t}\n\n\t/**\n\t * By default EventEmitters will print a warning if more than 10 listeners\n\t * are added for a particular event. This is a useful default which helps\n\t * finding memory leaks. Obviously not all Emitters should be limited to 10.\n\t * This function allows that to be increased. Set to zero for unlimited.\n\t * @param {number} max The maximum number of listeners.\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tsetMaxListeners(max) {\n\t\tthis.maxListeners_ = max;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the configuration option which determines if an event facade should\n\t * be sent as a param of listeners when emitting events. If set to true, the\n\t * facade will be passed as the first argument of the listener.\n\t * @param {boolean} shouldUseFacade\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tsetShouldUseFacade(shouldUseFacade) {\n\t\tthis.shouldUseFacade_ = shouldUseFacade;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Checks if the given listener is valid, throwing an exception when it's not.\n\t * @param  {*} listener\n\t * @protected\n\t */\n\tvalidateListener_(listener) {\n\t\tif (!core.isFunction(listener)) {\n\t\t\tthrow new TypeError('Listener must be a function');\n\t\t}\n\t}\n}\n\nexport default EventEmitter;\n","/*!\n * Polyfill from Google's Closure Library.\n * Copyright 2013 The Closure Library Authors. All Rights Reserved.\n */\n\n'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\n\nvar async = {};\n\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nasync.throwException = function(exception) {\n\t// Each throw needs to be in its own context.\n\tasync.nextTick(function() {\n\t\tthrow exception;\n\t});\n};\n\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\nasync.run = function(callback, opt_context) {\n\tif (!async.run.workQueueScheduled_) {\n\t\t// Nothing is currently scheduled, schedule it now.\n\t\tasync.nextTick(async.run.processWorkQueue);\n\t\tasync.run.workQueueScheduled_ = true;\n\t}\n\n\tasync.run.workQueue_.push(\n\t\tnew async.run.WorkItem_(callback, opt_context));\n};\n\n\n/** @private {boolean} */\nasync.run.workQueueScheduled_ = false;\n\n\n/** @private {!Array.<!async.run.WorkItem_>} */\nasync.run.workQueue_ = [];\n\n/**\n * Run any pending async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * async.nextTick.\n */\nasync.run.processWorkQueue = function() {\n\t// NOTE: additional work queue items may be pushed while processing.\n\twhile (async.run.workQueue_.length) {\n\t\t// Don't let the work queue grow indefinitely.\n\t\tvar workItems = async.run.workQueue_;\n\t\tasync.run.workQueue_ = [];\n\t\tfor (var i = 0; i < workItems.length; i++) {\n\t\t\tvar workItem = workItems[i];\n\t\t\ttry {\n\t\t\t\tworkItem.fn.call(workItem.scope);\n\t\t\t} catch (e) {\n\t\t\t\tasync.throwException(e);\n\t\t\t}\n\t\t}\n\t}\n\n\t// There are no more work items, reset the work queue.\n\tasync.run.workQueueScheduled_ = false;\n};\n\n\n/**\n * @constructor\n * @final\n * @struct\n * @private\n *\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\nasync.run.WorkItem_ = function(fn, scope) {\n\t/** @const */\n\tthis.fn = fn;\n\t/** @const */\n\tthis.scope = scope;\n};\n\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n * reasons.\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @template SCOPE\n */\nasync.nextTick = function(callback, opt_context) {\n\tvar cb = callback;\n\tif (opt_context) {\n\t\tcb = callback.bind(opt_context);\n\t}\n\tcb = async.nextTick.wrapCallback_(cb);\n\t// Introduced and currently only supported by IE10.\n\tif (core.isFunction(window.setImmediate)) {\n\t\twindow.setImmediate(cb);\n\t\treturn;\n\t}\n\t// Look for and cache the custom fallback version of setImmediate.\n\tif (!async.nextTick.setImmediate_) {\n\t\tasync.nextTick.setImmediate_ = async.nextTick.getSetImmediateEmulator_();\n\t}\n\tasync.nextTick.setImmediate_(cb);\n};\n\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\nasync.nextTick.setImmediate_ = null;\n\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\nasync.nextTick.getSetImmediateEmulator_ = function() {\n\t// Create a private message channel and use it to postMessage empty messages\n\t// to ourselves.\n\tvar Channel = window.MessageChannel;\n\t// If MessageChannel is not available and we are in a browser, implement\n\t// an iframe based polyfill in browsers that have postMessage and\n\t// document.addEventListener. The latter excludes IE8 because it has a\n\t// synchronous postMessage implementation.\n\tif (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n\t\twindow.postMessage && window.addEventListener) {\n\t\t/** @constructor */\n\t\tChannel = function() {\n\t\t\t// Make an empty, invisible iframe.\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tiframe.style.display = 'none';\n\t\t\tiframe.src = '';\n\t\t\tdocument.documentElement.appendChild(iframe);\n\t\t\tvar win = iframe.contentWindow;\n\t\t\tvar doc = win.document;\n\t\t\tdoc.open();\n\t\t\tdoc.write('');\n\t\t\tdoc.close();\n\t\t\tvar message = 'callImmediate' + Math.random();\n\t\t\tvar origin = win.location.protocol + '//' + win.location.host;\n\t\t\tvar onmessage = function(e) {\n\t\t\t\t// Validate origin and message to make sure that this message was\n\t\t\t\t// intended for us.\n\t\t\t\tif (e.origin !== origin && e.data !== message) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.port1.onmessage();\n\t\t\t}.bind(this);\n\t\t\twin.addEventListener('message', onmessage, false);\n\t\t\tthis.port1 = {};\n\t\t\tthis.port2 = {\n\t\t\t\tpostMessage: function() {\n\t\t\t\t\twin.postMessage(message, origin);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\tif (typeof Channel !== 'undefined') {\n\t\tvar channel = new Channel();\n\t\t// Use a fifo linked list to call callbacks in the right order.\n\t\tvar head = {};\n\t\tvar tail = head;\n\t\tchannel.port1.onmessage = function() {\n\t\t\thead = head.next;\n\t\t\tvar cb = head.cb;\n\t\t\thead.cb = null;\n\t\t\tcb();\n\t\t};\n\t\treturn function(cb) {\n\t\t\ttail.next = {\n\t\t\t\tcb: cb\n\t\t\t};\n\t\t\ttail = tail.next;\n\t\t\tchannel.port2.postMessage(0);\n\t\t};\n\t}\n\t// Implementation for IE6-8: Script elements fire an asynchronous\n\t// onreadystatechange event when inserted into the DOM.\n\tif (typeof document !== 'undefined' && 'onreadystatechange' in\n\t\t\tdocument.createElement('script')) {\n\t\treturn function(cb) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.onreadystatechange = function() {\n\t\t\t\t// Clean up and call the callback.\n\t\t\t\tscript.onreadystatechange = null;\n\t\t\t\tscript.parentNode.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t\tcb();\n\t\t\t\tcb = null;\n\t\t\t};\n\t\t\tdocument.documentElement.appendChild(script);\n\t\t};\n\t}\n\t// Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n\t// or more.\n\treturn function(cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n};\n\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\nasync.nextTick.wrapCallback_ = function(opt_returnValue) {\n\treturn opt_returnValue;\n};\n\nexport default async;\n","'use strict';\n\nimport array from \"src/public/vendor/metaljs/src/array/array\";\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport object from \"src/public/vendor/metaljs/src/object/object\";\nimport EventEmitter from \"src/public/vendor/metaljs/src/events/EventEmitter\";\nimport async from \"src/public/vendor/metaljs/src/async/async\";\n\n/**\n * Attribute adds support for having object properties that can be watched for\n * changes, as well as configured with validators, setters and other options.\n * See the `addAttr` method for a complete list of available attribute\n * configuration options.\n * @constructor\n * @extends {EventEmitter}\n */\nclass Attribute extends EventEmitter {\n\tconstructor(opt_config) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Object with information about the batch event that is currently\n\t\t * scheduled, or null if none is.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis.scheduledBatchData_ = null;\n\n\t\t/**\n\t\t * Object that contains information about all this instance's attributes.\n\t\t * @type {!Object<string, !Object>}\n\t\t * @protected\n\t\t */\n\t\tthis.attrsInfo_ = {};\n\n\t\tthis.mergeInvalidAttrs_();\n\t\tthis.addAttrsFromStaticHint_(opt_config);\n\t}\n\n\t/**\n\t * Adds the given attribute.\n\t * @param {string} name The name of the new attribute.\n\t * @param {Object.<string, *>=} config The configuration object for the new attribute.\n\t *   This object can have the following keys:\n\t *   setter - Function for normalizing new attribute values. It receives the new value\n\t *   that was set, and returns the value that should be stored.\n\t *   validator - Function that validates new attribute values. When it returns false,\n\t *   the new value is ignored.\n\t *   value - The default value for this attribute. Note that setting this to an object\n\t *   will cause all attribute instances to use the same reference to the object. To\n\t *   have each attribute instance use a different reference, use the `valueFn` option\n\t *   instead.\n\t *   valueFn - A function that returns the default value for this attribute.\n\t *   writeOnce - Ignores writes to the attribute after it's been first written to. That is,\n\t *   allows writes only when setting the attribute for the first time.\n\t * @param {*} initialValue The initial value of the new attribute. This value has higher\n\t *   precedence than the default value specified in this attribute's configuration.\n\t */\n\taddAttr(name, config, initialValue) {\n\t\tthis.buildAttrInfo_(name, config, initialValue);\n\n\t\tObject.defineProperty(this, name, {\n\t\t\tconfigurable: true,\n\t\t\tget: this.getAttrValue_.bind(this, name),\n\t\t\tset: this.setAttrValue_.bind(this, name)\n\t\t});\n\t}\n\n\t/**\n\t * Adds the given attributes.\n\t * @param {!Object.<string, !Object>} configs An object that maps the names of all the\n\t *   attributes to be added to their configuration objects.\n\t * @param {!Object.<string, *>} initialValues An object that maps the names of\n\t *   attributes to their initial values. These values have higher precedence than the\n\t *   default values specified in the attribute configurations.\n\t */\n\taddAttrs(configs, initialValues) {\n\t\tinitialValues = initialValues || {};\n\t\tvar names = Object.keys(configs);\n\n\t\tvar props = {};\n\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\tvar name = names[i];\n\t\t\tthis.buildAttrInfo_(name, configs[name], initialValues[name]);\n\t\t\tprops[name] = this.buildAttrPropertyDef_(name);\n\t\t}\n\n\t\tObject.defineProperties(this, props);\n\t}\n\n\t/**\n\t * Adds attributes from super classes static hint `MyClass.ATTRS = {};`.\n\t * @param {!Object.<string, !Object>} configs An object that maps the names\n\t *     of all the attributes to be added to their configuration objects.\n\t * @protected\n\t */\n\taddAttrsFromStaticHint_(config) {\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'ATTRS', this.mergeAttrs_);\n\t\tthis.addAttrs(this.constructor.ATTRS_MERGED, config);\n\t}\n\n\t/**\n\t * Checks that the given name is a valid attribute name. If it's not, an error\n\t * will be thrown.\n\t * @param {string} name The name to be validated.\n\t * @throws {Error}\n\t */\n\tassertValidAttrName_(name) {\n\t\tif (this.constructor.INVALID_ATTRS_MERGED[name]) {\n\t\t\tthrow new Error('It\\'s not allowed to create an attribute with the name \"' + name + '\".');\n\t\t}\n\t}\n\n\t/**\n\t * Builds the info object for the requested attribute.\n\t * @param {string} name The name of the attribute.\n\t * @param {Object} config The config object of the attribute.\n\t * @param {*} initialValue The initial value of the attribute.\n\t * @protected\n\t */\n\tbuildAttrInfo_(name, config, initialValue) {\n\t\tthis.assertValidAttrName_(name);\n\n\t\tthis.attrsInfo_[name] = {\n\t\t\tconfig: config || {},\n\t\t\tinitialValue: initialValue,\n\t\t\tstate: Attribute.States.UNINITIALIZED\n\t\t};\n\t}\n\n\t/**\n\t * Builds the property definition object for the requested attribute.\n\t * @param {string} name The name of the attribute.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tbuildAttrPropertyDef_(name) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tget: this.getAttrValue_.bind(this, name),\n\t\t\tset: this.setAttrValue_.bind(this, name)\n\t\t};\n\t}\n\n\t/**\n\t * Calls the requested function, running the appropriate code for when it's\n\t * passed as an actual function object or just the function's name.\n\t * @param {!Function|string} fn Function, or name of the function to run.\n\t * @param {!Array} An optional array of parameters to be passed to the\n\t *   function that will be called.\n\t * @return {*} The return value of the called function.\n\t * @protected\n\t */\n\tcallFunction_(fn, args) {\n\t\tif (core.isString(fn)) {\n\t\t\treturn this[fn].apply(this, args);\n\t\t} else if (core.isFunction(fn)) {\n\t\t\treturn fn.apply(this, args);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the attribute's setter, if there is one.\n\t * @param {string} name The name of the attribute.\n\t * @param {*} value The value to be set.\n\t * @return {*} The final value to be set.\n\t */\n\tcallSetter_(name, value) {\n\t\tvar info = this.attrsInfo_[name];\n\t\tvar config = info.config;\n\t\tif (config.setter) {\n\t\t\tvalue = this.callFunction_(config.setter, [value]);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Calls the attribute's validator, if there is one.\n\t * @param {string} name The name of the attribute.\n\t * @param {*} value The value to be validated.\n\t * @return {boolean} Flag indicating if value is valid or not.\n\t */\n\tcallValidator_(name, value) {\n\t\tvar info = this.attrsInfo_[name];\n\t\tvar config = info.config;\n\t\tif (config.validator) {\n\t\t\treturn this.callFunction_(config.validator, [value]);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if the it's allowed to write on the requested attribute.\n\t * @param {string} name The name of the attribute.\n\t * @return {boolean}\n\t */\n\tcanSetAttribute(name) {\n\t\tvar info = this.attrsInfo_[name];\n\t\treturn !info.config.writeOnce || !info.written;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tthis.attrsInfo_ = null;\n\t\tthis.scheduledBatchData_ = null;\n\t}\n\n\t/**\n\t * Emits the attribute change batch event.\n\t * @protected\n\t */\n\temitBatchEvent_() {\n\t\tif (!this.isDisposed()) {\n\t\t\tvar data = this.scheduledBatchData_;\n\t\t\tthis.scheduledBatchData_ = null;\n\t\t\tthis.emit('attrsChanged', data);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the config object for the requested attribute.\n\t * @param {string} name The attribute's name.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tgetAttrConfig(name) {\n\t\treturn (this.attrsInfo_[name] || {}).config;\n\t}\n\n\t/**\n\t * Returns an object that maps all attribute names to their values.\n\t * @return {Object.<string, *>}\n\t */\n\tgetAttrs() {\n\t\tvar attrsMap = {};\n\t\tvar names = this.getAttrNames();\n\n\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\tattrsMap[names[i]] = this[names[i]];\n\t\t}\n\n\t\treturn attrsMap;\n\t}\n\n\t/**\n\t * Returns an array with all attribute names.\n\t * @return {Array.<string>}\n\t */\n\tgetAttrNames() {\n\t\treturn Object.keys(this.attrsInfo_);\n\t}\n\n\t/**\n\t * Gets the value of the specified attribute. This is passed as that attribute's\n\t * getter to the `Object.defineProperty` call inside the `addAttr` method.\n\t * @param {string} name The name of the attribute.\n\t * @return {*}\n\t * @protected\n\t */\n\tgetAttrValue_(name) {\n\t\tthis.initAttr_(name);\n\n\t\treturn this.attrsInfo_[name].value;\n\t}\n\n\t/**\n\t * Informs of changes to an attributes value through an event. Won't trigger\n\t * the event if the value hasn't changed or if it's being initialized.\n\t * @param {string} name The name of the attribute.\n\t * @param {*} prevVal The previous value of the attribute.\n\t * @protected\n\t */\n\tinformChange_(name, prevVal) {\n\t\tif (this.shouldInformChange_(name, prevVal)) {\n\t\t\tvar data = {\n\t\t\t\tattrName: name,\n\t\t\t\tnewVal: this[name],\n\t\t\t\tprevVal: prevVal\n\t\t\t};\n\t\t\tthis.emit(name + 'Changed', data);\n\t\t\tthis.scheduleBatchEvent_(data);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the specified attribute, giving it a first value.\n\t * @param {string} name The name of the attribute.\n\t * @protected\n\t */\n\tinitAttr_(name) {\n\t\tvar info = this.attrsInfo_[name];\n\t\tif (info.state !== Attribute.States.UNINITIALIZED) {\n\t\t\treturn;\n\t\t}\n\n\t\tinfo.state = Attribute.States.INITIALIZING;\n\t\tthis.setInitialValue_(name);\n\t\tif (!info.written) {\n\t\t\tinfo.state = Attribute.States.INITIALIZING_DEFAULT;\n\t\t\tthis.setDefaultValue_(name);\n\t\t}\n\t\tinfo.state = Attribute.States.INITIALIZED;\n\t}\n\n\t/**\n\t * Merges an array of values for the ATTRS property into a single object.\n\t * @param {!Array} values The values to be merged.\n\t * @return {!Object} The merged value.\n\t * @protected\n\t */\n\tmergeAttrs_(values) {\n\t\treturn object.mixin.apply(null, [{}].concat(values.reverse()));\n\t}\n\n\t/**\n\t * Merges the values of the `INVALID_ATTRS` static for the whole hierarchy of\n\t * the current instance.\n\t * @protected\n\t */\n\tmergeInvalidAttrs_() {\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'INVALID_ATTRS', function(values) {\n\t\t\treturn array.flatten(values).reduce(function(merged, val) {\n\t\t\t\tif (val) {\n\t\t\t\t\tmerged[val] = true;\n\t\t\t\t}\n\t\t\t\treturn merged;\n\t\t\t}, {});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the requested attribute.\n\t * @param {string} name The name of the attribute.\n\t */\n\tremoveAttr(name) {\n\t\tthis.attrsInfo_[name] = null;\n\t\tdelete this[name];\n\t}\n\n\t/**\n\t * Schedules an attribute change batch event to be emitted asynchronously.\n\t * @param {!Object} attrChangeData Information about an attribute's update.\n\t * @protected\n\t */\n\tscheduleBatchEvent_(attrChangeData) {\n\t\tif (!this.scheduledBatchData_) {\n\t\t\tasync.nextTick(this.emitBatchEvent_, this);\n\t\t\tthis.scheduledBatchData_ = {\n\t\t\t\tchanges: {}\n\t\t\t};\n\t\t}\n\n\t\tvar name = attrChangeData.attrName;\n\t\tvar changes = this.scheduledBatchData_.changes;\n\t\tif (changes[name]) {\n\t\t\tchanges[name].newVal = attrChangeData.newVal;\n\t\t} else {\n\t\t\tchanges[name] = attrChangeData;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the value of all the specified attributes.\n\t * @param {!Object.<string,*>} values A map of attribute names to the values they\n\t *   should be set to.\n\t */\n\tsetAttrs(values) {\n\t\tvar names = Object.keys(values);\n\n\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\tthis[names[i]] = values[names[i]];\n\t\t}\n\t}\n\n\t/**\n\t * Sets the value of the specified attribute. This is passed as that attribute's\n\t * setter to the `Object.defineProperty` call inside the `addAttr` method.\n\t * @param {string} name The name of the attribute.\n\t * @param {*} value The new value of the attribute.\n\t * @protected\n\t */\n\tsetAttrValue_(name, value) {\n\t\tif (!this.canSetAttribute(name) || !this.validateAttrValue_(name, value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar info = this.attrsInfo_[name];\n\t\tif (info.initialValue === undefined && info.state === Attribute.States.UNINITIALIZED) {\n\t\t\tinfo.state = Attribute.States.INITIALIZED;\n\t\t}\n\n\t\tvar prevVal = this[name];\n\t\tinfo.value = this.callSetter_(name, value);\n\t\tinfo.written = true;\n\t\tthis.informChange_(name, prevVal);\n\t}\n\n\t/**\n\t * Sets the default value of the requested attribute.\n\t * @param {string} name The name of the attribute.\n\t * @return {*}\n\t */\n\tsetDefaultValue_(name) {\n\t\tvar config = this.attrsInfo_[name].config;\n\n\t\tif (config.value !== undefined) {\n\t\t\tthis[name] = config.value;\n\t\t} else {\n\t\t\tthis[name] = this.callFunction_(config.valueFn);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the initial value of the requested attribute.\n\t * @param {string} name The name of the attribute.\n\t * @return {*}\n\t */\n\tsetInitialValue_(name) {\n\t\tvar info = this.attrsInfo_[name];\n\t\tif (info.initialValue !== undefined) {\n\t\t\tthis[name] = info.initialValue;\n\t\t\tinfo.initialValue = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if we should inform about an attributes update. Updates are ignored\n\t * during attribute initialization. Otherwise, updates to primitive values\n\t * are only informed when the new value is different from the previous\n\t * one. Updates to objects (which includes functions and arrays) are always\n\t * informed outside initialization though, since we can't be sure if all of\n\t * the internal data has stayed the same.\n\t * @param {string} name The name of the attribute.\n\t * @param {*} prevVal The previous value of the attribute.\n\t * @return {boolean}\n\t */\n\tshouldInformChange_(name, prevVal) {\n\t\tvar info = this.attrsInfo_[name];\n\t\treturn (info.state === Attribute.States.INITIALIZED) &&\n\t\t(core.isObject(prevVal) || prevVal !== this[name]);\n\t}\n\n\t/**\n\t * Validates the attribute's value, which includes calling the validator defined\n\t * in the attribute's configuration object, if there is one.\n\t * @param {string} name The name of the attribute.\n\t * @param {*} value The value to be validated.\n\t * @return {boolean} Flag indicating if value is valid or not.\n\t */\n\tvalidateAttrValue_(name, value) {\n\t\tvar info = this.attrsInfo_[name];\n\n\t\treturn info.state === Attribute.States.INITIALIZING_DEFAULT ||\n\t\t\tthis.callValidator_(name, value);\n\t}\n}\n\n/**\n * A list with attribute names that will automatically be rejected as invalid.\n * Subclasses can define their own invalid attributes by setting this static\n * on their constructors, which will be merged together and handled automatically.\n * @type {!Array<string>}\n */\nAttribute.INVALID_ATTRS = ['attrs'];\n\n/**\n * Constants that represent the states that an attribute can be in.\n * @type {!Object}\n */\nAttribute.States = {\n\tUNINITIALIZED: 0,\n\tINITIALIZING: 1,\n\tINITIALIZING_DEFAULT: 2,\n\tINITIALIZED: 3\n};\n\nexport default Attribute;\n","'use strict';\n\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport Disposable from \"src/public/vendor/metaljs/src/disposable/Disposable\";\n\n/**\n * EventEmitterProxy utility. It's responsible for linking two EventEmitter\n * instances together, emitting events from the first emitter through the\n * second one. That means that listening to a supported event on the target\n * emitter will mean listening to it on the origin emitter as well.\n * @param {EventEmitter | Element} originEmitter Events originated on this emitter\n *   will be fired for the target emitter's listeners as well. Can be either a real\n *   EventEmitter instance or a DOM element.\n * @param {EventEmitter} targetEmitter Event listeners attached to this emitter\n *   will also be triggered when the event is fired by the origin emitter.\n * @param {Object} opt_blacklist Optional blacklist of events that should not be\n *   proxied.\n * @constructor\n * @extends {Disposable}\n */\nclass EventEmitterProxy extends Disposable {\n\tconstructor(originEmitter, targetEmitter, opt_blacklist, opt_whitelist) {\n\t\t/**\n\t\t * Map of events that should not be proxied.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t this.blacklist_ = opt_blacklist || {};\n\n\t\t/**\n\t\t * The origin emitter. This emitter's events will be proxied through the\n\t\t * target emitter.\n\t\t * @type {EventEmitter}\n\t\t * @protected\n\t\t */\n\t\tthis.originEmitter_ = originEmitter;\n\n\t\t/**\n\t\t * Holds a map of events from the origin emitter that are already being proxied.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis.proxiedEvents_ = {};\n\n\t\t/**\n\t\t * The target emitter. This emitter will emit all events that come from\n\t\t * the origin emitter.\n\t\t * @type {EventEmitter}\n\t\t * @protected\n\t\t */\n\t\tthis.targetEmitter_ = targetEmitter;\n\n\t\t /**\n\t\t\t* Map of events that should be proxied. If whitelist is set blacklist is\n\t\t\t* ignored.\n\t\t\t* @type {Object}\n\t\t\t* @protected\n\t\t\t*/\n\t\tthis.whitelist_ = opt_whitelist;\n\n\t\tthis.startProxy_();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tvar removeFnName = this.originEmitter_.removeEventListener ? 'removeEventListener' : 'removeListener';\n\t\tfor (var event in this.proxiedEvents_) {\n\t\t\tthis.originEmitter_[removeFnName](event, this.proxiedEvents_[event]);\n\t\t}\n\n\t\tthis.proxiedEvents_ = null;\n\t\tthis.originEmitter_ = null;\n\t\tthis.targetEmitter_ = null;\n\t}\n\n\t/**\n\t * Proxies the given event from the origin to the target emitter.\n\t * @param {string} event\n\t */\n\tproxyEvent_(event) {\n\t\tif (!this.shouldProxyEvent_(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = this;\n\t\tthis.proxiedEvents_[event] = function() {\n\t\t\tvar args = [event].concat(Array.prototype.slice.call(arguments, 0));\n\t\t\tself.targetEmitter_.emit.apply(self.targetEmitter_, args);\n\t\t};\n\n\t\tvar addFnName = this.originEmitter_.addEventListener ? 'addEventListener' : 'on';\n\t\tthis.originEmitter_[addFnName](event, this.proxiedEvents_[event]);\n\t}\n\n\t/**\n\t * Checks if the given event should be proxied.\n\t * @param {string} event\n\t * @return {boolean}\n\t * @protected\n\t */\n\tshouldProxyEvent_(event) {\n\t\tif (this.whitelist_ && !this.whitelist_[event]) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.blacklist_[event]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this.proxiedEvents_[event] &&\n\t\t\t(!(this.originEmitter_.removeEventListener || this.originEmitter_.addEventListener) ||\n\t\t\t\t\tdom.supportsEvent(this.originEmitter_, event));\n\t}\n\n\t/**\n\t * Starts proxying all events from the origin to the target emitter.\n\t * @protected\n\t */\n\tstartProxy_() {\n\t\tthis.targetEmitter_.on('newListener', this.proxyEvent_.bind(this));\n\t}\n}\n\nexport default EventEmitterProxy;\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport domPosition from \"src/public/vendor/metal-position/src/position\";\nimport Attribute from \"src/public/vendor/metaljs/src/attribute/Attribute\";\nimport EventEmitter from \"src/public/vendor/metaljs/src/events/EventEmitter\";\nimport EventEmitterProxy from \"src/public/vendor/metaljs/src/events/EventEmitterProxy\";\n\n/**\n * Affix utility.\n */\nclass Affix extends Attribute {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n\n    if (!Affix.emitter_) {\n      Affix.emitter_ = new EventEmitter();\n      Affix.proxy_ = new EventEmitterProxy(document, Affix.emitter_, null, { scroll: true });\n    }\n\n    /**\n     * Holds the last position.\n     * @type {Position.Bottom|Position.Default|Position.Top}\n     * @private\n     */\n    this.lastPosition_ = null;\n\n    /**\n     * Holds event handle that listens scroll shared event emitter proxy.\n     * @type {EventHandle}\n     * @protected\n     */\n    this.scrollHandle_ = Affix.emitter_.on('scroll', this.checkPosition.bind(this));\n\n    this.on('elementChanged', this.checkPosition);\n    this.on('offsetTopChanged', this.checkPosition);\n    this.on('offsetBottomChanged', this.checkPosition);\n    this.checkPosition();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    dom.removeClasses(this.element, [Affix.Position.Bottom, Affix.Position.Default, Affix.Position.Top]);\n    this.scrollHandle_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Synchronize bottom, top and element regions and checks if position has\n   * changed. If position has changed syncs position.\n   */\n  checkPosition() {\n    if (this.intersectTopRegion()) {\n      this.syncPosition(Affix.Position.Top);\n    }\n    else if (this.intersectBottomRegion()) {\n      this.syncPosition(Affix.Position.Bottom);\n    }\n    else {\n      this.syncPosition(Affix.Position.Default);\n    }\n  }\n\n  /**\n   * Whether the element is intersecting with bottom region defined by\n   * offsetBottom.\n   * @return {boolean}\n   */\n  intersectBottomRegion() {\n    if (!core.isDef(this.offsetBottom)) {\n      return false;\n    }\n    var clientHeight = domPosition.getHeight(this.scrollElement);\n    var scrollElementClientHeight = domPosition.getClientHeight(this.scrollElement);\n    return domPosition.getScrollTop(this.scrollElement) + scrollElementClientHeight >= clientHeight - this.offsetBottom;\n  }\n\n  /**\n   * Whether the element is intersecting with top region defined by\n   * offsetTop.\n   * @return {boolean}\n   */\n  intersectTopRegion() {\n    if (!core.isDef(this.offsetTop)) {\n      return false;\n    }\n    return domPosition.getScrollTop(this.scrollElement) <= this.offsetTop;\n  }\n\n  /**\n   * Synchronizes element css classes to match with the specified position.\n   * @param {Position.Bottom|Position.Default|Position.Top} position\n   */\n  syncPosition(position) {\n    if (this.lastPosition_ !== position) {\n      dom.addClasses(this.element, [position]);\n      dom.removeClasses(this.element, [this.lastPosition_]);\n      this.lastPosition_ = position;\n    }\n  }\n}\n\n/**\n * Holds positions enum.\n * @enum {string}\n */\nAffix.Position = {\n  Top: 'affix-top',\n  Bottom: 'affix-bottom',\n  Default: 'affix-default'\n};\n\nAffix.ATTRS = {\n  /**\n   * The scrollElement element to be used as scrollElement area for affix. The scrollElement is\n   * where the scroll event is listened from.\n   * @type {Element|Window}\n   */\n  scrollElement: {\n    setter: dom.toElement,\n    value: document\n  },\n\n  /**\n   * Defines the offset bottom that triggers affix.\n   * @type {Number}\n   */\n  offsetTop: {\n    validator: core.isNumber\n  },\n\n  /**\n   * Defines the offset top that triggers affix.\n   * @type {Number}\n   */\n   offsetBottom: {\n     validator: core.isNumber\n   },\n\n  /**\n   * Element to be used as alignment reference of affix.\n   * @type {Element}\n   */\n  element: {\n    setter: dom.toElement\n  }\n};\n\nexport default Affix;\n","'use strict';\n\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\n\n/**\n * Class with static methods responsible for doing browser feature checks.\n */\nclass features {\n\t/**\n\t * Some browsers (like IE9) change the order of element attributes, when html\n\t * is rendered. This method can be used to check if this behavior happens on\n\t * the current browser.\n\t * @return {boolean}\n\t */\n\tstatic checkAttrOrderChange() {\n\t\tif (features.attrOrderChange_ === undefined) {\n\t\t\tvar originalContent = '<div data-component=\"\" data-ref=\"\"></div>';\n\t\t\tvar element = document.createElement('div');\n\t\t\tdom.append(element, originalContent);\n\t\t\tfeatures.attrOrderChange_ = originalContent !== element.innerHTML;\n\t\t}\n\t\treturn features.attrOrderChange_;\n\t}\n}\n\nfeatures.attrOrderChange_ = undefined;\n\nexport default features;\n","'use strict';\n\nclass string {\n\t/**\n\t * Removes the breaking spaces from the left and right of the string and\n\t * collapses the sequences of breaking spaces in the middle into single spaces.\n\t * The original and the result strings render the same way in HTML.\n\t * @param {string} str A string in which to collapse spaces.\n\t * @return {string} Copy of the string with normalized breaking spaces.\n\t */\n\tstatic collapseBreakingSpaces(str) {\n\t\treturn str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n\t}\n\n\t/**\n\t * Calculates the hashcode for a string. The hashcode value is computed by\n\t * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n\t * property of using 31 prime is that the multiplication can be replaced by\n\t * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n\t * Modern VMs do this sort of optimization automatically.\n\t * @param {String} val Target string.\n\t * @return {Number} Returns the string hashcode.\n\t */\n\tstatic hashCode(val) {\n\t\tvar hash = 0;\n\t\tfor (var i = 0, len = val.length; i < len; i++) {\n\t\t\thash = 31 * hash + val.charCodeAt(i);\n\t\t\thash %= 0x100000000;\n\t\t}\n\t\treturn hash;\n\t}\n\n\t/**\n\t * Replaces interval into the string with specified value, e.g.\n\t * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n\t * @param {string} str The input string.\n\t * @param {Number} start Start interval position to be replaced.\n\t * @param {Number} end End interval position to be replaced.\n\t * @param {string} value The value that replaces the specified interval.\n\t * @return {string}\n\t */\n\tstatic replaceInterval(str, start, end, value) {\n\t\treturn str.substring(0, start) + value + str.substring(end);\n\t}\n}\n\nexport default string;\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport string from \"src/public/vendor/metaljs/src/string/string\";\n\nclass html {\n\t/**\n\t * Minifies given HTML source by removing extra white spaces, comments and\n\t * other unneeded characters without breaking the content structure. As a\n\t * result HTML become smaller in size.\n\t * - Contents within <code>, <pre>, <script>, <style>, <textarea> and\n\t *   conditional comments tags are preserved.\n\t * - Comments are removed.\n\t * - Conditional comments are preserved.\n\t * - Breaking spaces are collapsed into a single space.\n\t * - Unneeded spaces inside tags (around = and before />) are removed.\n\t * - Spaces between tags are removed, even from inline-block elements.\n\t * - Spaces surrounding tags are removed.\n\t * - DOCTYPE declaration is simplified to <!DOCTYPE html>.\n\t * - Does not remove default attributes from <script>, <style>, <link>,\n\t *   <form>, <input>.\n\t * - Does not remove values from boolean tag attributes.\n\t * - Does not remove \"javascript:\" from in-line event handlers.\n\t * - Does not remove http:// and https:// protocols.\n\t * @param {string} htmlString Input HTML to be compressed.\n\t * @return {string} Compressed version of the HTML.\n\t */\n\tstatic compress(htmlString) {\n\t\tvar preserved = {};\n\t\thtmlString = html.preserveBlocks_(htmlString, preserved);\n\t\thtmlString = html.simplifyDoctype_(htmlString);\n\t\thtmlString = html.removeComments_(htmlString);\n\t\thtmlString = html.removeIntertagSpaces_(htmlString);\n\t\thtmlString = html.collapseBreakingSpaces_(htmlString);\n\t\thtmlString = html.removeSpacesInsideTags_(htmlString);\n\t\thtmlString = html.removeSurroundingSpaces_(htmlString);\n\t\thtmlString = html.returnBlocks_(htmlString, preserved);\n\t\treturn htmlString.trim();\n\t}\n\n\t/**\n\t * Collapses breaking spaces into a single space.\n\t * @param {string} htmlString\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic collapseBreakingSpaces_(htmlString) {\n\t\treturn string.collapseBreakingSpaces(htmlString);\n\t}\n\n\t/**\n\t * Searches for first occurrence of the specified open tag string pattern\n\t * and from that point finds next \">\" position, identified as possible tag\n\t * end position.\n\t * @param {string} htmlString\n\t * @param {string} openTag Open tag string pattern without open tag ending\n\t *     character, e.g. \"<textarea\" or \"<code\".\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic lookupPossibleTagBoundary_(htmlString, openTag) {\n\t\tvar tagPos = htmlString.indexOf(openTag);\n\t\tif (tagPos > -1) {\n\t\t\ttagPos += htmlString.substring(tagPos).indexOf('>') + 1;\n\t\t}\n\t\treturn tagPos;\n\t}\n\n\t/**\n\t * Preserves contents inside any <code>, <pre>, <script>, <style>,\n\t * <textarea> and conditional comment tags. When preserved, original content\n\t * are replaced with an unique generated block id and stored into\n\t * `preserved` map.\n\t * @param {string} htmlString\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {html} The preserved HTML.\n\t * @protected\n\t */\n\tstatic preserveBlocks_(htmlString, preserved) {\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<!--[if', '<![endif]-->', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<code', '</code', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<pre', '</pre', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<script', '</script', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<style', '</style', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<textarea', '</textarea', preserved);\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Preserves inner contents inside the specified tag. When preserved,\n\t * original content are replaced with an unique generated block id and\n\t * stored into `preserved` map.\n\t * @param {string} htmlString\n\t * @param {string} openTag Open tag string pattern without open tag ending\n\t *     character, e.g. \"<textarea\" or \"<code\".\n\t * @param {string} closeTag Close tag string pattern without close tag\n\t *     ending character, e.g. \"</textarea\" or \"</code\".\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {html} The preserved HTML.\n\t * @protected\n\t */\n\tstatic preserveInnerHtml_(htmlString, openTag, closeTag, preserved) {\n\t\tvar tagPosEnd = html.lookupPossibleTagBoundary_(htmlString, openTag);\n\t\twhile (tagPosEnd > -1) {\n\t\t\tvar tagEndPos = htmlString.indexOf(closeTag);\n\t\t\thtmlString = html.preserveInterval_(htmlString, tagPosEnd, tagEndPos, preserved);\n\t\t\thtmlString = htmlString.replace(openTag, '%%%~1~%%%');\n\t\t\thtmlString = htmlString.replace(closeTag, '%%%~2~%%%');\n\t\t\ttagPosEnd = html.lookupPossibleTagBoundary_(htmlString, openTag);\n\t\t}\n\t\thtmlString = htmlString.replace(/%%%~1~%%%/g, openTag);\n\t\thtmlString = htmlString.replace(/%%%~2~%%%/g, closeTag);\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Preserves interval of the specified HTML into the preserved map replacing\n\t * original contents with an unique generated id.\n\t * @param {string} htmlString\n\t * @param {Number} start Start interval position to be replaced.\n\t * @param {Number} end End interval position to be replaced.\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {string} The HTML with replaced interval.\n\t * @protected\n\t */\n\tstatic preserveInterval_(htmlString, start, end, preserved) {\n\t\tvar blockId = '%%%~BLOCK~' + core.getUid() + '~%%%';\n\t\tpreserved[blockId] = htmlString.substring(start, end);\n\t\treturn string.replaceInterval(htmlString, start, end, blockId);\n\t}\n\n\t/**\n\t * Preserves outer contents inside the specified tag. When preserved,\n\t * original content are replaced with an unique generated block id and\n\t * stored into `preserved` map.\n\t * @param {string} htmlString\n\t * @param {string} openTag Open tag string pattern without open tag ending\n\t *     character, e.g. \"<textarea\" or \"<code\".\n\t * @param {string} closeTag Close tag string pattern without close tag\n\t *     ending character, e.g. \"</textarea\" or \"</code\".\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {html} The preserved HTML.\n\t * @protected\n\t */\n\tstatic preserveOuterHtml_(htmlString, openTag, closeTag, preserved) {\n\t\tvar tagPos = htmlString.indexOf(openTag);\n\t\twhile (tagPos > -1) {\n\t\t\tvar tagEndPos = htmlString.indexOf(closeTag) + closeTag.length;\n\t\t\thtmlString = html.preserveInterval_(htmlString, tagPos, tagEndPos, preserved);\n\t\t\ttagPos = htmlString.indexOf(openTag);\n\t\t}\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes all comments of the HTML. Including conditional comments and\n\t * \"<![CDATA[\" blocks.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without comments.\n\t * @protected\n\t */\n\tstatic removeComments_(htmlString) {\n\t\tvar preserved = {};\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<![CDATA[', ']]>', preserved);\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<!--', '-->', preserved);\n\t\thtmlString = html.replacePreservedBlocks_(htmlString, preserved, '');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes spaces between tags, even from inline-block elements.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without spaces between tags.\n\t * @protected\n\t */\n\tstatic removeIntertagSpaces_(htmlString) {\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_CUSTOM_CUSTOM, '~%%%%%%~');\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_CUSTOM_TAG, '~%%%<');\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_TAG, '><');\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_TAG_CUSTOM, '>%%%~');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes spaces inside tags.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without spaces inside tags.\n\t * @protected\n\t */\n\tstatic removeSpacesInsideTags_(htmlString) {\n\t\thtmlString = htmlString.replace(html.Patterns.TAG_END_SPACES, '$1$2');\n\t\thtmlString = htmlString.replace(html.Patterns.TAG_QUOTE_SPACES, '=$1$2$3');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes spaces surrounding tags.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without spaces surrounding tags.\n\t * @protected\n\t */\n\tstatic removeSurroundingSpaces_(htmlString) {\n\t\treturn htmlString.replace(html.Patterns.SURROUNDING_SPACES, '$1');\n\t}\n\n\t/**\n\t * Restores preserved map keys inside the HTML. Note that the passed HTML\n\t * should contain the unique generated block ids to be replaced.\n\t * @param {string} htmlString\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @param {string} replaceValue The value to replace any block id inside the\n\t * HTML.\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic replacePreservedBlocks_(htmlString, preserved, replaceValue) {\n\t\tfor (var blockId in preserved) {\n\t\t\thtmlString = htmlString.replace(blockId, replaceValue);\n\t\t}\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Simplifies DOCTYPE declaration to <!DOCTYPE html>.\n\t * @param {string} htmlString\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic simplifyDoctype_(htmlString) {\n\t\tvar preserved = {};\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<!DOCTYPE', '>', preserved);\n\t\thtmlString = html.replacePreservedBlocks_(htmlString, preserved, '<!DOCTYPE html>');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Restores preserved map original contents inside the HTML. Note that the\n\t * passed HTML should contain the unique generated block ids to be restored.\n\t * @param {string} htmlString\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic returnBlocks_(htmlString, preserved) {\n\t\tfor (var blockId in preserved) {\n\t\t\thtmlString = htmlString.replace(blockId, preserved[blockId]);\n\t\t}\n\t\treturn htmlString;\n\t}\n}\n\n/**\n * HTML regex patterns.\n * @enum {RegExp}\n * @protected\n */\nhtml.Patterns = {\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_CUSTOM_CUSTOM: /~%%%\\s+%%%~/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_TAG_CUSTOM: />\\s+%%%~/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_CUSTOM_TAG: /~%%%\\s+</g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_TAG: />\\s+</g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tSURROUNDING_SPACES: /\\s*(<[^>]+>)\\s*/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tTAG_END_SPACES: /(<(?:[^>]+?))(?:\\s+?)(\\/?>)/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tTAG_QUOTE_SPACES: /\\s*=\\s*([\"']?)\\s*(.*?)\\s*(\\1)/g\n};\n\nexport default html;\n","'use strict';\n\nimport Disposable from \"src/public/vendor/metaljs/src/disposable/Disposable\";\n\n/**\n * EventHandler utility. It's useful for easily removing a group of\n * listeners from different EventEmitter instances.\n * @constructor\n * @extends {Disposable}\n */\nclass EventHandler extends Disposable {\n\tconstructor() {\n\t\t\t/**\n\t\t\t * An array that holds the added event handles, so the listeners can be\n\t\t\t * removed later.\n\t\t\t * @type {Array.<EventHandle>}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis.eventHandles_ = [];\n\t}\n\n\t/**\n\t * Adds event handles to be removed later through the `removeAllListeners`\n\t * method.\n\t * @param {...(!EventHandle)} var_args\n\t */\n\tadd() {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tthis.eventHandles_.push(arguments[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tthis.eventHandles_ = null;\n\t}\n\n\t/**\n\t * Removes all listeners that have been added through the `add` method.\n\t */\n\tremoveAllListeners() {\n\t\tfor (var i = 0; i < this.eventHandles_.length; i++) {\n\t\t\tthis.eventHandles_[i].removeListener();\n\t\t}\n\n\t\tthis.eventHandles_ = [];\n\t}\n}\n\nexport default EventHandler;\n","'use strict';\n\nimport array from \"src/public/vendor/metaljs/src/array/array\";\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport features from \"src/public/vendor/metaljs/src/dom/features\";\nimport html from \"src/public/vendor/metaljs/src/html/html\";\nimport object from \"src/public/vendor/metaljs/src/object/object\";\nimport string from \"src/public/vendor/metaljs/src/string/string\";\nimport Attribute from \"src/public/vendor/metaljs/src/attribute/Attribute\";\nimport EventEmitterProxy from \"src/public/vendor/metaljs/src/events/EventEmitterProxy\";\nimport EventHandler from \"src/public/vendor/metaljs/src/events/EventHandler\";\n\n/**\n * Component collects common behaviors to be followed by UI components, such\n * as Lifecycle, bounding box element creation, CSS classes management,\n * events encapsulation and surfaces support. Surfaces are an area of the\n * component that can have information rendered into it. A component\n * manages multiple surfaces. Surfaces are only rendered when its content is\n * modified, representing render performance gains. For each surface, render\n * attributes could be associated, when the render context of a surface gets\n * modified the component Lifecycle re-paints the modified surface\n * automatically.\n *\n * Example:\n *\n * <code>\n * class CustomComponent extends Component {\n *   constructor(config) {\n *     super(config);\n *   }\n *\n *   created() {\n *   }\n *\n *   decorateInternal() {\n *   }\n *\n *   renderInternal() {\n *     this.element.appendChild(this.getSurfaceElement('header'));\n *     this.element.appendChild(this.getSurfaceElement('bottom'));\n *   }\n *\n *   getSurfaceContent(surfaceId) {\n *   }\n *\n *   attached() {\n *   }\n *\n *   detached() {\n *   }\n * }\n *\n * CustomComponent.ATTRS = {\n *   title: { value: 'Title' },\n *   fontSize: { value: '10px' }\n * };\n *\n * CustomComponent.SURFACES = {\n *   header: { renderAttrs: ['title', 'fontSize'] },\n *   bottom: { renderAttrs: ['fontSize'] }\n * };\n * </code>\n *\n * @param {!Object} opt_config An object with the initial values for this component's\n *   attributes.\n * @constructor\n * @extends {Attribute}\n */\nclass Component extends Attribute {\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\t/**\n\t\t * Whether the element is being decorated.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.decorating_ = false;\n\n\t\t/**\n\t\t * Holds events that were listened through the `delegate` Component function.\n\t\t * @type {EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.delegateEventHandler_ = null;\n\n\t\t/**\n\t\t * Instance of `EventEmitterProxy` which proxies events from the component's\n\t\t * element to the component itself.\n\t\t * @type {EventEmitterProxy}\n\t\t * @protected\n\t\t */\n\t\tthis.elementEventProxy_ = null;\n\n\t\t/**\n\t\t * Whether the element is in document.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.inDocument = false;\n\n\t\t/**\n\t\t * Maps that index the surfaces instances by the surface id.\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.surfaces_ = null;\n\n\t\t/**\n\t\t * Whether the element was rendered.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.wasRendered = false;\n\n\t\t/**\n\t\t * Whether the element was decorated.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.wasDecorated = false;\n\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'ELEMENT_CLASSES', this.mergeElementClasses_);\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'ELEMENT_TAG_NAME', array.firstDefinedValue);\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'SURFACE_TAG_NAME', array.firstDefinedValue);\n\t\tthis.addSurfacesFromStaticHint_();\n\n\t\tthis.delegateEventHandler_ = new EventHandler();\n\n\t\tthis.created_();\n\t}\n\n\t/**\n\t * Overrides `addSingleListener_` from `EventEmitter`, so we can create\n\t * the `EventEmitterProxy` instance only when it's needed for the first\n\t * time.\n\t * @param {string} event\n\t * @param {!Function} listener\n\t * @param {Function=} opt_origin The original function that was added as a\n\t *   listener, if there is any.\n\t * @protected\n\t * @override\n\t */\n\taddSingleListener_(event, listener, opt_origin) {\n\t\tif (!this.elementEventProxy_ &&\n\t\t\t\tdom.supportsEvent(this.constructor.ELEMENT_TAG_NAME_MERGED, event)) {\n\t\t\tthis.elementEventProxy_ = new EventEmitterProxy(this.element, this);\n\t\t}\n\t\tsuper.addSingleListener_(event, listener, opt_origin);\n\t}\n\n\t/**\n\t * Registers a surface to the component. Surface elements are not\n\t * automatically appended to the component element.\n\t * @param {string} surfaceId The surface id to be registered.\n\t * @param {Object=} opt_config Optional surface configuration.\n\t * @chainable\n\t */\n\taddSurface(surfaceId, opt_config) {\n\t\tthis.surfaces_[surfaceId] = opt_config || {};\n\t\tthis.cacheSurfaceRenderAttrs_(surfaceId);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers surfaces to the component. Surface elements are not\n\t * automatically appended to the component element.\n\t * @param {!Object.<string, Object=>} configs An object that maps the names\n\t *     of all the surfaces to be added to their configuration objects.\n\t * @chainable\n\t */\n\taddSurfaces(configs) {\n\t\tfor (var surfaceId in configs) {\n\t\t\tthis.addSurface(surfaceId, configs[surfaceId]);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds surfaces from super classes static hint.\n\t * @protected\n\t */\n\taddSurfacesFromStaticHint_() {\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'SURFACES', this.mergeSurfaces_);\n\t\tthis.surfaces_ = {};\n\t\tthis.surfacesRenderAttrs_ = {};\n\n\t\tvar configs = this.constructor.SURFACES_MERGED;\n\t\tfor (var surfaceId in configs) {\n\t\t\tthis.addSurface(surfaceId, object.mixin({}, configs[surfaceId]));\n\t\t}\n\t}\n\n\t/**\n\t * Invokes the attached Lifecycle. When attached, the component element is\n\t * appended to the DOM and any other action to be performed must be\n\t * implemented in this method, such as, binding DOM events. A component can\n\t * be re-attached multiple times.\n\t * @param {(string|Element)=} opt_parentElement Optional parent element\n\t *     to render the component.\n\t * @param {(string|Element)=} opt_siblingElement Optional sibling element\n\t *     to render the component before it. Relevant when the component needs\n\t *     to be rendered before an existing element in the DOM, e.g.\n\t *     `component.render(null, existingElement)`.\n\t * @protected\n\t * @chainable\n\t */\n\tattach(opt_parentElement, opt_siblingElement) {\n\t\tif (!this.inDocument) {\n\t\t\tthis.renderElement_(opt_parentElement, opt_siblingElement);\n\t\t\tthis.inDocument = true;\n\t\t\tthis.attached();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Lifecycle. When attached, the component element is appended to the DOM\n\t * and any other action to be performed must be implemented in this method,\n\t * such as, binding DOM events. A component can be re-attached multiple\n\t * times, therefore the undo behavior for any action performed in this phase\n\t * must be implemented on the detach phase.\n\t */\n\tattached() {\n\t}\n\n\t/**\n\t * Caches the given content for the surface with the requested id.\n\t * @param {string} surfaceId\n\t * @param {string} content\n\t */\n\tcacheSurfaceContent(surfaceId, content) {\n\t\tvar cacheState = this.computeSurfaceCacheState_(content);\n\t\tvar surface = this.getSurface(surfaceId);\n\t\tsurface.cacheState = cacheState;\n\t}\n\n\t/**\n\t * Caches surface render attributes into a O(k) flat map representation.\n\t * Relevant for performance to calculate the surfaces group that were\n\t * modified by attributes mutation.\n\t * @param {string} surfaceId The surface id to be cached into the flat map.\n\t * @protected\n\t */\n\tcacheSurfaceRenderAttrs_(surfaceId) {\n\t\tvar attrs = this.getSurface(surfaceId).renderAttrs || [];\n\t\tfor (var i = 0; i < attrs.length; i++) {\n\t\t\tthis.surfacesRenderAttrs_[attrs[i]] = this.surfacesRenderAttrs_[attrs[i]] || {};\n\t\t\tthis.surfacesRenderAttrs_[attrs[i]][surfaceId] = true;\n\t\t}\n\t}\n\n\t/**\n\t * Clears the surfaces content cache.\n\t * @protected\n\t */\n\tclearSurfacesCache_() {\n\t\tfor (var surfaceId in this.surfaces_) {\n\t\t\tthis.getSurface(surfaceId).cacheState = Component.Cache.NOT_INITIALIZED;\n\t\t}\n\t}\n\n\t/**\n\t * Computes the cache state for the surface content. If value is string, the\n\t * cache state is represented by its hashcode.\n\t * @param {Object} value The value to calculate the cache state.\n\t * @return {Object} The computed cache state.\n\t * @protected\n\t */\n\tcomputeSurfaceCacheState_(value) {\n\t\tif (core.isString(value)) {\n\t\t\tif (features.checkAttrOrderChange()) {\n\t\t\t\tvalue = this.convertHtmlToBrowserFormat_(value);\n\t\t\t}\n\t\t\treturn string.hashCode(value);\n\t\t}\n\t\treturn Component.Cache.NOT_CACHEABLE;\n\t}\n\n\t/**\n\t * Computes the cache state for the surface content based on the decorated\n\t * DOM element. The innerHTML of the surface element is read and compressed\n\t * in order to minimize mismatches caused by breaking spaces or HTML\n\t * formatting differences that does not affect the content structure.\n\t * @protected\n\t */\n\tcomputeSurfacesCacheStateFromDom_() {\n\t\tfor (var surfaceId in this.surfaces_) {\n\t\t\tthis.cacheSurfaceContent(surfaceId, html.compress(this.getSurfaceElement(surfaceId).innerHTML));\n\t\t}\n\t}\n\n\t/**\n\t * Converts the given html string to the format the current browser uses\n\t * when html is rendered. This is done by rendering the html in a temporary\n\t * element, and returning its resulting rendered html.\n\t * @param {string} htmlString The html to be converted.\n\t * @return {string}\n\t * @protected\n\t */\n\tconvertHtmlToBrowserFormat_(htmlString) {\n\t\tvar element = document.createElement('div');\n\t\tdom.append(element, htmlString);\n\t\treturn element.innerHTML;\n\t}\n\n\t/**\n\t * Lifecycle. Creation phase of the component happens once after the\n\t * component is instantiated, therefore its the initial phase of the\n\t * component Lifecycle. Be conscious about actions performed in this phase\n\t * to not compromise instantiation time with operations that can be\n\t * postponed to further phases. It's recommended to bind component custom\n\t * events in this phase, in contrast to DOM events that must be bind on\n\t * attach phase.\n\t */\n\tcreated() {\n\t}\n\n\t/**\n\t * Creates the surface element with its id namespaced to the component id.\n\t * @param {string} surfaceElementId The id of the element for the surface to be\n\t *   created.\n\t * @return {Element} The surface element.\n\t * @protected\n\t */\n\tcreateSurfaceElement_(surfaceElementId) {\n\t\tvar el = document.createElement(this.constructor.SURFACE_TAG_NAME_MERGED);\n\t\tel.id = surfaceElementId;\n\t\treturn el;\n\t}\n\n\t/**\n\t * Lifecycle. Internal implementation for decoration. Any extra operation\n\t * necessary to prepare the component DOM must be implemented in this phase.\n\t */\n\tdecorateInternal() {\n\t}\n\n\t/**\n\t * Listens to a delegate event on the component's element.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {string} selector The selector that matches the child elements that\n\t *   the event should be triggered for.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tdelegate(eventName, selector, callback) {\n\t\tvar handle = dom.delegate(this.element, eventName, selector, callback);\n\t\tthis.delegateEventHandler_.add(handle);\n\t\treturn handle;\n\t}\n\n\t/**\n\t * Invokes the detached Lifecycle. When detached, the component element is\n\t * removed from the DOM and any other action to be performed must be\n\t * implemented in this method, such as, unbinding DOM events. A component\n\t * can be detached multiple times.\n\t * @chainable\n\t */\n\tdetach() {\n\t\tif (this.inDocument) {\n\t\t\tthis.element.parentNode.removeChild(this.element);\n\t\t\tthis.inDocument = false;\n\t\t\tthis.detached();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Lifecycle. When detached, the component element is removed from the DOM\n\t * and any other action to be performed must be implemented in this method,\n\t * such as, unbinding DOM events. A component can be detached multiple\n\t * times, therefore the undo behavior for any action performed in this phase\n\t * must be implemented on the attach phase.\n\t */\n\tdetached() {\n\t}\n\n\t/**\n\t * Internal implementation for the creation phase of the component.\n\t * @protected\n\t */\n\tcreated_() {\n\t\tthis.on('attrsChanged', this.handleAttributesChanges_);\n\t\tthis.created();\n\t}\n\n\t/**\n\t * Lifecycle. Creates the component using existing DOM elements. Often the\n\t * component can be created using existing elements in the DOM to leverage\n\t * progressive enhancement. Any extra operation necessary to prepare the\n\t * component DOM must be implemented in this phase. Decorate phase replaces\n\t * render phase.\n\t *\n\t * Decoration Lifecycle:\n\t *   decorate - Decorate is manually called.\n\t *   decorateInternal - Internal implementation for decoration happens.\n\t *   render surfaces - All surfaces content are rendered.\n\t *   attribute synchronization - All synchronization methods are called.\n\t *   attach - Attach Lifecycle is called.\n\t * @chainable\n\t */\n\tdecorate() {\n\t\tif (this.inDocument) {\n\t\t\tthrow new Error(Component.Error.ALREADY_RENDERED);\n\t\t}\n\t\tthis.decorating_ = true;\n\n\t\tthis.decorateInternal();\n\t\tthis.computeSurfacesCacheStateFromDom_(); // TODO(edu): This optimization seems worth it, analyze it.\n\t\tthis.renderSurfacesContent_(this.surfaces_); // TODO(edu): Sync surfaces on decorate?\n\n\t\tthis.syncAttrs_();\n\n\t\tthis.attach();\n\n\t\tthis.decorating_ = false;\n\t\tthis.wasDecorated = true;\n\t\tthis.wasRendered = true;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.detach();\n\n\t\tif (this.elementEventProxy_) {\n\t\t\tthis.elementEventProxy_.dispose();\n\t\t\tthis.elementEventProxy_ = null;\n\t\t}\n\n\t\tthis.delegateEventHandler_.removeAllListeners();\n\t\tthis.delegateEventHandler_ = null;\n\n\t\tthis.surfaces_ = null;\n\t\tthis.surfacesRenderAttrs_ = null;\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Extracts the surfaceId from the elementId.\n\t * @param {Element} element\n\t * @return {?string}\n\t */\n\tstatic extractComponentId(surfaceElementId) {\n\t\tvar index = surfaceElementId.lastIndexOf('-');\n\t\treturn index === -1 ? surfaceElementId : surfaceElementId.substring(0, index);\n\t}\n\n\t/**\n\t * Fires attributes synchronization changes for attributes.\n\t * @protected\n\t */\n\tsyncAttrs_() {\n\t\tvar attrNames = this.getAttrNames();\n\t\tfor (var i = 0; i < attrNames.length; i++) {\n\t\t\tthis.fireAttrChange_(attrNames[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Fires attributes synchronization changes for attributes.\n\t * @param {Object.<string, Object>} changes Object containing the attribute\n\t *     name as key and an object with newVal and prevVal as value.\n\t * @protected\n\t */\n\tsyncAttrsFromChanges_(changes) {\n\t\tfor (var attr in changes) {\n\t\t\tthis.fireAttrChange_(attr, changes[attr]);\n\t\t}\n\t}\n\n\t/**\n\t * Fires attribute synchronization change for the attribute.\n\t * @param {Object.<string, Object>} change Object containing newVal and\n\t *     prevVal keys.\n\t * @protected\n\t */\n\tfireAttrChange_(attr, opt_change) {\n\t\tvar fn = this['sync' + attr.charAt(0).toUpperCase() + attr.slice(1)];\n\t\tif (core.isFunction(fn)) {\n\t\t\tif (!opt_change) {\n\t\t\t\topt_change = {\n\t\t\t\t\tnewVal: this[attr],\n\t\t\t\t\tprevVal: undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\tfn.call(this, opt_change.newVal, opt_change.prevVal);\n\t\t}\n\t}\n\n\t/**\n\t * Gets surfaces that got modified by the specified attributes changes.\n\t * @param {Object.<string, Object>} changes Object containing the attribute\n\t *     name as key and an object with newVal and prevVal as value.\n\t * @return {Object.<string, boolean>} Object containing modified surface ids\n\t *     as key and true as value.\n\t */\n\tgetModifiedSurfacesFromChanges_(changes) {\n\t\tvar surfaces = [];\n\t\tfor (var attr in changes) {\n\t\t\tsurfaces.push(this.surfacesRenderAttrs_[attr]);\n\t\t}\n\t\treturn object.mixin.apply(null, surfaces);\n\t}\n\n\t/**\n\t * Gets surface configuration object. If surface is not registered returns\n\t * null.\n\t * @param {string} surfaceId The surface id.\n\t * @return {?Object} The surface configuration object.\n\t */\n\tgetSurface(surfaceId) {\n\t\treturn this.surfaces_[surfaceId] || null;\n\t}\n\n\t/**\n\t * Gets the content for the requested surface. Should be implemented by subclasses.\n\t * @param {string} surfaceId The surface id.\n\t * @return {Object|string} The content to be rendered.\n\t */\n\tgetSurfaceContent() {\n\t}\n\n\t/**\n\t * Gets the content for the requested surface. By default this just calls\n\t * `getSurfaceContent`, but can be overriden to add more behavior (check\n\t * `SoyComponent` for an example).\n\t * @param {string} surfaceId The surface id.\n\t * @return {Object|string} The content to be rendered.\n\t * @protected\n\t */\n\tgetSurfaceContent_(surfaceId) {\n\t\treturn this.getSurfaceContent(surfaceId);\n\t}\n\n\t/**\n\t * Queries from the document or creates an element for the surface. Surface\n\t * elements have its surface id namespaced to the component id, e.g. for a\n\t * component with id `gallery` and a surface with id `pictures` the surface\n\t * element will be represented by the id `gallery-pictures`. Surface\n\t * elements must also be appended to the component element.\n\t * @param {string} surfaceId The surface id.\n\t * @return {Element} The surface element or null if surface not registered.\n\t */\n\tgetSurfaceElement(surfaceId) {\n\t\tvar surface = this.getSurface(surfaceId);\n\t\tif (!surface) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!surface.element) {\n\t\t\tvar surfaceElementId = this.makeSurfaceId_(surfaceId);\n\t\t\tsurface.element = document.getElementById(surfaceElementId) ||\n\t\t\t\tthis.element.querySelector('#' + surfaceElementId) ||\n\t\t\tthis.createSurfaceElement_(surfaceElementId);\n\t\t}\n\t\treturn surface.element;\n\t}\n\n\t/**\n\t * A map of surface ids to the respective surface object.\n\t * @return {!Object}\n\t */\n\tgetSurfaces() {\n\t\treturn this.surfaces_;\n\t}\n\n\t/**\n\t * Handles attributes batch changes. Responsible for surface mutations and\n\t * attributes synchronization.\n\t * @param {Event} event\n\t * @protected\n\t */\n\thandleAttributesChanges_(event) {\n\t\tif (this.inDocument) {\n\t\t\tthis.renderSurfacesContent_(this.getModifiedSurfacesFromChanges_(event.changes));\n\t\t}\n\t\tthis.syncAttrsFromChanges_(event.changes);\n\t}\n\n\t/**\n\t * Makes an unique id for the component.\n\t * @return {string} Unique id.\n\t * @protected\n\t */\n\tmakeId_() {\n\t\treturn 'metal_c_' + core.getUid(this);\n\t}\n\n\t/**\n\t * Makes the id for the surface scoped by the component.\n\t * @param {string} surfaceId The surface id.\n\t * @return {string}\n\t * @protected\n\t */\n\tmakeSurfaceId_(surfaceId) {\n\t\treturn this.id + '-' + surfaceId;\n\t}\n\n\t/**\n\t * Merges an array of values for the ELEMENT_CLASSES property into a single object.\n\t * @param {!Array.<string>} values The values to be merged.\n\t * @return {!string} The merged value.\n\t * @protected\n\t */\n\tmergeElementClasses_(values) {\n\t\treturn values.filter(function(val) {\n\t\t\treturn val;\n\t\t}).join(' ');\n\t}\n\n\t/**\n\t * Merges an array of values for the SURFACES property into a single object.\n\t * @param {!Array} values The values to be merged.\n\t * @return {!Object} The merged value.\n\t * @protected\n\t */\n\tmergeSurfaces_(values) {\n\t\treturn object.mixin.apply(null, [{}].concat(values.reverse()));\n\t}\n\n\t/**\n\t * Unregisters a surface and removes its element from the DOM.\n\t * @param {string} surfaceId The surface id.\n\t * @chainable\n\t */\n\tremoveSurface(surfaceId) {\n\t\tvar el = this.getSurfaceElement(surfaceId);\n\t\tif (el && el.parentNode) {\n\t\t\tel.parentNode.removeChild(el);\n\t\t}\n\t\tdelete this.surfaces_[surfaceId];\n\t\treturn this;\n\t}\n\n\t/**\n\t * Lifecycle. Renders the component into the DOM. Render phase replaces\n\t * decorate phase, without progressive enhancement support.\n\t *\n\t * Render Lifecycle:\n\t *   render - Decorate is manually called.\n\t *   renderInternal - Internal implementation for rendering happens.\n\t *   render surfaces - All surfaces content are rendered.\n\t *   attribute synchronization - All synchronization methods are called.\n\t *   attach - Attach Lifecycle is called.\n\t *\n\t * @param {(string|Element)=} opt_parentElement Optional parent element\n\t *     to render the component.\n\t * @param {(string|Element)=} opt_siblingElement Optional sibling element\n\t *     to render the component before it. Relevant when the component needs\n\t *     to be rendered before an existing element in the DOM, e.g.\n\t *     `component.render(null, existingElement)`.\n\t * @chainable\n\t */\n\trender(opt_parentElement, opt_siblingElement) {\n\t\tif (this.wasRendered) {\n\t\t\tthrow new Error(Component.Error.ALREADY_RENDERED);\n\t\t}\n\n\t\tthis.renderInternal();\n\t\tthis.clearSurfacesCache_();\n\t\tthis.renderSurfacesContent_(this.surfaces_);\n\n\t\tthis.syncAttrs_();\n\n\t\tthis.attach(opt_parentElement, opt_siblingElement);\n\n\t\tthis.wasRendered = true;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Renders the component element into the DOM.\n\t * @param {(string|Element)=} opt_parentElement Optional parent element\n\t *     to render the component.\n\t * @param {(string|Element)=} opt_siblingElement Optional sibling element\n\t *     to render the component before it. Relevant when the component needs\n\t *     to be rendered before an existing element in the DOM, e.g.\n\t *     `component.render(null, existingElement)`.\n\t * @protected\n\t */\n\trenderElement_(opt_parentElement, opt_siblingElement) {\n\t\tvar element = this.element;\n\t\telement.id = this.id;\n\t\tif (opt_siblingElement || !element.parentNode) {\n\t\t\tvar parent = dom.toElement(opt_parentElement) || document.body;\n\t\t\tparent.insertBefore(element, dom.toElement(opt_siblingElement));\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Internal implementation for rendering. Any extra operation\n\t * necessary to prepare the component DOM must be implemented in this phase.\n\t */\n\trenderInternal() {\n\t}\n\n\t/**\n\t * Render content into a surface. If the specified content is the same of\n\t * the current surface content, nothing happens. If the surface cache state\n\t * is not initialized or the content is not eligible for cache or content is\n\t * different, the surfaces re-renders. It's not recommended to use this\n\t * method directly since surface content can be provided by\n\t * `getSurfaceContent(surfaceId)`.\n\t * @param {string} surfaceId The surface id.\n\t * @param {Object|string} content The content to be rendered.\n\t */\n\trenderSurfaceContent(surfaceId, content) {\n\t\tif (core.isDefAndNotNull(content)) {\n\t\t\tvar surface = this.getSurface(surfaceId);\n\t\t\tvar previousCacheState = surface.cacheState;\n\t\t\tthis.cacheSurfaceContent(surfaceId, content);\n\n\t\t\tvar cacheState = surface.cacheState;\n\t\t\tsurface.cacheMiss = cacheState === Component.Cache.NOT_INITIALIZED ||\n\t\t\t\tcacheState === Component.Cache.NOT_CACHEABLE ||\n\t\t\t\tcacheState !== previousCacheState;\n\t\t\tif (surface.cacheMiss) {\n\t\t\t\tthis.replaceSurfaceContent_(surfaceId, content);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders all surfaces contents ignoring the cache.\n\t * @param {Object.<string, Object=>} surfaces Object map where the key is\n\t *     the surface id and value the optional surface configuration.\n\t * @protected\n\t */\n\trenderSurfacesContent_(surfaces) {\n\t\tfor (var surfaceId in surfaces) {\n\t\t\tthis.renderSurfaceContent(surfaceId, this.getSurfaceContent_(surfaceId));\n\t\t}\n\t}\n\n\t/**\n\t * Replaces the content of a surface with a new one.\n\t * @param {string} surfaceId The surface id.\n\t * @param {Element|string} content The content to be rendered.\n\t * @protected\n\t */\n\treplaceSurfaceContent_(surfaceId, content) {\n\t\tvar el = this.getSurfaceElement(surfaceId);\n\t\tdom.removeChildren(el);\n\t\tdom.append(el, content);\n\t}\n\n\t/**\n\t * Setter logic for element attribute.\n\t * @param {string|Element} val\n\t * @return {Element}\n\t * @protected\n\t */\n\tsetterElementFn_(val) {\n\t\tvar element = dom.toElement(val);\n\t\tif (!element) {\n\t\t\telement = this.valueElementFn_();\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Attribute synchronization logic for elementClasses attribute.\n\t * @param {string} newVal\n\t * @param {string} prevVal\n\t */\n\tsyncElementClasses(newVal, prevVal) {\n\t\tvar classesToAdd = this.constructor.ELEMENT_CLASSES_MERGED;\n\t\tif (newVal) {\n\t\t\tclassesToAdd = classesToAdd + ' ' + newVal;\n\t\t}\n\t\tif (prevVal) {\n\t\t\tdom.removeClasses(this.element, prevVal.split(' '));\n\t\t}\n\t\tdom.addClasses(this.element, classesToAdd.split(' '));\n\t}\n\n\t/**\n\t * Validator logic for element attribute.\n\t * @param {string|Element} val\n\t * @return {boolean} True if val is a valid element.\n\t * @protected\n\t */\n\tvalidatorElementFn_(val) {\n\t\treturn core.isElement(val) || core.isString(val);\n\t}\n\n\t/**\n\t * Validator logic for elementClasses attribute.\n\t * @param {string} val\n\t * @return {Boolean} True if val is a valid element classes.\n\t * @protected\n\t */\n\tvalidatorElementClassesFn_(val) {\n\t\treturn core.isString(val);\n\t}\n\n\t/**\n\t * Validator logic for id attribute.\n\t * @param {string} val\n\t * @return {Boolean} True if val is a valid id.\n\t * @protected\n\t */\n\tvalidatorIdFn_(val) {\n\t\treturn core.isString(val);\n\t}\n\n\t/**\n\t * Provides the default value for element attribute.\n\t * @return {Element} The element.\n\t * @protected\n\t */\n\tvalueElementFn_() {\n\t\treturn document.createElement(this.constructor.ELEMENT_TAG_NAME_MERGED);\n\t}\n\n\t/**\n\t * Provides the default value for id attribute.\n\t * @return {string} The id.\n\t * @protected\n\t */\n\tvalueIdFn_() {\n\t\treturn this.element.id || this.makeId_();\n\t}\n}\n\n/**\n * Component attributes definition.\n * @type {Object}\n * @static\n */\nComponent.ATTRS = {\n\t/**\n\t * Component element bounding box.\n\t * @type {Element}\n\t * @writeOnce\n\t */\n\telement: {\n\t\tsetter: 'setterElementFn_',\n\t\tvalidator: 'validatorElementFn_',\n\t\tvalueFn: 'valueElementFn_',\n\t\twriteOnce: true\n\t},\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @type {Array.<string>}\n\t */\n\telementClasses: {\n\t\tvalidator: 'validatorElementClassesFn_'\n\t},\n\n\t/**\n\t * Component element id. If not specified will be generated.\n\t * @type {string}\n\t * @writeOnce\n\t */\n\tid: {\n\t\tvalidator: 'validatorIdFn_',\n\t\tvalueFn: 'valueIdFn_',\n\t\twriteOnce: true\n\t}\n};\n\n/**\n * CSS classes to be applied to the element.\n * @type {string}\n * @protected\n * @static\n */\nComponent.ELEMENT_CLASSES = 'component';\n\n/**\n * Element tag name is a string that specifies the type of element to be\n * created. The nodeName of the created element is initialized with the\n * value of tag name.\n * @type {string}\n * @default div\n * @protected\n * @static\n */\nComponent.ELEMENT_TAG_NAME = 'div';\n\n/**\n * Surface tag name is a string that specifies the type of element to be\n * created for the surfaces. The nodeName of the created element is\n * initialized with the value of tag name.\n * @type {string}\n * @default div\n * @protected\n * @static\n */\nComponent.SURFACE_TAG_NAME = 'div';\n\n/**\n * Cache states for the component.\n * @enum {string}\n */\nComponent.Cache = {\n\t/**\n\t * Cache is not allowed for this state.\n\t */\n\tNOT_CACHEABLE: -1,\n\n\t/**\n\t * Cache not initialized.\n\t */\n\tNOT_INITIALIZED: -2\n};\n\n/**\n * Errors thrown by the component.\n * @enum {string}\n */\nComponent.Error = {\n\t/**\n\t * Error when the component is already rendered and another render attempt\n\t * is made.\n\t */\n\tALREADY_RENDERED: 'Component already rendered'\n};\n\n/**\n * A list with attribute names that will automatically be rejected as invalid.\n * @type {!Array<string>}\n */\nComponent.INVALID_ATTRS = ['componentName', 'components', 'elementContent', 'ref'];\n\nexport default Component;\n","'use strict';\n\n/**\n * The component registry is used to register components, so they can\n * be accessible by name.\n * @type {Object}\n */\nclass ComponentRegistry {\n\t/**\n\t * Gets the constructor function for the given component name, or\n\t * undefined if it hasn't been registered yet.\n\t * @param {string} name The component's name.\n\t * @return {?function}\n\t * @static\n\t */\n\tstatic getConstructor(name) {\n\t\tvar constructorFn = ComponentRegistry.components_[name];\n\t\tif (!constructorFn) {\n\t\t\tconsole.error(\n\t\t\t\t'There\\'s no constructor registered for the component ' +\n\t\t\t\t'named ' + name + '. Components need to be registered via ' +\n\t\t\t\t'ComponentRegistry.register.'\n\t\t\t);\n\t\t}\n\t\treturn constructorFn;\n\t}\n\n\t/**\n\t * Registers a component.\n\t * @param {string} name The component's name.\n\t * @param {string} constructorFn The component's constructor function.\n\t * @static\n\t */\n\tstatic register(name, constructorFn) {\n\t\tComponentRegistry.components_[name] = constructorFn;\n\t\tconstructorFn.NAME = name;\n\t\tconstructorFn.TEMPLATES = ComponentRegistry.Templates[name];\n\t}\n}\n\n/**\n * Holds all registered components, indexed by their names.\n * @type {!Object<string, function()>}\n * @protected\n * @static\n */\nComponentRegistry.components_ = {};\n\n/**\n * Holds all registered component templates, indexed by component names.\n * Soy files automatically add their templates to this object when imported.\n * @type {!Object<string, !Object<string, !function()>>}\n * @static\n */\nComponentRegistry.Templates = {};\n\nexport default ComponentRegistry;\n","'use strict';\n\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nimport Disposable from \"src/public/vendor/metaljs/src/disposable/Disposable\";\n\nclass ComponentCollector extends Disposable {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Creates the appropriate component from the given config data if it doesn't\n\t * exist yet, or updates an existing instance with the new attributes.\n\t * @param {string} componentName The name of the component to be extracted.\n\t * @param {!Object} data The component's config data.\n\t * @return {!Component} The extracted component instance.\n\t */\n\tcreateOrUpdateComponent(componentName, data) {\n\t\tvar component = ComponentCollector.components[data.id];\n\t\tif (component) {\n\t\t\tcomponent.setAttrs(data);\n\t\t} else {\n\t\t\tvar ConstructorFn = ComponentRegistry.getConstructor(componentName);\n\t\t\tdata.element = '#' + data.id;\n\t\t\tcomponent = new ConstructorFn(data);\n\t\t\tComponentCollector.components[data.id] = component;\n\t\t}\n\t\treturn component;\n\t}\n\n\t/**\n\t * Handles the given string of rendered templates, converting them to\n\t * component instances.\n\t * @param {string} renderedComponents Rendered components.\n\t * @return {!Array<!Component>}\n\t */\n\textractComponentsFromString(renderedComponents) {\n\t\tvar components = [];\n\t\tvar regex = /\\%\\%\\%\\%~comp-([^~]+)~\\%\\%\\%\\%/g;\n\t\tvar match = regex.exec(renderedComponents);\n\t\twhile(match) {\n\t\t\tif (match && match.length === 2) {\n\t\t\t\tvar id = match[1];\n\t\t\t\tvar component = ComponentCollector.components[id];\n\t\t\t\tif (component) {\n\t\t\t\t\tcomponents.push(component);\n\t\t\t\t}\n\t\t\t\tmatch = regex.exec(renderedComponents);\n\t\t\t}\n\t\t}\n\t\treturn components;\n\t}\n}\n\n/**\n * Holds all collected components, indexed by their id.\n * @type {!Object<string, !Component>}\n */\nComponentCollector.components = {};\n\nexport default ComponentCollector;\n","'use strict';\n\nimport Disposable from \"src/public/vendor/metaljs/src/disposable/Disposable\";\n\n/**\n * Collects inline events from a passed element, detaching previously\n * attached events that are not being used anymore.\n * @param {Component} component\n * @constructor\n * @extends {Disposable}\n */\nclass EventsCollector extends Disposable {\n\tconstructor(component) {\n\t\tsuper();\n\n\t\tif (!component) {\n\t\t\tthrow new Error('The component instance is mandatory');\n\t\t}\n\n\t\t/**\n\t\t * Holds the component intance.\n\t\t * @type {!Component}\n\t\t * @protected\n\t\t */\n\t\tthis.component_ = component;\n\n\t\t/**\n\t\t * Holds the attached delegate event handles, indexed by the css selector.\n\t\t * @type {!Object<string, !DomEventHandle>}\n\t\t * @protected\n\t\t */\n\t\tthis.eventHandles_ = {};\n\n\t\t/**\n\t\t * Holds flags indicating which selectors a group has listeners for.\n\t\t * @type {!Object<string, !Object<string, boolean>>}\n\t\t * @protected\n\t\t */\n\t\tthis.groupHasListener_ = {};\n\t}\n\n\t/**\n\t * Attaches the listener described by the given params, unless it has already\n\t * been attached.\n\t * @param {string} eventType\n\t * @param {string} fnName\n\t * @param {boolean} permanent\n\t * @protected\n\t */\n\tattachListener_(eventType, fnName, groupName) {\n\t\tvar selector = '[data-on' + eventType + '=\"' + fnName + '\"]';\n\n\t\tthis.groupHasListener_[groupName][selector] = true;\n\n\t\tif (!this.eventHandles_[selector]) {\n\t\t\tvar fn = this.component_[fnName].bind(this.component_);\n\t\t\tthis.eventHandles_[selector] = this.component_.delegate(eventType, selector, fn);\n\t\t}\n\t}\n\n\t/**\n\t * Attaches all listeners declared as attributes on the given element and\n\t * its children.\n\t * @param {string} content\n\t * @param {boolean} groupName\n\t */\n\tattachListeners(content, groupName) {\n\t\tthis.groupHasListener_[groupName] = {};\n\t\tthis.attachListenersFromHtml_(content, groupName);\n\t}\n\n\t/**\n\t * Attaches listeners found in the given html content.\n\t * @param {string} content\n\t * @param {boolean} groupName\n\t * @protected\n\t */\n\tattachListenersFromHtml_(content, groupName) {\n\t\tif (content.indexOf('data-on') === -1) {\n\t\t\treturn;\n\t\t}\n\t\tvar regex = /data-on([a-z]+)=['|\"](\\w+)['|\"]/g;\n\t\tvar match = regex.exec(content);\n\t\twhile(match) {\n\t\t\tthis.attachListener_(match[1], match[2], groupName);\n\t\t\tmatch = regex.exec(content);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all previously attached event listeners to the component.\n\t */\n\tdetachAllListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tif (this.eventHandles_[selector]) {\n\t\t\t\tthis.eventHandles_[selector].removeListener();\n\t\t\t}\n\t\t}\n\t\tthis.eventHandles_ = {};\n\t\tthis.listenerCounts_ = {};\n\t}\n\n\t/**\n\t * Detaches all existing listeners that are not being used anymore.\n\t * @protected\n\t */\n\tdetachUnusedListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tvar unused = true;\n\t\t\tfor (var groupName in this.groupHasListener_) {\n\t\t\t\tif (this.groupHasListener_[groupName][selector]) {\n\t\t\t\t\tunused = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (unused) {\n\t\t\t\tthis.eventHandles_[selector].removeListener();\n\t\t\t\tthis.eventHandles_[selector] = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.detachAllListeners();\n\t\tthis.component_ = null;\n\t}\n}\n\nexport default EventsCollector;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from SoyComponent.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.SoyComponent.\n * @hassoydeltemplate {Component}\n * @hassoydeltemplate {ComponentChildren}\n * @hassoydeltemplate {Surface}\n * @hassoydelcall {ComponentTemplate}\n */\n\nif (typeof Templates.SoyComponent == 'undefined') { Templates.SoyComponent = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.component = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), opt_data.componentName, true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.component.soyTemplateName = 'Templates.SoyComponent.component';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.surface = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(opt_data.content));\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.surface.soyTemplateName = 'Templates.SoyComponent.surface';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.__deltemplate_s6_0084916f = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(Templates.SoyComponent.component(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.__deltemplate_s6_0084916f.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s6_0084916f';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Component'), '', 0, Templates.SoyComponent.__deltemplate_s6_0084916f);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.__deltemplate_s8_26860e4b = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-children-placeholder\" data-component-children=\"\">' + ((opt_data.children) ? soy.$$escapeHtml(opt_data.children) : '') + '</div>');\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.__deltemplate_s8_26860e4b.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s8_26860e4b';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentChildren'), '', 0, Templates.SoyComponent.__deltemplate_s8_26860e4b);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.__deltemplate_s16_ec6fc81f = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(Templates.SoyComponent.surface(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.__deltemplate_s16_ec6fc81f.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s16_ec6fc81f';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Surface'), '', 0, Templates.SoyComponent.__deltemplate_s16_ec6fc81f);\n\n/* jshint ignore:end */\n","'use strict';\n\nimport array from \"src/public/vendor/metaljs/src/array/array\";\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport object from \"src/public/vendor/metaljs/src/object/object\";\nimport Component from \"src/public/vendor/metaljs/src/component/Component\";\nimport ComponentCollector from \"src/public/vendor/metaljs/src/component/ComponentCollector\";\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nimport EventsCollector from \"src/public/vendor/metaljs/src/component/EventsCollector\";\n\nimport \"src/public/vendor/metaljs/src/soy/SoyComponent.soy.js\";\n\n/**\n * We need to listen to calls to the SoyComponent template so we can use them to\n * properly instantiate and update child components defined through soy.\n * TODO: Switch to using proper AOP.\n */\nvar originalTemplate = ComponentRegistry.Templates.SoyComponent.component;\nvar originalSurfaceTemplate = ComponentRegistry.Templates.SoyComponent.surface;\n\n/**\n * Special Component class that handles a better integration between soy templates\n * and the components. It allows for automatic rendering of surfaces that have soy\n * templates defined with their names, skipping the call to `getSurfaceContent`.\n * @param {Object} opt_config An object with the initial values for this component's\n *   attributes.\n * @constructor\n * @extends {Component}\n */\nclass SoyComponent extends Component {\n\tconstructor(opt_config) {\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'TEMPLATES', this.mergeTemplates_);\n\n\t\t/**\n\t\t * Gets all nested components.\n\t\t * @type {!Array<!Component>}\n\t\t */\n\t\tthis.components = {};\n\n\t\t/**\n\t\t * Helper responsible for extracting components from strings and config data.\n\t\t * @type {!ComponentCollector}\n\t\t * @protected\n\t\t */\n\t\tthis.componentsCollector_ = new ComponentCollector();\n\n\t\t/**\n\t\t * Holds events that were listened through the element.\n\t\t * @type {!EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.eventsCollector_ = new EventsCollector(this);\n\n\t\t/**\n\t\t * The component that should receive extracted component references when a\n\t\t * soy template is called. Starts with this component instance, but can change\n\t\t * as nested templates are called.\n\t\t * @type {!Component}\n\t\t * @protected\n\t\t */\n\t\tthis.componentInProcess_ = this;\n\n\t\t/**\n\t\t * Holds the html strings of each rendered nested component or surface,\n\t\t * indexed by their element ids.\n\t\t * @type {!Object<string, !{content: string, isSurface: ?boolean}>}\n\t\t * @protected\n\t\t */\n\t\tthis.renderedTemplates_ = {};\n\n\t\t/**\n\t\t * Holds the ids of the components that were most recently added via\n\t\t * `addComponentRef`. This object is cleared after the `attach` and\n\t\t * `renderSurfacesContent` methods are run.\n\t\t * @type {!Array<string>}\n\t\t * @protected\n\t\t */\n\t\tthis.recentlyAddedComponents_ = [];\n\n\t\tsuper(opt_config);\n\n\t\tthis.addSurfacesFromTemplates_();\n\t}\n\n\t/**\n\t * Adds a component reference to the `components` variable.\n\t * @param {string} ref Key that should be used to reference the give component.\n\t * @param {!Component} component Component instance to be referenced.\n\t */\n\taddComponentRef(ref, component) {\n\t\tthis.components[ref] = component;\n\t\tthis.recentlyAddedComponents_.push(ref);\n\t}\n\n\t/**\n\t * Adds surfaces for each registered template that is not named `element`.\n\t * @protected\n\t */\n\taddSurfacesFromTemplates_() {\n\t\tvar templates = this.constructor.TEMPLATES_MERGED;\n\t\tvar templateNames = Object.keys(templates);\n\t\tfor (var i = 0; i < templateNames.length; i++) {\n\t\t\tvar templateName = templateNames[i];\n\t\t\tif (templateName !== 'content' &&\n\t\t\t\ttemplateName.substr(0, 13) !== '__deltemplate') {\n\n\t\t\t\tvar surface = this.getSurface(templateName);\n\t\t\t\tif (!surface) {\n\t\t\t\t\tthis.addSurface(templateName, {\n\t\t\t\t\t\trenderAttrs: templates[templateName].params\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @override\n\t */\n\tattach(opt_parentElement, opt_siblingElement) {\n\t\tif (this.decorating_) {\n\t\t\t// We need to call the element soy template function when the component\n\t\t\t// is being decorated, even though we won't use its results. This call is\n\t\t\t// only needed in order for us to intercept the call data for nested components\n\t\t\t// that are outside surfaces.\n\t\t\tvar templateContent = this.renderElementTemplate({skipSurfaceContents: true});\n\t\t\tthis.renderedTemplates_[this.id] = {content: templateContent};\n\t\t}\n\n\t\tsuper.attach(opt_parentElement, opt_siblingElement);\n\n\t\tif (!this.wasRendered) {\n\t\t\tthis.attachNestedComponents_();\n\t\t\tthis.finishProcessingRenderedTemplates_();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Attaches the given component at the position of the given placeholder.\n\t * @param {!Component} component\n\t * @param {!Element} placeholder\n\t * @protected\n\t */\n\tattachNestedComponent_(component, placeholder) {\n\t\tvar replacedPlaceholder = false;\n\t\tif (placeholder !== component.element) {\n\t\t\t// If the component's element is not the placeholder, we need to replace\n\t\t\t// the placeholder with the real element.\n\t\t\tplaceholder.parentNode.insertBefore(component.element, placeholder);\n\t\t\tplaceholder.parentNode.removeChild(placeholder);\n\t\t\treplacedPlaceholder = true;\n\t\t}\n\n\t\tif (!component.wasRendered) {\n\t\t\t// If this component hasn't been rendered yet, we should do it now.\n\t\t\tif (replacedPlaceholder) {\n\t\t\t\t// If we had to replace the placeholder with the component's element,\n\t\t\t\t// we'll need to copy the html over so we don't have to run soy again\n\t\t\t\t// to render it.\n\t\t\t\tdom.append(component.element, placeholder.innerHTML);\n\t\t\t}\n\t\t\tcomponent.decorateAsSubComponent();\n\t\t}\n\t}\n\n\t/**\n\t * Attaches recently added components to the dom.\n\t * @protected\n\t */\n\tattachNestedComponents_() {\n\t\tvar element = this.element;\n\t\tvar componentIds = this.recentlyAddedComponents_;\n\t\tfor (var i = componentIds.length - 1; i >= 0; i--) {\n\t\t\tvar id = componentIds[i];\n\t\t\tvar placeholder = document.getElementById(id) || element.querySelector('#' + id);\n\t\t\tif (placeholder) {\n\t\t\t\tthis.attachNestedComponent_(this.components[id], placeholder);\n\t\t\t}\n\t\t}\n\t\tthis.recentlyAddedComponents_ = [];\n\t}\n\n\t/**\n\t * Overrides Attribute's `buildAttrInfo_` method to handle the `isComponentsArray`\n\t * special attribute config.\n\t * @param {string} name The name of the attribute.\n\t * @param {Object} config The config object of the attribute.\n\t * @param {*} initialValue The initial value of the attribute.\n\t * @protected\n\t * @override\n\t */\n\tbuildAttrInfo_(name, config, initialValue) {\n\t\tif (config.isComponentsArray && !config.setter) {\n\t\t\tconfig.setter = 'extractComponents_';\n\t\t}\n\t\tsuper.buildAttrInfo_(name, config, initialValue);\n\t}\n\n\t/**\n\t * Builds the config data for a component from the data that was passed to its\n\t * soy template function.\n\t * @param {!Object} templateData\n\t * @return {!Object} The component's config data.\n\t * @protected\n\t */\n\tbuildComponentConfigData_(templateData) {\n\t\tvar config = {};\n\t\tfor (var key in templateData) {\n\t\t\tconfig[key] = templateData[key];\n\t\t}\n\t\treturn config;\n\t}\n\n\t/**\n\t * Builds the data object that should be passed to the real soy template function\n\t * for a component.\n\t * @param {!Component} component The component that was extracted from the original\n\t *   template data.\n\t * @param {!Object} data The original data passed to the template function.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tbuildTemplateData_(component, data) {\n\t\tvar newData = {};\n\t\tvar attrNames = component.getAttrNames();\n\t\tfor (var i = 0; i < attrNames.length; i++) {\n\t\t\tvar name = attrNames[i];\n\t\t\tif (name !== 'element' && !component.getAttrConfig(name).isComponentsArray) {\n\t\t\t\tnewData[name] = component[name];\n\t\t\t}\n\t\t}\n\t\tnewData.componentName = data.componentName;\n\t\tnewData.children = data.children;\n\t\treturn newData;\n\t}\n\n\t/**\n\t * Overrides the original `cacheSurfaceContent_` function from `Component`, so it\n\t * will cache a version of the surface content without nested component contents\n\t * (that is, before replacing their placeholders with the contents).\n\t * @param {string} surfaceId\n\t * @param {string} content\n\t * @override\n\t */\n\tcacheSurfaceContent(surfaceId, content) {\n\t\tif (this.decorating_) {\n\t\t\treturn super.cacheSurfaceContent(surfaceId, content);\n\t\t}\n\n\t\tvar elementId = this.makeSurfaceId_(surfaceId);\n\t\tif (this.renderedTemplates_[elementId]) {\n\t\t\tcontent = this.renderedTemplates_[elementId].content;\n\t\t}\n\t\tsuper.cacheSurfaceContent(surfaceId, content);\n\t}\n\n\t/**\n\t * Decorates this component as a subcomponent, meaning that no rendering is\n\t * needed since it was already rendered by the parent component.\n\t */\n\tdecorateAsSubComponent() {\n\t\tthis.decoratingAsSubcomponent_ = true;\n\n\t\tthis.syncAttrs_();\n\t\tthis.attach();\n\n\t\tthis.wasRendered = true;\n\t\tthis.decoratingAsSubcomponent_ = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @override\n\t */\n\tdetach() {\n\t\tthis.eventsCollector_.detachAllListeners();\n\t\tsuper.detach();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Extracts components from the given value, if it's a rendered soy template.\n\t * Otherwise, returns the original value.\n\t * @param {!Array|string} val\n\t * @return {!Array}\n\t * @protected\n\t */\n\textractComponents_(val) {\n\t\tif (this.hasSubcomponents_(val)) {\n\t\t\treturn this.componentsCollector_.extractComponentsFromString(val);\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t * Finishes processing the templates rendered by this component. This processing\n\t * includes attaching listeners and caching surface contents.\n\t * @protected\n\t */\n\tfinishProcessingRenderedTemplates_() {\n\t\tComponentCollector.components[this.id] = this;\n\t\tfor (var id in this.renderedTemplates_) {\n\t\t\tvar componentId = id;\n\t\t\tif (this.renderedTemplates_[id].isSurface) {\n\t\t\t\tcomponentId = Component.extractComponentId(id);\n\t\t\t}\n\t\t\tvar componentInProcess = ComponentCollector.components[componentId];\n\t\t\tcomponentInProcess.getEventsCollector().attachListeners(this.renderedTemplates_[id].content, id);\n\n\t\t\tif (this.renderedTemplates_[id].isSurface) {\n\t\t\t\tvar surfaceId = id.substr(componentId.length + 1);\n\t\t\t\tcomponentInProcess.cacheSurfaceContent(surfaceId, this.renderedTemplates_[id].content);\n\t\t\t}\n\t\t}\n\t\tthis.renderedTemplates_ = {};\n\t}\n\n\t/**\n\t * Gets this component's `EventsCollector` instance.\n\t * @return {!EventsCollector}\n\t */\n\tgetEventsCollector() {\n\t\treturn this.eventsCollector_;\n\t}\n\n\t/**\n\t * Overrides the default behavior so that this can automatically render\n\t * the appropriate soy template when one exists.\n\t * @param {string} surfaceId The surface id.\n\t * @return {Object|string} The content to be rendered.\n\t * @protected\n\t * @override\n\t */\n\tgetSurfaceContent_(surfaceId) {\n\t\tvar surfaceTemplate = this.constructor.TEMPLATES_MERGED[surfaceId];\n\t\tif (core.isFunction(surfaceTemplate)) {\n\t\t\tvar content = this.renderTemplate_(surfaceTemplate);\n\t\t\tthis.renderedTemplates_[this.makeSurfaceId_(surfaceId)] = {\n\t\t\t\tcontent: content,\n\t\t\t\tisSurface: true\n\t\t\t};\n\t\t\treturn this.replaceComponentStringPlaceholders_(content);\n\t\t}\n\t\treturn super.getSurfaceContent_(surfaceId);\n\t}\n\n\t/**\n\t * Handles a call to the SoyComponent surface template.\n\t * @param {!Object} data The data the template was called with.\n\t * @param {(null|undefined)=} ignored Second argument for soy templates.\n\t * @param {Object.<string, *>=} ijData Optional injected data.\n\t * @return {string} The original return value of the template.\n\t * @protected\n\t */\n\thandleSurfaceCall_(data, ignored, ijData) {\n\t\tvar rendered = originalSurfaceTemplate(data, ignored, ijData);\n\t\tthis.renderedTemplates_[data.id] = {\n\t\t\tcontent: rendered.content,\n\t\t\tisSurface: true\n\t\t};\n\t\treturn '%%%%~surface-' + data.id + '~%%%%';\n\t}\n\n\t/**\n\t * Handles a call to the SoyComponent component template.\n\t * @param {!Object} data The data the template was called with.\n\t * @param {(null|undefined)=} ignored Second argument for soy templates.\n\t * @param {Object.<string, *>=} ijData Optional injected data.\n\t * @return {string} The original return value of the template.\n\t * @protected\n\t */\n\thandleTemplateCall_(data, ignored, ijData) {\n\t\tvar config = this.buildComponentConfigData_(data);\n\t\tvar component = this.componentsCollector_.createOrUpdateComponent(data.componentName, config);\n\t\tthis.componentInProcess_.addComponentRef(data.id, component);\n\n\t\tvar prevComponentInProcess = this.componentInProcess_;\n\t\tthis.componentInProcess_ = component;\n\t\tvar newData = this.buildTemplateData_(component, data);\n\t\tvar renderedComponent = originalTemplate(newData, ignored, ijData);\n\t\tthis.renderedTemplates_[data.id] = renderedComponent;\n\t\tthis.componentInProcess_ = prevComponentInProcess;\n\n\t\treturn '%%%%~comp-' + data.id + '~%%%%';\n\t}\n\n\t/**\n\t * Checks if the given value has subcomponents to be extracted.\n\t * @param {*} value\n\t * @return {boolean}\n\t * @protected\n\t */\n\thasSubcomponents_(value) {\n\t\treturn value instanceof soydata.SanitizedHtml;\n\t}\n\n\t/**\n\t * Merges an array of values for the `TEMPLATES` property into a single object.\n\t * @param {!Array} values The values to be merged.\n\t * @return {!Object} The merged value.\n\t * @protected\n\t */\n\tmergeTemplates_(values) {\n\t\treturn object.mixin.apply(null, [{}].concat(values.reverse()));\n\t}\n\n\t/**\n\t * Renders this component's child components, if their placeholder is found.\n\t * @param {!Array<!Component>} children\n\t * @protected\n\t * TODO(edu): Re-think this part.\n\t */\n\trenderChildrenComponents_(children) {\n\t\tvar id = this.makeSurfaceId_('children-placeholder');\n\t\tvar placeholder = document.getElementById(id) || this.element.querySelector('#' + id);\n\t\tif (placeholder && children.length) {\n\t\t\tdom.removeChildren(placeholder);\n\t\t\tchildren.forEach(function(child) {\n\t\t\t\tif (child.wasRendered) {\n\t\t\t\t\tdom.append(placeholder, child.element);\n\t\t\t\t} else {\n\t\t\t\t\tchild.render(placeholder);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Renders the main element's template.\n\t * @param {Object=} opt_injectedData\n\t * @return {?string} The template's result content, or undefined if the\n\t *   template doesn't exist.\n\t */\n\trenderElementTemplate(opt_injectedData) {\n\t\tvar elementTemplate = this.constructor.TEMPLATES_MERGED.content;\n\t\tif (core.isFunction(elementTemplate)) {\n\t\t\treturn this.renderTemplate_(elementTemplate, opt_injectedData);\n\t\t}\n\t}\n\n\t/**\n\t * Overrides the behavior of this method to automatically render the element\n\t * template if it's defined and to automatically attach listeners to all\n\t * specified events by the user in the template. Also handles any calls to\n\t * component templates.\n\t * @override\n\t */\n\trenderInternal() {\n\t\tvar templateContent = this.renderElementTemplate();\n\t\tif (templateContent) {\n\t\t\tthis.renderedTemplates_[this.id] = {content: templateContent};\n\t\t\ttemplateContent = this.replaceComponentStringPlaceholders_(templateContent);\n\t\t\tdom.append(this.element, templateContent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trenderSurfacesContent_(surfaces) {\n\t\t// If this component is still being rendered we shouldn't render\n\t\t// surfaces content or attach inline listeners, since these will\n\t\t// already be done for the entire content.\n\t\tif (this.inDocument || this.decorating_) {\n\t\t\tsuper.renderSurfacesContent_(surfaces);\n\t\t\tthis.renderedTemplates_ = {};\n\t\t}\n\t\tif (this.inDocument) {\n\t\t\tthis.attachNestedComponents_();\n\t\t\tthis.eventsCollector_.detachUnusedListeners();\n\t\t}\n\t}\n\n\t/**\n\t * Renders the specified template.\n\t * @param {!function()} templateFn\n\t * @param {Object=} opt_injectedData\n\t * @return {string} The template's result content.\n\t */\n\trenderTemplate_(templateFn, opt_injectedData) {\n\t\tComponentRegistry.Templates.SoyComponent.component = this.handleTemplateCall_.bind(this);\n\t\tComponentRegistry.Templates.SoyComponent.surface = this.handleSurfaceCall_.bind(this);\n\t\tvar content = templateFn(this, null, opt_injectedData || {}).content;\n\t\tComponentRegistry.Templates.SoyComponent.component = originalTemplate;\n\t\tComponentRegistry.Templates.SoyComponent.surface = originalSurfaceTemplate;\n\t\treturn content;\n\t}\n\n\t/**\n\t * Replaces the matched placeholder with the appropriate component's content, if\n\t * it exists. Otherwise, keep the original content as it is.\n\t * @param {string} match String placeholder.\n\t * @param {string} type Either `comp` or `surface`.\n\t * @param {string} id The id of the component that should replace the placeholder.\n\t * @return {string} The content that should replace the placeholder.\n\t * @protected\n\t */\n\treplaceComponentStringPlaceholder_(match, type, id) {\n\t\treturn this.renderedTemplates_[id] ? this.renderedTemplates_[id].content : match[0];\n\t}\n\n\t/**\n\t * Replaces all string placeholders added to the given content by `handleTemplateCall_`\n\t * with the real component content that should have been inserted there instead.\n\t * @param {string} content\n\t * @return {string} The content string with the replaced placeholders.\n\t * @protected\n\t */\n\treplaceComponentStringPlaceholders_(content) {\n\t\tvar regex = /\\%\\%\\%\\%~(comp|surface)-([^~]+)~\\%\\%\\%\\%/g;\n\t\tvar previousContent;\n\t\tdo {\n\t\t\tpreviousContent = content;\n\t\t\tcontent = content.replace(regex, this.replaceComponentStringPlaceholder_.bind(this));\n\t\t} while (previousContent !== content);\n\t\treturn content;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @override\n\t */\n\treplaceSurfaceContent_(surfaceId, content) {\n\t\tvar id = this.makeSurfaceId_(surfaceId);\n\t\tthis.eventsCollector_.attachListeners(this.renderedTemplates_[id].content, id);\n\t\tsuper.replaceSurfaceContent_(surfaceId, content);\n\t}\n\n\t/**\n\t * Syncs the component according to the new value of the `children` attribute.\n\t */\n\tsyncChildren(newVal, prevVal) {\n\t\tif (!this.decoratingAsSubcomponent_ && !array.equal(newVal, prevVal || [])) {\n\t\t\tthis.renderChildrenComponents_(newVal);\n\t\t}\n\t}\n\n\t/**\n\t * Validator logic for `children` element.\n\t * @param {*} val\n\t * @return {boolean}\n\t * @protected\n\t */\n\tvalidatorChildrenFn_(val) {\n\t\treturn this.hasSubcomponents_(val) || Array.isArray(val);\n\t}\n\n\t/**\n\t * Provides the default value for element attribute.\n\t * @return {Element} The element.\n\t * @protected\n\t */\n\tvalueElementFn_() {\n\t\tvar templateFn = soy.$$getDelegateFn(this.constructor.NAME, 'element', true);\n\t\tvar attrs = this.getAttrs();\n\t\tattrs.elementContent = '';\n\t\tattrs.id = attrs.id || this.makeId_();\n\t\tvar rendered = templateFn(attrs, null, {}).content;\n\t\tif (!rendered) {\n\t\t\treturn super.valueElementFn_();\n\t\t}\n\n\t\tvar frag = dom.buildFragment(rendered);\n\t\tvar element = frag.childNodes[0];\n\n\t\t// Remove element from fragment, so it won't have a parent. Otherwise,\n\t\t// the `attach` method will think that the element has already been\n\t\t// attached.\n\t\tfrag.removeChild(element);\n\n\t\treturn element;\n\t}\n\n\t/**\n\t * Overrides the default value function for the `id` attribute, so it will\n\t * handle the case where `element` is in the middle of its creation, which\n\t * means the id should be generated.\n\t * @return {string} The id.\n\t * @protected\n\t * @override\n\t */\n\tvalueIdFn_() {\n\t\tif (!this.element) {\n\t\t\treturn this.makeId_();\n\t\t}\n\t\treturn super.valueIdFn_();\n\t}\n}\n\n/**\n * SoyComponent attributes definition.\n * @type {Object}\n * @static\n */\nSoyComponent.ATTRS = {\n\t/**\n\t * Child components passed to this component.\n\t * @type {Array<Component>}\n\t */\n\tchildren: {\n\t\tisComponentsArray: true,\n\t\tvalidator: 'validatorChildrenFn_',\n\t\tvalueFn: function() {\n\t\t\treturn [];\n\t\t}\n\t}\n};\n\n/**\n * The soy templates for this component. Templates that have the same\n * name of a registered surface will be used for automatically rendering\n * it.\n * @type {Object<string, !function(Object):Object>}\n * @protected\n * @static\n */\nSoyComponent.TEMPLATES = {};\n\nexport default SoyComponent;\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport SoyComponent from \"src/public/vendor/metaljs/src/soy/SoyComponent\";\n\nclass Component extends SoyComponent {\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  syncVisible(visible) {\n    this.element.style.display = visible ? null : 'none';\n  }\n}\n\nComponent.ATTRS = {\n  visible: {\n    validator: core.isBoolean,\n    value: true\n  }\n};\n\nexport default Component;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from Modal.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.Modal.\n * @hassoydeltemplate {ComponentElement}\n * @hassoydeltemplate {ComponentTemplate}\n * @hassoydeltemplate {Modal}\n * @hassoydeltemplate {Modal.body}\n * @hassoydeltemplate {Modal.footer}\n * @hassoydeltemplate {Modal.header}\n * @hassoydelcall {Component}\n * @hassoydelcall {ComponentElement}\n * @hassoydelcall {Modal}\n * @hassoydelcall {Modal.body}\n * @hassoydelcall {Modal.footer}\n * @hassoydelcall {Modal.header}\n * @hassoydelcall {Surface}\n */\n\nif (typeof Templates.Modal == 'undefined') { Templates.Modal = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.content = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.content.soyTemplateName = 'Templates.Modal.content';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.body = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.body) ? soy.$$escapeHtml(opt_data.body) : '');\n};\nif (goog.DEBUG) {\n  Templates.Modal.body.soyTemplateName = 'Templates.Modal.body';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.footer = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.footer) ? soy.$$escapeHtml(opt_data.footer) : '');\n};\nif (goog.DEBUG) {\n  Templates.Modal.footer.soyTemplateName = 'Templates.Modal.footer';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.header = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.header) ? '<a class=\"modal-close icon-12-close-long\" data-onclick=\"close\"></a>' + soy.$$escapeHtml(opt_data.header) : '');\n};\nif (goog.DEBUG) {\n  Templates.Modal.header.soyTemplateName = 'Templates.Modal.header';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s19_65c2d4d4 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<section id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-body\">' + soy.$$escapeHtml(opt_data.elementContent) + '</section>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s19_65c2d4d4.soyTemplateName = 'Templates.Modal.__deltemplate_s19_65c2d4d4';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', 0, Templates.Modal.__deltemplate_s19_65c2d4d4);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s25_c9897a65 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<footer id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-footer\">' + soy.$$escapeHtml(opt_data.elementContent) + '</footer>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s25_c9897a65.soyTemplateName = 'Templates.Modal.__deltemplate_s25_c9897a65';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', 0, Templates.Modal.__deltemplate_s25_c9897a65);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s31_499dc9aa = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<header id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-header\">' + soy.$$escapeHtml(opt_data.elementContent) + '</header>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s31_499dc9aa.soyTemplateName = 'Templates.Modal.__deltemplate_s31_499dc9aa';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', 0, Templates.Modal.__deltemplate_s31_499dc9aa);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s37_45b138fb = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Modal'}), null, opt_ijData)));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s37_45b138fb.soyTemplateName = 'Templates.Modal.__deltemplate_s37_45b138fb';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), '', 0, Templates.Modal.__deltemplate_s37_45b138fb);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s40_29e4e741 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.Modal.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s40_29e4e741.soyTemplateName = 'Templates.Modal.__deltemplate_s40_29e4e741';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Modal', 0, Templates.Modal.__deltemplate_s40_29e4e741);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s44_31c78f9d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s44_31c78f9d.soyTemplateName = 'Templates.Modal.__deltemplate_s44_31c78f9d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', 0, Templates.Modal.__deltemplate_s44_31c78f9d);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s46_df8ef55a = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"modal component' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? ' ' + opt_data.elementClasses : '') + '\" data-component=\"\">' + soy.$$escapeHtml(opt_data.elementContent) + '</div>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s46_df8ef55a.soyTemplateName = 'Templates.Modal.__deltemplate_s46_df8ef55a';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', 0, Templates.Modal.__deltemplate_s46_df8ef55a);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s54_90747620 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.Modal.body(opt_data, null, opt_ijData)), id: opt_data.id + '-body'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s54_90747620.soyTemplateName = 'Templates.Modal.__deltemplate_s54_90747620';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', 0, Templates.Modal.__deltemplate_s54_90747620);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s63_231e36e7 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.Modal.footer(opt_data, null, opt_ijData)), id: opt_data.id + '-footer'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s63_231e36e7.soyTemplateName = 'Templates.Modal.__deltemplate_s63_231e36e7';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', 0, Templates.Modal.__deltemplate_s63_231e36e7);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s72_b8354b7d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.Modal.header(opt_data, null, opt_ijData)), id: opt_data.id + '-header'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s72_b8354b7d.soyTemplateName = 'Templates.Modal.__deltemplate_s72_b8354b7d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', 0, Templates.Modal.__deltemplate_s72_b8354b7d);\n\nTemplates.Modal.body.params = [\"body\"];\nTemplates.Modal.footer.params = [\"footer\"];\nTemplates.Modal.header.params = [\"header\"];\n/* jshint ignore:end */\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport Component from \"lib/scripts/Component\";\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nimport \"lib/scripts/Modal.soy.js\";\n\n/**\n * Modal component.\n */\nclass Modal extends Component {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  /**\n   * Closes the tooltip.\n   */\n  close() {\n    this.visible = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    dom.exitDocument(this.overlayElement);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncOverlay(overlay) {\n    dom[overlay ? 'enterDocument' : 'exitDocument'](this.overlayElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncVisible(visible) {\n    if (this.overlay) {\n      this.syncOverlay(visible);\n    }\n    super.syncVisible(visible);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  valueOverlayElementFn_() {\n    return dom.buildFragment('<div class=\"overlay\"></div>').firstChild\n  }\n}\n\n/**\n * Default modal elementClasses.\n * @default modal\n * @type {String}\n * @static\n */\nModal.ELEMENT_CLASSES = 'modal';\n\nModal.ATTRS = {\n  /**\n   * Content to be placed inside modal body.\n   * @type {String}\n   */\n  body: {\n    validator: core.isString\n  },\n\n  /**\n   * Modal default elementClasses attribute.\n   * @default centered\n   * @type {String}\n   */\n  elementClasses: {\n    value: 'centered'\n  },\n\n  /**\n   * Content to be placed inside modal footer.\n   * @type {String}\n   */\n  footer: {\n    validator: core.isString\n  },\n\n  /**\n   * Content to be placed inside modal header.\n   * @type {String}\n   */\n  header: {\n    validator: core.isString\n  },\n\n  /**\n   * Whether overlay should be visible when modal is visible.\n   * @type {boolean}\n   * @default true\n   */\n  overlay: {\n    validator: core.isBoolean,\n    value: true\n  },\n\n  /**\n   * Element to be used as overlay.\n   * @type {Element}\n   */\n  overlayElement: {\n    initOnly: true,\n    valueFn: 'valueOverlayElementFn_'\n  }\n};\n\nComponentRegistry.register('Modal', Modal);\n\nexport default Modal;\n","'use strict';\n\nimport domPosition from \"src/public/vendor/metal-position/src/position\";\n\n/**\n * Position utility. Computes region or best region to align an element with\n * another. Regions are relative to viewport, make sure to use element with\n * position fixed, or position absolute when the element first positioned\n * parent is the body element.\n */\nclass Position {\n\n  /**\n   * Aligns the element with the best region around alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {!Element} element Element to be aligned.\n   * @param {!Element} alignElement Element to align with.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n   *     The initial position to try. Options `Position.Top`, `Position.Right`,\n   *     `Position.Bottom`, `Position.Left`.\n   * @static\n   */\n  static align(element, alignElement, position) {\n    var bestRegion = this.getAlignBestRegion(element, alignElement, position);\n\n    var computedStyle = window.getComputedStyle(element, null);\n    if (computedStyle.getPropertyValue('position') !== 'fixed') {\n      var docEl = window.document.documentElement;\n      bestRegion.top += docEl.clientTop + window.pageYOffset;\n      bestRegion.left += docEl.clientLeft + window.pageXOffset;\n    }\n\n    element.style.top = bestRegion.top + 'px';\n    element.style.left = bestRegion.left + 'px';\n  }\n\n  /**\n   * Returns the best region to align element with alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {!Element} element Element to be aligned.\n   * @param {!Element} alignElement Element to align with.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n   *     The initial position to try. Options `Position.Top`, `Position.Right`,\n   *     `Position.Bottom`, `Position.Left`.\n   * @return {DOMRect} Best region to align element.\n   * @static\n   */\n  static getAlignBestRegion(element, alignElement, position) {\n    var bestArea = 0;\n    var bestPosition = position;\n    var bestRegion = this.getAlignRegion(element, alignElement, bestPosition);\n    var tryPosition = bestPosition;\n    var tryRegion = bestRegion;\n    var viewportRegion = domPosition.getRegion(window);\n\n    for (var i = 0; i < 4;) {\n      if (domPosition.intersectRegion(viewportRegion, tryRegion)) {\n        var visibleRegion = domPosition.intersection(viewportRegion, tryRegion);\n        var area = visibleRegion.width * visibleRegion.height;\n        if (area > bestArea) {\n          bestArea = area;\n          bestRegion = tryRegion;\n          bestPosition = tryPosition;\n        }\n        if (domPosition.insideViewport(tryRegion)) {\n          break;\n        }\n      }\n      tryPosition = (position + (++i)) % 4;\n      tryRegion = this.getAlignRegion(element, alignElement, tryPosition);\n    }\n\n    return bestRegion;\n  }\n\n  /**\n   * Returns the region to align element with alignElement. The element is\n   * always aligned in the middle of alignElement axis.\n   * @param {!Element} element Element to be aligned.\n   * @param {!Element} alignElement Element to align with.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n   *     The position to align. Options `Position.Top`, `Position.Right`,\n   *     `Position.Bottom`, `Position.Left`.\n   * @return {DOMRect} Region to align element.\n   * @static\n   */\n  static getAlignRegion(element, alignElement, position) {\n    var r1 = domPosition.getRegion(alignElement);\n    var r2 = domPosition.getRegion(element);\n    var top = 0;\n    var left = 0;\n\n    switch(position) {\n      case Position.Top:\n        top = r1.top - r2.height;\n        left = r1.left + r1.width/2 - r2.width/2;\n        break;\n      case Position.Right:\n        top = r1.top + r1.height/2 - r2.height/2;\n        left = r1.left + r1.width;\n        break;\n      case Position.Bottom:\n        top = r1.bottom;\n        left = r1.left + r1.width/2 - r2.width/2;\n        break;\n      case Position.Left:\n        top = r1.top + r1.height/2 - r2.height/2;\n        left = r1.left - r2.width;\n        break;\n    }\n\n    return {\n      bottom: top + r2.height,\n      height: r2.height,\n      left: left,\n      right: left + r2.width,\n      top: top,\n      width: r2.width\n    };\n  }\n\n  /**\n   * Checks if specified value is a valid position. Options `Position.Top`,\n   *     `Position.Right`, `Position.Bottom`, `Position.Left`.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} val\n   * @return {Boolean} Returns true if value is a valid position.\n   * @static\n   */\n  static isValidPosition(val) {\n    return 0 <= val && val <= 3;\n  }\n}\n\n/**\n * Represents the `Position.Top` constant.\n * @type {Number}\n * @default 0\n * @static\n */\nPosition.Top = 0;\n\n/**\n * Represents the `Position.Right` constant.\n * @type {Number}\n * @default 1\n * @static\n */\nPosition.Right = 1;\n\n/**\n * Represents the `Position.Bottom` constant.\n * @type {Number}\n * @default 2\n * @static\n */\nPosition.Bottom = 2;\n\n/**\n * Represents the `Position.Left` constant.\n * @type {Number}\n * @default 3\n * @static\n */\nPosition.Left = 3;\n\nexport default Position;\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport domPosition from \"src/public/vendor/metal-position/src/position\";\nimport Attribute from \"src/public/vendor/metaljs/src/attribute/Attribute\";\n\n/**\n * Scrollspy utility.\n */\nclass Scrollspy extends Attribute {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n\n    /**\n     * Holds the active index.\n     * @type {Number}\n     * @private\n     * @default -1\n     */\n    this.activeIndex = -1;\n\n    /**\n     * Holds the regions cache.\n     * @type {Object}\n     * @private\n     * @default []\n     */\n    this.regions = [];\n\n    /**\n     * Holds event handle that listens scroll shared event emitter proxy.\n     * @type {EventHandle}\n     * @protected\n     */\n    this.scrollHandle_ = dom.on(this.scrollElement, 'scroll', this.checkPosition.bind(this));\n\n    this.refresh();\n    this.checkPosition();\n    this.on('elementChanged', this.refresh);\n    this.on('offsetChanged', this.refresh);\n    this.on('scrollElementChanged', this.refresh);\n    this.on('selectorChanged', this.refresh);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.deactivateAll();\n    this.scrollHandle_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Activates index matching element.\n   * @param {Number} index\n   */\n  activate(index) {\n    if (this.activeIndex >= 0) {\n      this.deactivate(this.activeIndex);\n    }\n    this.activeIndex = index;\n    dom.addClasses(this.resolveElement(this.regions[index].link), [this.activeClass]);\n  }\n\n  /**\n   * Checks position of elements and activate the one in region.\n   */\n  checkPosition() {\n    var scrollHeight = this.getScrollHeight_();\n    var scrollTop = domPosition.getScrollTop(this.scrollElement);\n\n    if (this.activeIndex >= 0 && scrollTop < this.offset) {\n      this.deactivateAll();\n      return;\n    }\n\n    if (scrollHeight !== this.scrollHeight_) {\n      this.refresh();\n      return;\n    }\n\n    if (scrollHeight < scrollTop + this.offset) {\n      this.activate(this.regions.length - 1);\n      return;\n    }\n\n    var index = this.findBestRegionAt_(scrollTop);\n    if (index >= 0 && index !== this.activeIndex) {\n      this.activate(index);\n    }\n  }\n\n  /**\n   * Deactivates index matching element.\n   * @param {Number} index\n   */\n  deactivate(index) {\n    dom.removeClasses(this.resolveElement(this.regions[index].link), [this.activeClass]);\n  }\n\n  /**\n   * Deactivates all elements.\n   */\n  deactivateAll() {\n    for (var i = 0; i < this.regions.length; i++) {\n      this.deactivate(i);\n    }\n    this.activeIndex = -1;\n  }\n\n  /**\n   * Finds best region to activate.\n   * @param {number} scrollTop The scrollTop to use as reference.\n   * @return {number} The index of best region found.\n   */\n  findBestRegionAt_(scrollTop) {\n    var index = -1;\n    var origin = scrollTop + this.offset + this.scrollElementRegion_.top;\n    for (var i = 0; i < this.regions.length; i++) {\n      var region = this.regions[i];\n      if ((origin >= region.top) && (origin < region.bottom)) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the scroll height of `scrollElement`.\n   * @return {Number}\n   */\n  getScrollHeight_() {\n    var scrollHeight = domPosition.getHeight(this.scrollElement);\n    scrollHeight += this.scrollElementRegion_.top;\n    scrollHeight -= domPosition.getClientHeight(this.scrollElement);\n    return scrollHeight;\n  }\n\n  /**\n   * Refreshes all regions from document. Relevant when spying elements that\n   * nodes can be added and removed.\n   */\n  refresh() {\n    this.deactivateAll();\n\n    this.scrollElementRegion_ = domPosition.getRegion(this.scrollElement);\n    this.scrollHeight_ = this.getScrollHeight_();\n\n    this.regions = [];\n    var links = this.element.querySelectorAll(this.selector);\n    var scrollTop = domPosition.getScrollTop(this.scrollElement);\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      if (link.hash && (link.hash.length > 1)) {\n        var element = document.getElementById(link.hash.substring(1));\n        if (element) {\n          var region = domPosition.getRegion(element);\n          this.regions.push({\n            link: link,\n            top: region.top + scrollTop,\n            bottom: region.bottom + scrollTop\n          });\n        }\n      }\n    }\n    this.sortRegions_();\n  }\n\n  /**\n   * Sorts regions from lower to higher on y-axis.\n   * @protected\n   */\n  sortRegions_() {\n    this.regions.sort(function(a, b) {\n      return a.top - b.top;\n    });\n  }\n}\n\nScrollspy.ATTRS = {\n  /**\n   * Class to be used as active class.\n   * @attribute activeClass\n   * @type {string}\n   */\n  activeClass: {\n    validator: core.isString,\n    value: 'active'\n  },\n\n  /**\n   * Function that receives the matching element as argument and return\n   * itself. Relevant when the `activeClass` must be applied to a different\n   * element, e.g. a parentNode.\n   * @type {function}\n   * @default core.identityFunction\n   */\n  resolveElement: {\n    validator: core.isFunction,\n    value: core.identityFunction\n  },\n\n  /**\n   * The scrollElement element to be used as scrollElement area for affix. The scrollElement is\n   * where the scroll event is listened from.\n   * @type {Element|Window}\n   */\n  scrollElement: {\n    setter: dom.toElement,\n    value: document\n  },\n\n  /**\n   * Defines the offset that triggers scrollspy.\n   * @type {Number}\n   * @default 0\n   */\n  offset: {\n    validator: core.isNumber,\n    value: 0\n  },\n\n  /**\n   * Element to be used as alignment reference of affix.\n   * @type {Element}\n   */\n  element: {\n    setter: dom.toElement\n  },\n\n  /**\n   * Selector to query elements inside `element` to be activated.\n   * @type {Element}\n   * @default 'a'\n   */\n  selector: {\n    validator: core.isString,\n    value: 'a'\n  }\n};\n\nexport default Scrollspy;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from Tooltip.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.Tooltip.\n * @hassoydeltemplate {ComponentElement}\n * @hassoydeltemplate {ComponentTemplate}\n * @hassoydeltemplate {Tooltip}\n * @hassoydelcall {Component}\n * @hassoydelcall {ComponentElement}\n * @hassoydelcall {Tooltip}\n */\n\nif (typeof Templates.Tooltip == 'undefined') { Templates.Tooltip = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.content = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(opt_data.content));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.content.soyTemplateName = 'Templates.Tooltip.content';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s84_8d49094e = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Tooltip'}), null, opt_ijData)));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s84_8d49094e.soyTemplateName = 'Templates.Tooltip.__deltemplate_s84_8d49094e';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), '', 0, Templates.Tooltip.__deltemplate_s84_8d49094e);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s87_606fdd83 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.Tooltip.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s87_606fdd83.soyTemplateName = 'Templates.Tooltip.__deltemplate_s87_606fdd83';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Tooltip', 0, Templates.Tooltip.__deltemplate_s87_606fdd83);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s91_a8d4319d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s91_a8d4319d.soyTemplateName = 'Templates.Tooltip.__deltemplate_s91_a8d4319d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', 0, Templates.Tooltip.__deltemplate_s91_a8d4319d);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s93_71828d2a = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip component' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? ' ' + opt_data.elementClasses : '') + '\" data-component=\"\">' + soy.$$escapeHtml(opt_data.elementContent) + '</div>');\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s93_71828d2a.soyTemplateName = 'Templates.Tooltip.__deltemplate_s93_71828d2a';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', 0, Templates.Tooltip.__deltemplate_s93_71828d2a);\n\nTemplates.Tooltip.content.params = [\"content\"];\n/* jshint ignore:end */\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport Component from \"lib/scripts/Component\";\nimport Position from \"lib/scripts/Position\";\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nimport \"lib/scripts/Tooltip.soy.js\";\n\n/**\n * Tooltip component.\n */\nclass Tooltip extends Component {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  attached() {\n    this.align();\n  }\n\n  /**\n   * Aligns the tooltip with the best region around alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {Element=} opt_alignElement Optional element to align with.\n   */\n  align(opt_alignElement) {\n    this.syncAlignElement(opt_alignElement || this.alignElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncAlignElement(alignElement) {\n    if (this.inDocument && alignElement) {\n      Tooltip.Position.align(this.element, alignElement, this.position);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncContent(content) {\n    if (this.inDocument) {\n      dom.removeChildren(this.element);\n      dom.append(this.element, content);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncVisible(visible) {\n    super.syncVisible(visible);\n    this.align();\n  }\n}\n\n/**\n * @inheritDoc\n * @see `Position` class.\n * @static\n */\nTooltip.Position = Position;\n\n/**\n * Default tooltip elementClasses.\n * @default tooltip\n * @type {String}\n * @static\n */\nTooltip.ELEMENT_CLASSES = 'tooltip';\n\n/**\n * Tooltip attrbutes definition.\n * @type {Object}\n * @static\n */\nTooltip.ATTRS = {\n  /**\n   * Element to align tooltip with.\n   * @type {Element}\n   */\n  alignElement: {\n    setter: dom.toElement\n  },\n\n  /**\n   * Content to be placed inside tooltip.\n   * @type {String}\n   */\n  content: {\n    validator: core.isString\n  },\n\n  /**\n   * The position to try alignment. If not possible the best position will be\n   * found.\n   * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n   * @default Position.Bottom\n   */\n  position: {\n    validator: Tooltip.Position.isValidPosition,\n    value: Tooltip.Position.Bottom\n  }\n};\n\nComponentRegistry.register('Tooltip', Tooltip);\n\nexport default Tooltip;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from TooltipMenu.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.TooltipMenu.\n * @hassoydeltemplate {ComponentElement}\n * @hassoydeltemplate {ComponentTemplate}\n * @hassoydeltemplate {TooltipMenu}\n * @hassoydeltemplate {TooltipMenu.items}\n * @hassoydelcall {Component}\n * @hassoydelcall {ComponentElement}\n * @hassoydelcall {Surface}\n * @hassoydelcall {TooltipMenu}\n * @hassoydelcall {TooltipMenu.items}\n */\n\nif (typeof Templates.TooltipMenu == 'undefined') { Templates.TooltipMenu = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.content = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.content.soyTemplateName = 'Templates.TooltipMenu.content';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.items = function(opt_data, opt_ignored, opt_ijData) {\n  var output = '';\n  var itemList105 = opt_data.items;\n  var itemListLen105 = itemList105.length;\n  for (var itemIndex105 = 0; itemIndex105 < itemListLen105; itemIndex105++) {\n    var itemData105 = itemList105[itemIndex105];\n    output += '<li class=\"tooltip-menu-item\"><a class=\"tooltip-menu-link\" href=\"' + soy.$$escapeHtmlAttribute(soy.$$filterNormalizeUri(itemData105.href ? itemData105.href : '#')) + '\">' + soy.$$escapeHtml(itemData105.content) + '</a></li>';\n  }\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(output);\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.items.soyTemplateName = 'Templates.TooltipMenu.items';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s112_cfc546d2 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<nav id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip-menu ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + soy.$$escapeHtml(opt_data.elementContent) + '</nav>');\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s112_cfc546d2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s112_cfc546d2';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', 0, Templates.TooltipMenu.__deltemplate_s112_cfc546d2);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s120_c0ab3df3 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<ul id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-items\" class=\"tooltip-menu-list\">' + soy.$$escapeHtml(opt_data.elementContent) + '</ul>');\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s120_c0ab3df3.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s120_c0ab3df3';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', 0, Templates.TooltipMenu.__deltemplate_s120_c0ab3df3);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s126_8f8c631d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'TooltipMenu'}), null, opt_ijData)));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s126_8f8c631d.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s126_8f8c631d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), '', 0, Templates.TooltipMenu.__deltemplate_s126_8f8c631d);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s129_270e148b = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.TooltipMenu.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s129_270e148b.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s129_270e148b';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'TooltipMenu', 0, Templates.TooltipMenu.__deltemplate_s129_270e148b);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s133_da5bead2 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s133_da5bead2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s133_da5bead2';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', 0, Templates.TooltipMenu.__deltemplate_s133_da5bead2);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s135_8278e063 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((! opt_ijData.skipSurfaceContents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Surface'), '', true)({content: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.TooltipMenu.items(opt_data, null, opt_ijData)), id: opt_data.id + '-items'}, null, opt_ijData)) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s135_8278e063.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s135_8278e063';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', 0, Templates.TooltipMenu.__deltemplate_s135_8278e063);\n\nTemplates.TooltipMenu.items.params = [\"items\"];\n/* jshint ignore:end */\n","'use strict';\n\nimport core from \"src/public/vendor/metaljs/src/core\";\nimport dom from \"src/public/vendor/metaljs/src/dom/dom\";\nimport Component from \"lib/scripts/Component\";\nimport Position from \"lib/scripts/Position\";\nimport ComponentRegistry from \"src/public/vendor/metaljs/src/component/ComponentRegistry\";\nimport \"lib/scripts/TooltipMenu.soy.js\";\n\n/**\n * TooltipMenu component.\n */\nclass TooltipMenu extends Component {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  attached() {\n    this.align();\n  }\n\n  /**\n   * Aligns the tooltip with the best region around alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {Element=} opt_alignElement Optional element to align with.\n   */\n  align(opt_alignElement) {\n    this.syncAlignElement(opt_alignElement || this.alignElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncAlignElement(alignElement) {\n    if (this.inDocument && alignElement) {\n      TooltipMenu.Position.align(this.element, alignElement, this.position);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncVisible(visible) {\n    super.syncVisible(visible);\n    this.align();\n  }\n}\n\n/**\n * @inheritDoc\n * @see `Position` class.\n * @static\n */\nTooltipMenu.Position = Position;\n\n/**\n * Default tooltip elementClasses.\n * @default tooltip\n * @type {String}\n * @static\n */\nTooltipMenu.ELEMENT_CLASSES = 'tooltip-menu';\n\n/**\n * TooltipMenu attrbutes definition.\n * @type {Object}\n * @static\n */\nTooltipMenu.ATTRS = {\n  /**\n   * Element to align tooltip with.\n   * @type {Element}\n   */\n  alignElement: {\n    setter: dom.toElement\n  },\n\n  /**\n   * Items to be placed inside tooltip menu. Each item must contain at least a\n   * label key.\n   * @type {!Array.<!object>}\n   */\n  items: {\n    validator: Array.isArray,\n    valueFn: function() {\n      return [];\n    }\n  },\n\n  /**\n   * The position to try alignment. If not possible the best position will be\n   * found.\n   * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n   * @default Position.Bottom\n   */\n  position: {\n    validator: TooltipMenu.Position.isValidPosition,\n    value: TooltipMenu.Position.Bottom\n  }\n};\n\nComponentRegistry.register('TooltipMenu', TooltipMenu);\n\nexport default TooltipMenu;\n"],"sourceRoot":"/source/"}