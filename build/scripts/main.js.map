{"version":3,"sources":["main.js","jspm_packages/github/alloyui/core@master/core.js","jspm_packages/github/alloyui/core@master/array/array.js","jspm_packages/github/alloyui/core@master/object/object.js","jspm_packages/github/alloyui/core@master/disposable/Disposable.js","jspm_packages/github/alloyui/core@master/events/EventHandle.js","jspm_packages/github/alloyui/core@master/events/DomEventHandle.js","jspm_packages/github/alloyui/core@master/dom/dom.js","jspm_packages/github/alloyui/core@master/string/string.js","jspm_packages/github/alloyui/core@master/html/html.js","jspm_packages/github/alloyui/core@master/dom/features.js","jspm_packages/github/alloyui/core@master/structs/Trie.js","jspm_packages/github/alloyui/core@master/structs/WildcardTrie.js","jspm_packages/github/alloyui/core@master/events/EventEmitter.js","jspm_packages/github/alloyui/core@master/promise/Promise.js","jspm_packages/github/alloyui/core@master/attribute/Attribute.js","jspm_packages/github/alloyui/core@master/events/EventEmitterProxy.js","jspm_packages/github/alloyui/core@master/events/EventHandler.js","jspm_packages/github/alloyui/core@master/component/Component.js","jspm_packages/github/alloyui/core@master/component/ComponentRegistry.js","jspm_packages/github/alloyui/core@master/component/ComponentCollector.js","jspm_packages/github/alloyui/core@master/component/EventsCollector.js","jspm_packages/github/alloyui/core@master/soy/SoyComponent.soy.js","jspm_packages/github/alloyui/core@master/soy/SoyComponent.js","lib/scripts/Component.js","lib/scripts/Modal.soy.js","lib/scripts/Modal.js","jspm_packages/github/alloyui/core@master/math/math.js","jspm_packages/github/alloyui/core@master/dom/position.js","lib/scripts/Position.js","lib/scripts/Tooltip.soy.js","lib/scripts/Tooltip.js","lib/scripts/TooltipMenu.soy.js","lib/scripts/TooltipMenu.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function() {\n    \"use strict\";\n    'use strict';\n\n    /**\n     * A collection of core utility functions.\n     * @const\n     */\n    class jspm_packages$github$alloyui$core$master$core$$core {\n      /**\n       * When defining a class Foo with an abstract method bar(), you can do:\n       * Foo.prototype.bar = core.abstractMethod\n       *\n       * Now if a subclass of Foo fails to override bar(), an error will be thrown\n       * when bar() is invoked.\n       *\n       * @type {!Function}\n       * @throws {Error} when invoked to indicate the method should be overridden.\n       */\n      static abstractMethod() {\n        throw Error('Unimplemented abstract method');\n      }\n\n      /**\n       * Loops constructor super classes collecting its properties values. If\n       * property is not available on the super class `undefined` will be\n       * collected as value for the class hierarchy position.\n       * @param {!function()} constructor Class constructor.\n       * @param {string} propertyName Property name to be collected.\n       * @return {Array.<*>} Array of collected values.\n       * TODO(*): Rethink superclass loop.\n       */\n      static collectSuperClassesProperty(constructor, propertyName) {\n        var propertyValues = [constructor[propertyName]];\n        while (constructor.__proto__ && !constructor.__proto__.isPrototypeOf(Function)) {\n          constructor = constructor.__proto__;\n          propertyValues.push(constructor[propertyName]);\n        }\n        return propertyValues;\n      }\n\n      /**\n       * Gets an unique id. If `opt_object` argument is passed, the object is\n       * mutated with an unique id. Consecutive calls with the same object\n       * reference won't mutate the object again, instead the current object uid\n       * returns. See {@link core.UID_PROPERTY}.\n       * @type {opt_object} Optional object to be mutated with the uid. If not\n       *     specified this method only returns the uid.\n       * @throws {Error} when invoked to indicate the method should be overridden.\n       */\n      static getUid(opt_object) {\n        if (opt_object) {\n          return opt_object[jspm_packages$github$alloyui$core$master$core$$core.UID_PROPERTY] ||\n            (opt_object[jspm_packages$github$alloyui$core$master$core$$core.UID_PROPERTY] = jspm_packages$github$alloyui$core$master$core$$core.uniqueIdCounter_++);\n        }\n        return jspm_packages$github$alloyui$core$master$core$$core.uniqueIdCounter_++;\n      }\n\n      /**\n       * The identity function. Returns its first argument.\n       * @param {*=} opt_returnValue The single value that will be returned.\n       * @return {?} The first argument.\n       */\n      static identityFunction(opt_returnValue) {\n        return opt_returnValue;\n      }\n\n      /**\n       * Returns true if the specified value is a boolean.\n       * @param {?} val Variable to test.\n       * @return {boolean} Whether variable is boolean.\n       */\n      static isBoolean(val) {\n        return typeof val === 'boolean';\n      }\n\n      /**\n       * Returns true if the specified value is not undefined.\n       * @param {?} val Variable to test.\n       * @return {boolean} Whether variable is defined.\n       */\n      static isDef(val) {\n        return val !== undefined;\n      }\n\n      /**\n       * Returns true if value is not undefined or null.\n       * @param {*} val\n       * @return {Boolean}\n       */\n      static isDefAndNotNull(val) {\n        return jspm_packages$github$alloyui$core$master$core$$core.isDef(val) && !jspm_packages$github$alloyui$core$master$core$$core.isNull(val);\n      }\n\n      /**\n       * Returns true if value is a dom element.\n       * @param {*} val\n       * @return {Boolean}\n       */\n      static isElement(val) {\n        return val && typeof val === 'object' && val.nodeType === 1;\n      }\n\n      /**\n       * Returns true if the specified value is a function.\n       * @param {?} val Variable to test.\n       * @return {boolean} Whether variable is a function.\n       */\n      static isFunction(val) {\n        return typeof val === 'function';\n      }\n\n      /**\n       * Returns true if value is null.\n       * @param {*} val\n       * @return {Boolean}\n       */\n      static isNull(val) {\n        return val === null;\n      }\n\n      /**\n       * Returns true if the specified value is an object. This includes arrays\n       * and functions.\n       * @param {?} val Variable to test.\n       * @return {boolean} Whether variable is an object.\n       */\n      static isObject(val) {\n        var type = typeof val;\n        return type === 'object' && val !== null || type === 'function';\n      }\n\n      /**\n       * Returns true if value is a string.\n       * @param {*} val\n       * @return {Boolean}\n       */\n      static isString(val) {\n        return typeof val === 'string';\n      }\n\n      /**\n       * Merges the values of a static property a class with the values of that\n       * property for all its super classes, and stores it as a new static\n       * property of that class. If the static property already existed, it won't\n       * be recalculated.\n       * @param {!function()} constructor Class constructor.\n       * @param {string} propertyName Property name to be collected.\n       * @param {function(*, *):*=} opt_mergeFn Function that receives an array filled\n       *   with the values of the property for the current class and all its super classes.\n       *   Should return the merged value to be stored on the current class.\n       * @return {*} The value of the merged property.\n       */\n      static mergeSuperClassesProperty(constructor, propertyName, opt_mergeFn) {\n        var mergedName = propertyName + '_MERGED';\n        if (constructor.hasOwnProperty(mergedName)) {\n          return constructor[mergedName];\n        }\n\n        var merged = jspm_packages$github$alloyui$core$master$core$$core.collectSuperClassesProperty(constructor, propertyName);\n        if (opt_mergeFn) {\n          merged = opt_mergeFn(merged);\n        }\n        constructor[mergedName] = merged;\n        return constructor[mergedName];\n      }\n\n      /**\n       * Null function used for default values of callbacks, etc.\n       * @return {void} Nothing.\n       */\n      static nullFunction() {\n\n      }\n    }\n\n    /**\n     * Unique id property prefix.\n     * @type {String}\n     * @protected\n     */\n    jspm_packages$github$alloyui$core$master$core$$core.UID_PROPERTY = 'core_' + ((Math.random() * 1e9) >>> 0);\n\n    /**\n     * Counter for unique id.\n     * @type {Number}\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$core$$core.uniqueIdCounter_ = 1;\n\n    var jspm_packages$github$alloyui$core$master$core$$default = jspm_packages$github$alloyui$core$master$core$$core;\n    'use strict';\n\n    class jspm_packages$github$alloyui$core$master$array$array$$array {\n      /**\n       * Checks if the given arrays have the same content.\n       * @param {!Array<*>} arr1\n       * @param {!Array<*>} arr2\n       * @return {boolean}\n       */\n      static equal(arr1, arr2) {\n        for (var i = 0; i < arr1.length; i++) {\n          if (arr1[i] !== arr2[i]) {\n            return false;\n          }\n        }\n        return arr1.length === arr2.length;\n      }\n\n      /**\n       * Returns the first value in the given array that isn't undefined.\n       * @param {!Array} arr\n       * @return {*}\n       */\n      static firstDefinedValue(arr) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i] !== undefined) {\n            return arr[i];\n          }\n        }\n      }\n\n      /**\n       * Transforms the input nested array to become flat.\n       * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n       * @param {Array.<*>} opt_output Optional output array.\n       * @return {Array.<*>} Flat array.\n       */\n      static flatten(arr, opt_output) {\n        var output = opt_output || [];\n        for (var i = 0; i < arr.length; i++) {\n          if (Array.isArray(arr[i])) {\n            jspm_packages$github$alloyui$core$master$array$array$$array.flatten(arr[i], output);\n          } else {\n            output.push(arr[i]);\n          }\n        }\n        return output;\n      }\n\n      /**\n       * Removes the first occurrence of a particular value from an array.\n       * @param {Array.<T>} arr Array from which to remove value.\n       * @param {T} obj Object to remove.\n       * @return {boolean} True if an element was removed.\n       * @template T\n       */\n       static remove(arr, obj) {\n        var i = arr.indexOf(obj);\n        var rv;\n        if ( (rv = i >= 0) ) {\n          jspm_packages$github$alloyui$core$master$array$array$$array.removeAt(arr, i);\n        }\n        return rv;\n      }\n\n      /**\n       * Removes from an array the element at index i\n       * @param {Array} arr Array or array like object from which to remove value.\n       * @param {number} i The index to remove.\n       * @return {boolean} True if an element was removed.\n       */\n      static removeAt(arr, i) {\n        return Array.prototype.splice.call(arr, i, 1).length === 1;\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$array$array$$default = jspm_packages$github$alloyui$core$master$array$array$$array;\n    'use strict';\n\n    class jspm_packages$github$alloyui$core$master$object$object$$object {\n        /**\n         * Copies all the members of a source object to a target object.\n         * @param {Object} target Target object.\n         * @param {...Object} var_args The objects from which values will be copied.\n         * @return {Object} Returns the target object reference.\n         */\n        static mixin(target) {\n          var key, source;\n          for (var i = 1; i < arguments.length; i++) {\n            source = arguments[i];\n            for (key in source) {\n              target[key] = source[key];\n            }\n          }\n          return target;\n        }\n    }\n\n    var jspm_packages$github$alloyui$core$master$object$object$$default = jspm_packages$github$alloyui$core$master$object$object$$object;\n    'use strict';\n\n    /**\n     * Disposable utility. When inherited provides the `dispose` function to its\n     * subclass, which is responsible for disposing of any object references\n     * when an instance won't be used anymore. Subclasses should override\n     * `disposeInternal` to implement any specific disposing logic.\n     * @constructor\n     */\n    class jspm_packages$github$alloyui$core$master$disposable$Disposable$$Disposable {\n      constructor() {\n        /**\n         * Flag indicating if this instance has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed_ = false;\n      }\n\n      /**\n       * Disposes of this instance's object references. Calls `disposeInternal`.\n       */\n      dispose() {\n        if (!this.disposed_) {\n          this.disposeInternal();\n          this.disposed_ = true;\n        }\n      }\n\n      /**\n       * Subclasses should override this method to implement any specific\n       * disposing logic (like clearing references and calling `dispose` on other\n       * disposables).\n       */\n      disposeInternal() {\n      }\n\n      /**\n       * Checks if this instance has already been disposed.\n       * @return {boolean}\n       */\n      isDisposed() {\n        return this.disposed_;\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$disposable$Disposable$$default = jspm_packages$github$alloyui$core$master$disposable$Disposable$$Disposable;\n    'use strict';\n\n    /**\n     * EventHandle utility. Holds information about an event subscription, and\n     * allows removing them easily.\n     * EventHandle is a Disposable, but it's important to note that the\n     * EventEmitter that created it is not the one responsible for disposing it.\n     * That responsibility is for the code that holds a reference to it.\n     * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n     * @param {string} event The name of the event that was subscribed to.\n     * @param {!Function} listener The listener subscribed to the event.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class jspm_packages$github$alloyui$core$master$events$EventHandle$$EventHandle extends jspm_packages$github$alloyui$core$master$disposable$Disposable$$default {\n      constructor(emitter, event, listener) {\n        /**\n         * The EventEmitter instance that the event was subscribed to.\n         * @type {EventEmitter}\n         * @protected\n         */\n        this.emitter_ = emitter;\n\n        /**\n         * The name of the event that was subscribed to.\n         * @type {string}\n         * @protected\n         */\n        this.event_ = event;\n\n        /**\n         * The listener subscribed to the event.\n         * @type {Function}\n         * @protected\n         */\n        this.listener_ = listener;\n      }\n\n      /**\n       * Disposes of this instance's object references.\n       * @override\n       */\n      disposeInternal() {\n        this.emitter_ = null;\n        this.listener_ = null;\n      }\n\n      /**\n       * Removes the listener subscription from the emitter.\n       */\n      removeListener() {\n        if (!this.emitter_.isDisposed()) {\n          this.emitter_.removeListener(this.event_, this.listener_);\n        }\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$events$EventHandle$$default = jspm_packages$github$alloyui$core$master$events$EventHandle$$EventHandle;\n    'use strict';\n\n    /**\n     * This is a special EventHandle, that is responsible for dom events, instead\n     * of EventEmitter events.\n     * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n     * @param {string} event The name of the event that was subscribed to.\n     * @param {!Function} listener The listener subscribed to the event.\n     * @constructor\n     * @extends {EventHandle}\n     */\n    class jspm_packages$github$alloyui$core$master$events$DomEventHandle$$DomEventHandle extends jspm_packages$github$alloyui$core$master$events$EventHandle$$default {\n      constructor(emitter, event, listener) {\n        super(emitter, event, listener);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      removeListener() {\n        this.emitter_.removeEventListener(this.event_, this.listener_);\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$events$DomEventHandle$$default = jspm_packages$github$alloyui$core$master$events$DomEventHandle$$DomEventHandle;\n    'use strict';\n\n    class jspm_packages$github$alloyui$core$master$dom$dom$$dom {\n      /**\n       * Adds the requested CSS classes to an element.\n       * @param {!Element} element The element to add CSS classes to.\n       * @param {!Array<string>} classes CSS classes to add.\n       */\n      static addClasses(element, classes) {\n        if ('classList' in element) {\n          jspm_packages$github$alloyui$core$master$dom$dom$$dom.addClassesWithNative_(element, classes);\n        } else {\n          jspm_packages$github$alloyui$core$master$dom$dom$$dom.addClassesWithoutNative_(element, classes);\n        }\n      }\n\n      /**\n       * Adds the requested CSS classes to an element using classList.\n       * @param {!Element} element The element to add CSS classes to.\n       * @param {!Array<string>} classes CSS classes to add.\n       * @protected\n       */\n      static addClassesWithNative_(element, classes) {\n        classes.forEach(function(className) {\n          element.classList.add(className);\n        });\n      }\n\n      /**\n       * Adds the requested CSS classes to an element without using classList.\n       * @param {!Element} element The element to add CSS classes to.\n       * @param {!Array<string>} classes CSS classes to add.\n       * @protected\n       */\n      static addClassesWithoutNative_(element, classes) {\n        var elementClassName = ' ' + element.className + ' ';\n        var classesToAppend = '';\n\n        for (var i = 0; i < classes.length; i++) {\n          var className = classes[i];\n\n          if (elementClassName.indexOf(' ' + className + ' ') === -1) {\n            classesToAppend += ' ' + className;\n          }\n        }\n\n        if (classesToAppend) {\n          element.className = element.className + classesToAppend;\n        }\n      }\n\n      /**\n       * Appends a child node with text or other nodes to a parent node. If\n       * child is a HTML string it will be automatically converted to a document\n       * fragment before appending it to the parent.\n       * @param {!Element} parent The node to append nodes to.\n       * @param {!Element|String} child The thing to append to the parent.\n       * @return {!Element} The appended child.\n       */\n      static append(parent, child) {\n        if (jspm_packages$github$alloyui$core$master$core$$default.isString(child)) {\n          child = jspm_packages$github$alloyui$core$master$dom$dom$$dom.buildFragment(child);\n        }\n        return parent.appendChild(child);\n      }\n\n      /**\n       * Helper for converting a HTML string into a document fragment.\n       * @param {string} htmlString The HTML string to convert.\n       * @return {!Element} The resulting document fragment.\n       */\n      static buildFragment(htmlString) {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = '<br>' + htmlString;\n        tempDiv.removeChild(tempDiv.firstChild);\n\n        var fragment = document.createDocumentFragment();\n        while (tempDiv.firstChild) {\n          fragment.appendChild(tempDiv.firstChild);\n        }\n        return fragment;\n      }\n\n      /**\n       * Listens to the specified event on the given DOM element, but only calls the\n       * callback with the event when it triggered by elements that match the given\n       * selector.\n       * @param {!Element} element The container DOM element to listen to the event on.\n       * @param {string} eventName The name of the event to listen to.\n       * @param {string} selector The selector that matches the child elements that\n       *   the event should be triggered for.\n       * @param {!function(!Object)} callback Function to be called when the event is\n       *   triggered. It will receive the normalized event object.\n       * @return {!DomEventHandle} Can be used to remove the listener.\n       */\n      static delegate(element, eventName, selector, callback) {\n        return jspm_packages$github$alloyui$core$master$dom$dom$$dom.on(\n          element,\n          eventName,\n          jspm_packages$github$alloyui$core$master$dom$dom$$dom.handleDelegateEvent_.bind(null, selector, callback)\n        );\n      }\n\n      /**\n       * Inserts node in document as last element.\n       * @param {Element} node Element to remove children from.\n       */\n      static enterDocument(node) {\n        jspm_packages$github$alloyui$core$master$dom$dom$$dom.append(document.body, node);\n      }\n\n      /**\n       * Removes node from document.\n       * @param {Element} node Element to remove children from.\n       */\n      static exitDocument(node) {\n        if (node.parentNode) {\n          node.parentNode.removeChild(node);\n        }\n      }\n\n      /**\n       * This is called when an event is triggered by a delegate listener (see\n       * `dom.delegate` for more details).\n       * @param {string} selector The selector or element that matches the child\n       *   elements that the event should be triggered for.\n       * @param {!function(!Object)} callback Function to be called when the event\n       *   is triggered. It will receive the normalized event object.\n       * @param {!Event} event The event payload.\n       * @return {boolean} False if at least one of the triggered callbacks returns\n       *   false, or true otherwise.\n       */\n      static handleDelegateEvent_(selector, callback, event) {\n        jspm_packages$github$alloyui$core$master$dom$dom$$dom.normalizeDelegateEvent_(event);\n\n        var currentElement = event.target;\n        var returnValue = true;\n\n        while (currentElement && !event.stopped) {\n          if (jspm_packages$github$alloyui$core$master$core$$default.isString(selector) && jspm_packages$github$alloyui$core$master$dom$dom$$dom.match(currentElement, selector)) {\n            event.delegateTarget = currentElement;\n            returnValue &= callback(event);\n          }\n          currentElement = currentElement.parentNode;\n        }\n\n        return returnValue;\n      }\n\n      /**\n       * Checks if the given element has the requested css class.\n       * @param {!Element} element\n       * @param {string} className\n       * @return {boolean}\n       */\n      static hasClass(element, className) {\n        if ('classList' in element) {\n          return jspm_packages$github$alloyui$core$master$dom$dom$$dom.hasClassWithNative_(element, className);\n        } else {\n          return jspm_packages$github$alloyui$core$master$dom$dom$$dom.hasClassWithoutNative_(element, className);\n        }\n      }\n\n      /**\n       * Checks if the given element has the requested css class using classList.\n       * @param {!Element} element\n       * @param {string} className\n       * @return {boolean}\n       * @protected\n       */\n      static hasClassWithNative_(element, className) {\n        return element.classList.contains(className);\n      }\n\n      /**\n       * Checks if the given element has the requested css class without using classList.\n       * @param {!Element} element\n       * @param {string} className\n       * @return {boolean}\n       * @protected\n       */\n      static hasClassWithoutNative_(element, className) {\n        return (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n      }\n\n      /**\n       * Check if an element matches a given selector.\n       * @param {Element} element\n       * @param {string} selector\n       * @return {boolean}\n       */\n      static match(element, selector) {\n        if (!element || element.nodeType !== 1) {\n          return false;\n        }\n\n        var p = Element.prototype;\n        var m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n        if (m) {\n          return m.call(element, selector);\n        }\n\n        return jspm_packages$github$alloyui$core$master$dom$dom$$dom.matchFallback_(element, selector);\n      }\n\n      /**\n       * Check if an element matches a given selector, using an internal implementation\n       * instead of calling existing javascript functions.\n       * @param {Element} element\n       * @param {string} selector\n       * @return {boolean}\n       * @protected\n       */\n      static matchFallback_(element, selector) {\n        var nodes = document.querySelectorAll(selector, element.parentNode);\n        for (var i = 0; i < nodes.length; ++i) {\n          if (nodes[i] === element) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      /**\n       * Normalizes the event payload for delegate listeners.\n       * @param {!Event} event\n       */\n      static normalizeDelegateEvent_(event) {\n        event.stopPropagation = jspm_packages$github$alloyui$core$master$dom$dom$$dom.stopPropagation_;\n        event.stopImmediatePropagation = jspm_packages$github$alloyui$core$master$dom$dom$$dom.stopImmediatePropagation_;\n      }\n\n      /**\n       * Listens to the specified event on the given DOM element. This function normalizes\n       * DOM event payloads and functions so they'll work the same way on all supported\n       * browsers.\n       * @param {!Element} element The DOM element to listen to the event on.\n       * @param {string} eventName The name of the event to listen to.\n       * @param {!function(!Object)} callback Function to be called when the event is\n       *   triggered. It will receive the normalized event object.\n       * @return {!DomEventHandle} Can be used to remove the listener.\n       */\n      static on(element, eventName, callback) {\n        element.addEventListener(eventName, callback);\n        return new jspm_packages$github$alloyui$core$master$events$DomEventHandle$$default(element, eventName, callback);\n      }\n\n      /**\n       * Removes all the child nodes on a DOM node.\n       * @param {Element} node Element to remove children from.\n       */\n      static removeChildren(node) {\n        var child;\n        while ((child = node.firstChild)) {\n          node.removeChild(child);\n        }\n      }\n\n      /**\n       * Removes the requested CSS classes from an element.\n       * @param {!Element} element The element to remove CSS classes from.\n       * @param {!Array<string>} classes CSS classes to remove.\n       */\n      static removeClasses(element, classes) {\n        if ('classList' in element) {\n          jspm_packages$github$alloyui$core$master$dom$dom$$dom.removeClassesWithNative_(element, classes);\n        } else {\n          jspm_packages$github$alloyui$core$master$dom$dom$$dom.removeClassesWithoutNative_(element, classes);\n        }\n      }\n\n      /**\n       * Removes the requested CSS classes from an element using classList.\n       * @param {!Element} element The element to remove CSS classes from.\n       * @param {!Array<string>} classes CSS classes to remove.\n       * @protected\n       */\n      static removeClassesWithNative_(element, classes) {\n        classes.forEach(function(className) {\n          element.classList.remove(className);\n        });\n      }\n\n      /**\n       * Removes the requested CSS classes from an element without using classList.\n       * @param {!Element} element The element to remove CSS classes from.\n       * @param {!Array<string>} classes CSS classes to remove.\n       * @protected\n       */\n      static removeClassesWithoutNative_(element, classes) {\n        var elementClassName = ' ' + element.className + ' ';\n\n        for (var i = 0; i < classes.length; i++) {\n          elementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n        }\n\n        element.className = elementClassName.trim();\n      }\n\n      /**\n       * The function that replaces `stopImmediatePropagation_` for events.\n       * @protected\n       */\n      static stopImmediatePropagation_() {\n        this.stopped = true;\n        Event.prototype.stopImmediatePropagation.call(this);\n      }\n\n      /**\n       * The function that replaces `stopPropagation` for events.\n       * @protected\n       */\n      static stopPropagation_() {\n        this.stopped = true;\n        Event.prototype.stopPropagation.call(this);\n      }\n\n      /**\n       * Checks if the given element supports the given event type.\n       * @param {!Element} element The DOM element to check.\n       * @param {string} eventName The name of the event to check.\n       * @return {boolean}\n       */\n      static supportsEvent(element, eventName) {\n        return 'on' + eventName in element;\n      }\n\n      /**\n       * Converts the given argument to a DOM element. Strings are assumed to\n       * be selectors, and so a matched element will be returned. If the arg\n       * is already a DOM element it will be the return value.\n       * @param {string|Element} selectorOrElement\n       * @return {Element} The converted element, or null if none was found.\n       */\n      static toElement(selectorOrElement) {\n        if (jspm_packages$github$alloyui$core$master$core$$default.isElement(selectorOrElement)) {\n          return selectorOrElement;\n        } else if (jspm_packages$github$alloyui$core$master$core$$default.isString(selectorOrElement)) {\n          return document.querySelector(selectorOrElement);\n        } else {\n          return null;\n        }\n      }\n\n      /**\n       * Triggers the specified event on the given element.\n       * NOTE: This should mostly be used for testing, not on real code.\n       * @param {!Element} element The node that should trigger the event.\n       * @param {string} eventName The name of the event to be triggred.\n       * @param {Object=} opt_eventObj An object with data that should be on the\n       *   triggered event's payload.\n       */\n      static triggerEvent(element, eventName, opt_eventObj) {\n        var eventObj = document.createEvent('HTMLEvents');\n        eventObj.initEvent(eventName, true, true);\n        jspm_packages$github$alloyui$core$master$object$object$$default.mixin(eventObj, opt_eventObj);\n        element.dispatchEvent(eventObj);\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$dom$dom$$default = jspm_packages$github$alloyui$core$master$dom$dom$$dom;\n    'use strict';\n\n    class jspm_packages$github$alloyui$core$master$string$string$$string {\n        /**\n         * Removes the breaking spaces from the left and right of the string and\n         * collapses the sequences of breaking spaces in the middle into single spaces.\n         * The original and the result strings render the same way in HTML.\n         * @param {string} str A string in which to collapse spaces.\n         * @return {string} Copy of the string with normalized breaking spaces.\n         */\n        static collapseBreakingSpaces(str) {\n          return str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n        }\n\n        /**\n         * Calculates the hashcode for a string. The hashcode value is computed by\n         * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n         * property of using 31 prime is that the multiplication can be replaced by\n         * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n         * Modern VMs do this sort of optimization automatically.\n         * @param {String} val Target string.\n         * @return {Number} Returns the string hashcode.\n         */\n        static hashCode(val) {\n          var hash = 0;\n          for (var i = 0, len = val.length; i < len; i++) {\n            hash = 31 * hash + val.charCodeAt(i);\n            hash %= 0x100000000;\n          }\n          return hash;\n        }\n\n        /**\n         * Replaces interval into the string with specified value, e.g.\n         * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n         * @param {string} str The input string.\n         * @param {Number} start Start interval position to be replaced.\n         * @param {Number} end End interval position to be replaced.\n         * @param {string} value The value that replaces the specified interval.\n         * @return {string}\n         */\n        static replaceInterval(str, start, end, value) {\n          return str.substring(0, start) + value + str.substring(end);\n        }\n    }\n\n    var jspm_packages$github$alloyui$core$master$string$string$$default = jspm_packages$github$alloyui$core$master$string$string$$string;\n    'use strict';\n\n    class jspm_packages$github$alloyui$core$master$html$html$$html {\n      /**\n       * Minifies given HTML source by removing extra white spaces, comments and\n       * other unneeded characters without breaking the content structure. As a\n       * result HTML become smaller in size.\n       * - Contents within <code>, <pre>, <script>, <style>, <textarea> and\n       *   conditional comments tags are preserved.\n       * - Comments are removed.\n       * - Conditional comments are preserved.\n       * - Breaking spaces are collapsed into a single space.\n       * - Unneeded spaces inside tags (around = and before />) are removed.\n       * - Spaces between tags are removed, even from inline-block elements.\n       * - Spaces surrounding tags are removed.\n       * - DOCTYPE declaration is simplified to <!DOCTYPE html>.\n       * - Does not remove default attributes from <script>, <style>, <link>,\n       *   <form>, <input>.\n       * - Does not remove values from boolean tag attributes.\n       * - Does not remove \"javascript:\" from in-line event handlers.\n       * - Does not remove http:// and https:// protocols.\n       * @param {string} htmlString Input HTML to be compressed.\n       * @return {string} Compressed version of the HTML.\n       */\n      static compress(htmlString) {\n        var preserved = {};\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveBlocks_(htmlString, preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.simplifyDoctype_(htmlString);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.removeComments_(htmlString);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.removeIntertagSpaces_(htmlString);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.collapseBreakingSpaces_(htmlString);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.removeSpacesInsideTags_(htmlString);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.removeSurroundingSpaces_(htmlString);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.returnBlocks_(htmlString, preserved);\n        return htmlString.trim();\n      }\n\n      /**\n       * Collapses breaking spaces into a single space.\n       * @param {string} htmlString\n       * @return {string}\n       * @protected\n       */\n      static collapseBreakingSpaces_(htmlString) {\n        return jspm_packages$github$alloyui$core$master$string$string$$default.collapseBreakingSpaces(htmlString);\n      }\n\n      /**\n       * Searches for first occurrence of the specified open tag string pattern\n       * and from that point finds next \">\" position, identified as possible tag\n       * end position.\n       * @param {string} htmlString\n       * @param {string} openTag Open tag string pattern without open tag ending\n       *     character, e.g. \"<textarea\" or \"<code\".\n       * @return {string}\n       * @protected\n       */\n      static lookupPossibleTagBoundary_(htmlString, openTag) {\n        var tagPos = htmlString.indexOf(openTag);\n        if (tagPos > -1) {\n          tagPos += htmlString.substring(tagPos).indexOf('>') + 1;\n        }\n        return tagPos;\n      }\n\n      /**\n       * Searches for first occurrence of the specified open tag string pattern\n       * and from that point finds correct closing tag.\n       * @param {string} openTagPattern\n       * @param {string} openTag Open tag string pattern without open tag ending\n       *     character, e.g. \"<textarea\" or \" data-foo=\".\n       * @return {string}\n       * @protected\n       */\n      static lookupPossibleTagEnd_(htmlString, openTagPattern) {\n        var tagEnd = jspm_packages$github$alloyui$core$master$html$html$$html.lookupPossibleTagBoundary_(htmlString, openTagPattern);\n        var abut = 0;\n        var malformed = true;\n        while (tagEnd < htmlString.length) {\n          if (htmlString.charAt(tagEnd) === '<') {\n            if (htmlString.charAt(tagEnd + 1) === '/') {\n              if (abut === 0) {\n                malformed = false;\n                break;\n              }\n              abut--;\n            }\n            else {\n              abut++;\n            }\n          }\n          tagEnd++;\n        }\n        if (malformed) {\n          throw new Error('Cannot remove element contents on malformed HTML.');\n        }\n        return tagEnd;\n      }\n\n      /**\n       * Preserves contents inside any <code>, <pre>, <script>, <style>,\n       * <textarea> and conditional comment tags. When preserved, original content\n       * are replaced with an unique generated block id and stored into\n       * `preserved` map.\n       * @param {string} htmlString\n       * @param {Object} preserved Object to preserve the content indexed by an\n       *     unique generated block id.\n       * @return {html} The preserved HTML.\n       * @protected\n       */\n      static preserveBlocks_(htmlString, preserved) {\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveOuterHtml_(htmlString, '<!--[if', '<![endif]-->', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveInnerHtml_(htmlString, '<code', '</code', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveInnerHtml_(htmlString, '<pre', '</pre', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveInnerHtml_(htmlString, '<script', '</script', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveInnerHtml_(htmlString, '<style', '</style', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveInnerHtml_(htmlString, '<textarea', '</textarea', preserved);\n        return htmlString;\n      }\n\n      /**\n       * Removes inner contents inside tags that matches with the specified tag\n       * pattern recursively.\n       * @param {string} htmlString\n       * @param {string} openTagPattern Open tag string pattern without open tag\n       *     ending character, e.g. \"<textarea\" or \"<code\".\n       * @return {html} The HTML with inner content removed for desired tag.\n       * @protected\n       */\n      static removeElementContent(htmlString, openTagPattern) {\n        var tagPosEnd = jspm_packages$github$alloyui$core$master$html$html$$html.lookupPossibleTagBoundary_(htmlString, openTagPattern);\n        if (tagPosEnd > -1) {\n          var tagPosEndBoundary = jspm_packages$github$alloyui$core$master$html$html$$html.lookupPossibleTagEnd_(htmlString, openTagPattern);\n          htmlString = jspm_packages$github$alloyui$core$master$string$string$$default.replaceInterval(htmlString, tagPosEnd, tagPosEndBoundary, '');\n          htmlString = htmlString.replace(openTagPattern, '%%%~1~%%%');\n          htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.removeElementContent(htmlString, openTagPattern);\n        }\n        htmlString = htmlString.replace(/%%%~1~%%%/g, openTagPattern);\n        return htmlString;\n      }\n\n      /**\n       * Preserves inner contents inside the specified tag. When preserved,\n       * original content are replaced with an unique generated block id and\n       * stored into `preserved` map.\n       * @param {string} htmlString\n       * @param {string} openTag Open tag string pattern without open tag ending\n       *     character, e.g. \"<textarea\" or \"<code\".\n       * @param {string} closeTag Close tag string pattern without close tag\n       *     ending character, e.g. \"</textarea\" or \"</code\".\n       * @param {Object} preserved Object to preserve the content indexed by an\n       *     unique generated block id.\n       * @return {html} The preserved HTML.\n       * @protected\n       */\n      static preserveInnerHtml_(htmlString, openTag, closeTag, preserved) {\n        var tagPosEnd = jspm_packages$github$alloyui$core$master$html$html$$html.lookupPossibleTagBoundary_(htmlString, openTag);\n        while (tagPosEnd > -1) {\n          var tagEndPos = htmlString.indexOf(closeTag);\n          htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveInterval_(htmlString, tagPosEnd, tagEndPos, preserved);\n          htmlString = htmlString.replace(openTag, '%%%~1~%%%');\n          htmlString = htmlString.replace(closeTag, '%%%~2~%%%');\n          tagPosEnd = jspm_packages$github$alloyui$core$master$html$html$$html.lookupPossibleTagBoundary_(htmlString, openTag);\n        }\n        htmlString = htmlString.replace(/%%%~1~%%%/g, openTag);\n        htmlString = htmlString.replace(/%%%~2~%%%/g, closeTag);\n        return htmlString;\n      }\n\n      /**\n       * Preserves interval of the specified HTML into the preserved map replacing\n       * original contents with an unique generated id.\n       * @param {string} htmlString\n       * @param {Number} start Start interval position to be replaced.\n       * @param {Number} end End interval position to be replaced.\n       * @param {Object} preserved Object to preserve the content indexed by an\n       *     unique generated block id.\n       * @return {string} The HTML with replaced interval.\n       * @protected\n       */\n      static preserveInterval_(htmlString, start, end, preserved) {\n        var blockId = '%%%~BLOCK~' + jspm_packages$github$alloyui$core$master$core$$default.getUid() + '~%%%';\n        preserved[blockId] = htmlString.substring(start, end);\n        return jspm_packages$github$alloyui$core$master$string$string$$default.replaceInterval(htmlString, start, end, blockId);\n      }\n\n      /**\n       * Preserves outer contents inside the specified tag. When preserved,\n       * original content are replaced with an unique generated block id and\n       * stored into `preserved` map.\n       * @param {string} htmlString\n       * @param {string} openTag Open tag string pattern without open tag ending\n       *     character, e.g. \"<textarea\" or \"<code\".\n       * @param {string} closeTag Close tag string pattern without close tag\n       *     ending character, e.g. \"</textarea\" or \"</code\".\n       * @param {Object} preserved Object to preserve the content indexed by an\n       *     unique generated block id.\n       * @return {html} The preserved HTML.\n       * @protected\n       */\n      static preserveOuterHtml_(htmlString, openTag, closeTag, preserved) {\n        var tagPos = htmlString.indexOf(openTag);\n        while (tagPos > -1) {\n          var tagEndPos = htmlString.indexOf(closeTag) + closeTag.length;\n          htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveInterval_(htmlString, tagPos, tagEndPos, preserved);\n          tagPos = htmlString.indexOf(openTag);\n        }\n        return htmlString;\n      }\n\n      /**\n       * Removes all comments of the HTML. Including conditional comments and\n       * \"<![CDATA[\" blocks.\n       * @param {string} htmlString\n       * @return {string} The HTML without comments.\n       * @protected\n       */\n      static removeComments_(htmlString) {\n        var preserved = {};\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveOuterHtml_(htmlString, '<![CDATA[', ']]>', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveOuterHtml_(htmlString, '<!--', '-->', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.replacePreservedBlocks_(htmlString, preserved, '');\n        return htmlString;\n      }\n\n      /**\n       * Removes spaces between tags, even from inline-block elements.\n       * @param {string} htmlString\n       * @return {string} The HTML without spaces between tags.\n       * @protected\n       */\n      static removeIntertagSpaces_(htmlString) {\n        htmlString = htmlString.replace(jspm_packages$github$alloyui$core$master$html$html$$html.Patterns.INTERTAG_CUSTOM_CUSTOM, '~%%%%%%~');\n        htmlString = htmlString.replace(jspm_packages$github$alloyui$core$master$html$html$$html.Patterns.INTERTAG_CUSTOM_TAG, '~%%%<');\n        htmlString = htmlString.replace(jspm_packages$github$alloyui$core$master$html$html$$html.Patterns.INTERTAG_TAG, '><');\n        htmlString = htmlString.replace(jspm_packages$github$alloyui$core$master$html$html$$html.Patterns.INTERTAG_TAG_CUSTOM, '>%%%~');\n        return htmlString;\n      }\n\n      /**\n       * Removes spaces inside tags.\n       * @param {string} htmlString\n       * @return {string} The HTML without spaces inside tags.\n       * @protected\n       */\n      static removeSpacesInsideTags_(htmlString) {\n        htmlString = htmlString.replace(jspm_packages$github$alloyui$core$master$html$html$$html.Patterns.TAG_END_SPACES, '$1$2');\n        htmlString = htmlString.replace(jspm_packages$github$alloyui$core$master$html$html$$html.Patterns.TAG_QUOTE_SPACES, '=$1$2$3');\n        return htmlString;\n      }\n\n      /**\n       * Removes spaces surrounding tags.\n       * @param {string} htmlString\n       * @return {string} The HTML without spaces surrounding tags.\n       * @protected\n       */\n      static removeSurroundingSpaces_(htmlString) {\n        return htmlString.replace(jspm_packages$github$alloyui$core$master$html$html$$html.Patterns.SURROUNDING_SPACES, '$1');\n      }\n\n      /**\n       * Restores preserved map keys inside the HTML. Note that the passed HTML\n       * should contain the unique generated block ids to be replaced.\n       * @param {string} htmlString\n       * @param {Object} preserved Object to preserve the content indexed by an\n       *     unique generated block id.\n       * @param {string} replaceValue The value to replace any block id inside the\n       * HTML.\n       * @return {string}\n       * @protected\n       */\n      static replacePreservedBlocks_(htmlString, preserved, replaceValue) {\n        for (var blockId in preserved) {\n          htmlString = htmlString.replace(blockId, replaceValue);\n        }\n        return htmlString;\n      }\n\n      /**\n       * Simplifies DOCTYPE declaration to <!DOCTYPE html>.\n       * @param {string} htmlString\n       * @return {string}\n       * @protected\n       */\n      static simplifyDoctype_(htmlString) {\n        var preserved = {};\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.preserveOuterHtml_(htmlString, '<!DOCTYPE', '>', preserved);\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$html.replacePreservedBlocks_(htmlString, preserved, '<!DOCTYPE html>');\n        return htmlString;\n      }\n\n      /**\n       * Restores preserved map original contents inside the HTML. Note that the\n       * passed HTML should contain the unique generated block ids to be restored.\n       * @param {string} htmlString\n       * @param {Object} preserved Object to preserve the content indexed by an\n       *     unique generated block id.\n       * @return {string}\n       * @protected\n       */\n      static returnBlocks_(htmlString, preserved) {\n        for (var blockId in preserved) {\n          htmlString = htmlString.replace(blockId, preserved[blockId]);\n        }\n        return htmlString;\n      }\n    }\n\n    /**\n     * HTML regex patterns.\n     * @enum {RegExp}\n     * @protected\n     */\n    jspm_packages$github$alloyui$core$master$html$html$$html.Patterns = {\n      /**\n       * @type {RegExp}\n       */\n      INTERTAG_CUSTOM_CUSTOM: /~%%%\\s+%%%~/g,\n\n      /**\n       * @type {RegExp}\n       */\n      INTERTAG_TAG_CUSTOM: />\\s+%%%~/g,\n\n      /**\n       * @type {RegExp}\n       */\n      INTERTAG_CUSTOM_TAG: /~%%%\\s+</g,\n\n      /**\n       * @type {RegExp}\n       */\n      INTERTAG_TAG: />\\s+</g,\n\n      /**\n       * @type {RegExp}\n       */\n      SURROUNDING_SPACES: /\\s*(<[^>]+>)\\s*/g,\n\n      /**\n       * @type {RegExp}\n       */\n      TAG_END_SPACES: /(<(?:[^>]+?))(?:\\s+?)(\\/?>)/g,\n\n      /**\n       * @type {RegExp}\n       */\n      TAG_QUOTE_SPACES: /\\s*=\\s*([\"']?)\\s*(.*?)\\s*(\\1)/g\n    };\n\n    var jspm_packages$github$alloyui$core$master$html$html$$default = jspm_packages$github$alloyui$core$master$html$html$$html;\n    'use strict';\n\n    /**\n     * Class with static methods responsible for doing browser feature checks.\n     */\n    class jspm_packages$github$alloyui$core$master$dom$features$$features {\n      /**\n       * Some browsers (like IE9) change the order of element attributes, when html\n       * is rendered. This method can be used to check if this behavior happens on\n       * the current browser.\n       * @return {boolean}\n       */\n      static checkAttrOrderChange() {\n        if (jspm_packages$github$alloyui$core$master$dom$features$$attrOrderChange === undefined) {\n          var originalContent = '<div data-component=\"\" data-ref=\"\"></div>';\n          var element = document.createElement('div');\n          jspm_packages$github$alloyui$core$master$dom$dom$$default.append(element, originalContent);\n          jspm_packages$github$alloyui$core$master$dom$features$$attrOrderChange = originalContent !== element.innerHTML;\n        }\n        return jspm_packages$github$alloyui$core$master$dom$features$$attrOrderChange;\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$dom$features$$attrOrderChange;\n\n    var jspm_packages$github$alloyui$core$master$dom$features$$default = jspm_packages$github$alloyui$core$master$dom$features$$features;\n    'use strict';\n\n    /**\n     * Trie data structure. It's useful for quickly storing and finding\n     * information related to strings and their prefixes. See\n     * http://en.wikipedia.org/wiki/Trie.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class jspm_packages$github$alloyui$core$master$structs$Trie$$Trie extends jspm_packages$github$alloyui$core$master$disposable$Disposable$$default {\n      constructor(value) {\n        this.value_ = value;\n        this.children_ = {};\n      }\n\n      /**\n       * Empties the trie of all keys and values.\n       */\n      clear() {\n        this.children_ = {};\n        this.value_ = null;\n      }\n\n      /**\n       * Creates a new trie node.\n       * @return {Trie}\n       */\n      createNewTrieNode() {\n        return new jspm_packages$github$alloyui$core$master$structs$Trie$$Trie();\n      }\n\n      /**\n       * Disposes of this instance's object references.\n       * @override\n       */\n      disposeInternal() {\n        for (var k in this.children_) {\n          this.children_[k].dispose();\n        }\n\n        this.children_ = null;\n        this.value_ = null;\n      }\n\n      /**\n       * Finds the node that represents the given key on this tree.\n       * @param {!(Array|string)} key The key to set the value at.\n       * @param {boolean} createIfMissing Flag indicating if nodes that don't yet\n       *   exist in the searched path should be created.\n       * @return {!Trie}\n       */\n      findKeyNode_(key, createIfMissing) {\n        var node = this;\n\n        key = this.normalizeKey(key);\n\n        for (var i = 0; i < key.length; i++) {\n          node = node.getChild(key[i], createIfMissing);\n          if (!node) {\n            return null;\n          }\n        }\n\n        return node;\n      }\n\n      /**\n       * Returns an array with all the child nodes for this trie.\n       * @return {!Array}\n       */\n      getAllChildren() {\n        var allChildren = [];\n\n        for (var k in this.children_) {\n          allChildren.push(this.children_[k]);\n        }\n\n        return allChildren;\n      }\n\n      /**\n       * Gets the child node for the given key part.\n       * @param {string} keyPart String that can directly access a child of this\n       *   Trie.\n       * @param {boolean} createIfMissing Flag indicating if the child should be\n       *   created if it doesn't exist.\n       * @return {Trie}\n       */\n      getChild(keyPart, createIfMissing) {\n        var child = this.children_[keyPart];\n\n        if (createIfMissing && !child) {\n          child = this.createNewTrieNode();\n          this.setChild(keyPart, child);\n        }\n\n        return child;\n      }\n\n      /**\n       * Gets the value for the given key in the tree.\n       * @param {!(Array|string)} key\n       * @return {*}\n       */\n      getKeyValue(key) {\n        var node = this.findKeyNode_(key);\n\n        return node ? node.getValue() : null;\n      }\n\n      /**\n       * Gets this tree's value.\n       * @return {*}\n       */\n      getValue() {\n        return this.value_;\n      }\n\n      /**\n       * Returns a normalized key, to be used by a Trie.\n       * @param  {!(Array|string)} key The key to be normalized.\n       * @return {!Array} The normalized key.\n       */\n      normalizeKey(key) {\n        return jspm_packages$github$alloyui$core$master$core$$default.isString(key) ? key.split('') : key;\n      }\n\n      /**\n       * Sets the child node for the given key part.\n       * @param {string} keyPart String that can directly access a child of this\n       *   Trie.\n       * @param {Trie} child\n       */\n      setChild(keyPart, child) {\n        this.children_[keyPart] = child;\n      }\n\n      /**\n       * Sets the given key/value pair in the tree. If the key already exists and\n       * `mergeFn` is given, the result of its call will be set as the value\n       * instead.\n       * @param {!(Array|string)} key The key to set the value at.\n       * @param {*} value The value to set.\n       * @param {function(*, *)=} opt_mergeFn Function to be called if the key\n       *   already exists. It will be called with the old and the new values, and\n       *   the key will be set to its return value.\n       */\n      setKeyValue(key, value, opt_mergeFn) {\n        var node = this.findKeyNode_(key, true);\n\n        if (node.getValue() && opt_mergeFn) {\n          value = opt_mergeFn(node.getValue(), value);\n        }\n\n        node.setValue(value);\n\n        return node.getValue();\n      }\n\n      /**\n       * Sets this tree's value.\n       * @param {*} value\n       */\n      setValue(value) {\n        this.value_ = value;\n      }\n    }\n\n    /**\n     * The list of children for this tree.\n     * @type {Object.<string, Trie>}\n     * @protected\n     */\n    jspm_packages$github$alloyui$core$master$structs$Trie$$Trie.prototype.children_ = null;\n\n    /**\n     * The value associated with this tree.\n     * @type {*}\n     * @protected\n     */\n    jspm_packages$github$alloyui$core$master$structs$Trie$$Trie.prototype.value_ = null;\n\n    var jspm_packages$github$alloyui$core$master$structs$Trie$$default = jspm_packages$github$alloyui$core$master$structs$Trie$$Trie;\n    'use strict';\n\n    /**\n     * A trie that can handle wildcards.\n     * @param {*} value\n     * @constructor\n     * @extends {Trie}\n     */\n    class jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$WildcardTrie extends jspm_packages$github$alloyui$core$master$structs$Trie$$default {\n      constructor(value) {\n        super(value);\n      }\n\n      /**\n       * Creates a new trie node.\n       * @return {Trie}\n       * @override\n       */\n      createNewTrieNode() {\n        return new jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$WildcardTrie();\n      }\n\n      /**\n       * Gets all the children that match any of the given list of key parts.\n       * @param {!Array} keyParts\n       * @return {!Array}\n       * @protected\n       */\n      getChildrenMatchingKeyParts_(keyParts) {\n        var matchingChildren = [];\n\n        for (var i = 0; i < keyParts.length; i++) {\n          var child = this.getChild(keyParts[i]);\n          if (child) {\n            matchingChildren.push(child);\n          }\n        }\n\n        return matchingChildren;\n      }\n\n      /**\n       * Gets the value for the given key in the tree.\n       * @param {!(Array|string)} key\n       * @return {!Array}\n       * @override\n       */\n      getKeyValue(key) {\n        key = this.normalizeKey(key);\n\n        var nextKey = key.concat();\n        var keyPart = nextKey.shift();\n\n        if (!keyPart) {\n          return this.getValue() ? [this.getValue()] : [];\n        }\n\n        return this.getKeyValueForChildren_(nextKey, keyPart);\n      }\n\n      /**\n       * Gets the values of a key on the children that match the given key part.\n       * @param  {!Array} key\n       * @param  {string} keyPart\n       * @return {!Array}\n       */\n      getKeyValueForChildren_(key, keyPart) {\n        var values = [];\n\n        var children = this.getMatchingChildren_(keyPart);\n        for (var i = 0; i < children.length; i++) {\n          values = values.concat(children[i].getKeyValue(key));\n        }\n\n        return values;\n      }\n\n      /**\n       * Gets all the children of this trie that match the given key part.\n       * @param  {string} keyPart\n       * @return {!Array.<Trie>}\n       */\n      getMatchingChildren_(keyPart) {\n        var matchingChildren = [];\n\n        if (keyPart === jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$WildcardTrie.TOKEN_SKIP_SINGLE) {\n          matchingChildren = this.getAllChildren();\n        } else {\n          matchingChildren = this.getChildrenMatchingKeyParts_(\n            [keyPart, jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$WildcardTrie.TOKEN_SKIP_SINGLE]\n          );\n        }\n\n        return matchingChildren;\n      }\n    }\n\n    /**\n     * A token representing any single namespace.\n     * @type {string}\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$WildcardTrie.TOKEN_SKIP_SINGLE = '*';\n\n    var jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$default = jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$WildcardTrie;\n    'use strict';\n\n    /**\n     * EventEmitter utility.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class jspm_packages$github$alloyui$core$master$events$EventEmitter$$EventEmitter extends jspm_packages$github$alloyui$core$master$disposable$Disposable$$default {\n      constructor() {\n        /**\n         * The delimiter being used for namespaces.\n         * @type {string}\n         * @protected\n         */\n        this.delimiter_ = '.';\n\n        /**\n         * Holds event listeners scoped by event type.\n         * @type {Trie}\n         * @protected\n         */\n        this.listenersTree_ = new jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$default();\n\n        /**\n         * The maximum number of listeners allowed for each event type. If the number\n         * becomes higher than the max, a warning will be issued.\n         * @type {number}\n         * @protected\n         */\n        this.maxListeners_ = 10;\n\n        /**\n         * The id that will be assigned to the next listener added to this event\n         * emitter.\n         * @type {number}\n         * @protected\n         */\n        this.nextId_ = 1;\n\n        /**\n         * Configuration option which determines if an event facade should be sent\n         * as a param of listeners when emitting events. If set to true, the facade\n         * will be passed as the first argument of the listener.\n         * @type {boolean}\n         * @protected\n         */\n        this.shouldUseFacade_ = false;\n      }\n\n      /**\n       * Adds a listener to the end of the listeners array for the specified events.\n       * @param {!(Array|string)} events\n       * @param {!Function} listener\n       * @return {!EventHandle} Can be used to remove the listener.\n       */\n      addListener(events, listener) {\n        this.validateListener_(listener);\n\n        events = this.normalizeEvents_(events);\n        for (var i = 0; i < events.length; i++) {\n          this.addSingleListener_(events[i], listener);\n        }\n\n        return new jspm_packages$github$alloyui$core$master$events$EventHandle$$default(this, events, listener);\n      }\n\n      /**\n       * Adds a listener to the end of the listeners array for a single event.\n       * @param {string} event\n       * @param {!Function} listener\n       * @param {Function=} opt_origin The original function that was added as a\n       *   listener, if there is any.\n       * @protected\n       */\n      addSingleListener_(event, listener, opt_origin) {\n        this.emit('newListener', event, listener);\n\n        var listeners = this.listenersTree_.setKeyValue(\n          this.splitNamespaces_(event),\n          [{\n            fn: listener,\n            id: this.nextId_++,\n            origin: opt_origin\n          }],\n          this.mergeListenerArrays_\n        );\n\n        if (listeners.length > this.maxListeners_ && !listeners.warned) {\n          console.warn(\n            'Possible EventEmitter memory leak detected. %d listeners added ' +\n            'for event %s. Use emitter.setMaxListeners() to increase limit.',\n            listeners.length,\n            event\n          );\n          listeners.warned = true;\n        }\n      }\n\n      /**\n       * Comparison function between listener objects.\n       * @param {!Object} listener1\n       * @param {!Object} listener2\n       * @return {Number} The difference between the ids of the objects.\n       * @protected\n       */\n      compareListenerObjs_(obj1, obj2) {\n        return obj1.id - obj2.id;\n      }\n\n      /**\n       * Disposes of this instance's object references.\n       * @override\n       */\n      disposeInternal() {\n        this.listenersTree_.dispose();\n        this.listenersTree_ = null;\n      }\n\n      /**\n       * Execute each of the listeners in order with the supplied arguments.\n       * @param {string} event\n       * @param {*} opt_args [arg1], [arg2], [...]\n       * @return {boolean} Returns true if event had listeners, false otherwise.\n       */\n      emit(event) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var listened = false;\n        var listeners = this.listeners(event);\n\n        if (this.getShouldUseFacade()) {\n          var facade = {\n            type: event\n          };\n          args = [facade].concat(args);\n        }\n\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].apply(this, args);\n          listened = true;\n        }\n\n        return listened;\n      }\n\n      /**\n       * Gets the delimiter to be used by namespaces.\n       * @return {string}\n       */\n      getDelimiter() {\n        return this.delimiter_;\n      }\n\n      /**\n       * Gets the configuration option which determines if an event facade should\n       * be sent as a param of listeners when emitting events. If set to true, the\n       * facade will be passed as the first argument of the listener.\n       * @return {boolean}\n       */\n      getShouldUseFacade() {\n        return this.shouldUseFacade_;\n      }\n\n      /**\n       * Returns an array of listeners for the specified event.\n       * @param {string} event\n       * @return {Array} Array of listeners.\n       */\n      listeners(event) {\n        var listenerArrays = this.searchListenerTree_(event);\n        var listeners = [];\n\n        for (var i = 0; i < listenerArrays.length; i++) {\n          listeners = listeners.concat(listenerArrays[i]);\n        }\n\n        if (listenerArrays.length > 1) {\n          // If there was more than one result, we should reorder the listeners,\n          // since we joined them without taking the order into account.\n          listeners.sort(this.compareListenerObjs_);\n        }\n\n        return listeners.map(function(listener) {\n          return listener.fn;\n        });\n      }\n\n      /**\n       * Adds a listener that will be invoked a fixed number of times for the\n       * events. After each event is triggered the specified amount of times, the\n       * listener is removed for it.\n       * @param {!(Array|string)} events\n       * @param {number} amount The amount of times this event should be listened\n       * to.\n       * @param {!Function} listener\n       * @return {!EventHandle} Can be used to remove the listener.\n       */\n      many(events, amount, listener) {\n        events = this.normalizeEvents_(events);\n        for (var i = 0; i < events.length; i++) {\n          this.many_(events[i], amount, listener);\n        }\n\n        return new jspm_packages$github$alloyui$core$master$events$EventHandle$$default(this, events, listener);\n      }\n\n      /**\n       * Adds a listener that will be invoked a fixed number of times for a single\n       * event. After the event is triggered the specified amount of times, the\n       * listener is removed.\n       * @param {string} event\n       * @param {number} amount The amount of times this event should be listened\n       * to.\n       * @param {!Function} listener\n       * @protected\n       */\n      many_(event, amount, listener) {\n        var self = this;\n\n        if (amount <= 0) {\n          return;\n        }\n\n        function handlerInternal() {\n          if (--amount === 0) {\n            self.removeListener(event, handlerInternal);\n          }\n          listener.apply(self, arguments);\n        }\n\n        self.addSingleListener_(event, handlerInternal, listener);\n      }\n\n      /**\n       * Checks if a listener object matches the given listener function. To match,\n       * it needs to either point to that listener or have it as its origin.\n       * @param {!Object} listenerObj\n       * @param {!Function} listener\n       * @return {boolean}\n       * @protected\n       */\n      matchesListener_(listenerObj, listener) {\n        return listenerObj.fn === listener ||\n          (listenerObj.origin && listenerObj.origin === listener);\n      }\n\n      /**\n       * Merges two objects that contain event listeners.\n       * @param  {!Object} arr1\n       * @param  {!Object} arr2\n       * @return {!Object}\n       * @protected\n       */\n      mergeListenerArrays_(arr1, arr2) {\n        for (var i = 0; i < arr2.length; i++) {\n          arr1.push(arr2[i]);\n        }\n        return arr1;\n      }\n\n      /**\n       * Converts the parameter to an array if only one event is given.\n       * @param  {!(Array|string)} events\n       * @return {!Array}\n       * @protected\n       */\n      normalizeEvents_(events) {\n        return jspm_packages$github$alloyui$core$master$core$$default.isString(events) ? [events] : events;\n      }\n\n      /**\n       * Removes a listener for the specified events.\n       * Caution: changes array indices in the listener array behind the listener.\n       * @param {!(Array|string)} events\n       * @param {!Function} listener\n       * @return {!Object} Returns emitter, so calls can be chained.\n       */\n      off(events, listener) {\n        this.validateListener_(listener);\n\n        var listenerArrays = this.searchListenerTree_(events);\n        for (var i = 0; i < listenerArrays.length; i++) {\n          this.removeMatchingListenerObjs_(listenerArrays[i], listener);\n        }\n\n        return this;\n      }\n\n      /**\n       * Adds a listener to the end of the listeners array for the specified events.\n       * @param {!(Array|string)} events\n       * @param {!Function} listener\n       * @return {!EventHandle} Can be used to remove the listener.\n       */\n      on() {\n        return this.addListener.apply(this, arguments);\n      }\n\n      /**\n       * Adds a one time listener for the events. This listener is invoked only the\n       * next time each event is fired, after which it is removed.\n       * @param {!(Array|string)} events\n       * @param {!Function} listener\n       * @return {!EventHandle} Can be used to remove the listener.\n       */\n      once(events, listener) {\n        return this.many(events, 1, listener);\n      }\n\n      /**\n       * Removes all listeners, or those of the specified events. It's not a good\n       * idea to remove listeners that were added elsewhere in the code,\n       * especially when it's on an emitter that you didn't create.\n       * @param {(Array|string)=} opt_events\n       * @return {!Object} Returns emitter, so calls can be chained.\n       */\n      removeAllListeners(opt_events) {\n        if (!opt_events) {\n          this.listenersTree_.clear();\n          return this;\n        }\n\n        return this.removeAllListenersForEvents_(opt_events);\n      }\n\n      /**\n       * Removes all listeners for the specified events.\n       * @param  {!(Array|string)} events\n       * @return {!Object} Returns emitter, so calls can be chained.\n       * @protected\n       */\n      removeAllListenersForEvents_(events) {\n        events = this.normalizeEvents_(events);\n        for (var i = 0; i < events.length; i++) {\n          this.listenersTree_.setKeyValue(this.splitNamespaces_(events[i]), []);\n        }\n\n        return this;\n      }\n\n      /**\n       * Removes all listener objects from the given array that match the given\n       * listener function.\n       * @param {!Array.<Object>} listenerObjects\n       * @param {!Function} listener\n       * @protected\n       */\n      removeMatchingListenerObjs_(listenerObjects, listener) {\n        for (var i = listenerObjects.length - 1; i >= 0; i--) {\n          if (this.matchesListener_(listenerObjects[i], listener)) {\n            listenerObjects.splice(i, 1);\n          }\n        }\n      }\n\n      /**\n       * Removes a listener for the specified events.\n       * Caution: changes array indices in the listener array behind the listener.\n       * @param {!(Array|string)} events\n       * @param {!Function} listener\n       * @return {!Object} Returns emitter, so calls can be chained.\n       */\n      removeListener() {\n        return this.off.apply(this, arguments);\n      }\n\n      /**\n       * Searches the listener tree for the given events.\n       * @param {!(Array|string)} events\n       * @return {!Array.<Array>} An array of listener arrays returned by the tree.\n       * @protected\n       */\n      searchListenerTree_(events) {\n        var values = [];\n\n        events = this.normalizeEvents_(events);\n        for (var i = 0; i < events.length; i++) {\n          values = values.concat(\n            this.listenersTree_.getKeyValue(this.splitNamespaces_(events[i]))\n          );\n        }\n\n        return values;\n      }\n\n      /**\n       * Sets the delimiter to be used by namespaces.\n       * @param {string} delimiter\n       * @return {!Object} Returns emitter, so calls can be chained.\n       */\n      setDelimiter(delimiter) {\n        this.delimiter_ = delimiter;\n        return this;\n      }\n\n      /**\n       * By default EventEmitters will print a warning if more than 10 listeners\n       * are added for a particular event. This is a useful default which helps\n       * finding memory leaks. Obviously not all Emitters should be limited to 10.\n       * This function allows that to be increased. Set to zero for unlimited.\n       * @param {number} max The maximum number of listeners.\n       * @return {!Object} Returns emitter, so calls can be chained.\n       */\n      setMaxListeners(max) {\n        this.maxListeners_ = max;\n        return this;\n      }\n\n      /**\n       * Sets the configuration option which determines if an event facade should\n       * be sent as a param of listeners when emitting events. If set to true, the\n       * facade will be passed as the first argument of the listener.\n       * @param {boolean} shouldUseFacade\n       * @return {!Object} Returns emitter, so calls can be chained.\n       */\n      setShouldUseFacade(shouldUseFacade) {\n        this.shouldUseFacade_ = shouldUseFacade;\n        return this;\n      }\n\n      /**\n       * Splits the event, using the current delimiter.\n       * @param {string} event\n       * @return {!Array}\n       * @protected\n       */\n      splitNamespaces_(event) {\n        return event.split(this.getDelimiter());\n      }\n\n      /**\n       * Checks if the given listener is valid, throwing an exception when it's not.\n       * @param  {*} listener\n       * @protected\n       */\n      validateListener_(listener) {\n        if (!jspm_packages$github$alloyui$core$master$core$$default.isFunction(listener)) {\n          throw new TypeError('Listener must be a function');\n        }\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$events$EventEmitter$$default = jspm_packages$github$alloyui$core$master$events$EventEmitter$$EventEmitter;\n\n    'use strict';\n\n    /**\n     * Provides a more strict interface for Thenables in terms of\n     * http://promisesaplus.com for interop with {@see CancellablePromise}.\n     *\n     * @interface\n     * @extends {IThenable.<TYPE>}\n     * @template TYPE\n     */\n    var jspm_packages$github$alloyui$core$master$promise$Promise$$Thenable = function() {};\n\n    /**\n     * Adds callbacks that will operate on the result of the Thenable, returning a\n     * new child Promise.\n     *\n     * If the Thenable is fulfilled, the {@code onFulfilled} callback will be\n     * invoked with the fulfillment value as argument, and the child Promise will\n     * be fulfilled with the return value of the callback. If the callback throws\n     * an exception, the child Promise will be rejected with the thrown value\n     * instead.\n     *\n     * If the Thenable is rejected, the {@code onRejected} callback will be invoked\n     * with the rejection reason as argument, and the child Promise will be rejected\n     * with the return value of the callback or thrown value.\n     *\n     * @param {?(function(this:THIS, TYPE):\n     *             (RESULT|IThenable.<RESULT>|Thenable))=} opt_onFulfilled A\n     *     function that will be invoked with the fulfillment value if the Promise\n     *     is fullfilled.\n     * @param {?(function(*): *)=} opt_onRejected A function that will be invoked\n     *     with the rejection reason if the Promise is rejected.\n     * @param {THIS=} opt_context An optional context object that will be the\n     *     execution context for the callbacks. By default, functions are executed\n     *     with the default this.\n     * @return {!CancellablePromise.<RESULT>} A new Promise that will receive the\n     *     result of the fulfillment or rejection callback.\n     * @template RESULT,THIS\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$Thenable.prototype.then = function() {};\n\n\n    /**\n     * An expando property to indicate that an object implements\n     * {@code Thenable}.\n     *\n     * {@see addImplementation}.\n     *\n     * @const\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$Thenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n\n    /**\n     * Marks a given class (constructor) as an implementation of Thenable, so\n     * that we can query that fact at runtime. The class must have already\n     * implemented the interface.\n     * Exports a 'then' method on the constructor prototype, so that the objects\n     * also implement the extern {@see Thenable} interface for interop with\n     * other Promise implementations.\n     * @param {function(new:Thenable,...[?])} ctor The class constructor. The\n     *     corresponding class must have already implemented the interface.\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$Thenable.addImplementation = function(ctor) {\n      ctor.prototype.then = ctor.prototype.then;\n      ctor.prototype.$goog_Thenable = true;\n    };\n\n\n    /**\n     * @param {*} object\n     * @return {boolean} Whether a given instance implements {@code Thenable}.\n     *     The class/superclass of the instance must call {@code addImplementation}.\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$Thenable.isImplementedBy = function(object) {\n      if (!object) {\n        return false;\n      }\n      try {\n        return !!object.$goog_Thenable;\n      } catch (e) {\n        // Property access seems to be forbidden.\n        return false;\n      }\n    };\n\n\n    /**\n     * Like bind(), except that a 'this object' is not required. Useful when the\n     * target function is already bound.\n     *\n     * Usage:\n     * var g = partial(f, arg1, arg2);\n     * g(arg3, arg4);\n     *\n     * @param {Function} fn A function to partially apply.\n     * @param {...*} var_args Additional arguments that are partially applied to fn.\n     * @return {!Function} A partially-applied form of the function bind() was\n     *     invoked as a method of.\n     */\n    var jspm_packages$github$alloyui$core$master$promise$Promise$$partial = function(fn) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      return function() {\n        // Clone the array (with slice()) and append additional arguments\n        // to the existing arguments.\n        var newArgs = args.slice();\n        newArgs.push.apply(newArgs, arguments);\n        return fn.apply(this, newArgs);\n      };\n    };\n\n\n    var jspm_packages$github$alloyui$core$master$promise$Promise$$async = {};\n\n\n    /**\n     * Throw an item without interrupting the current execution context.  For\n     * example, if processing a group of items in a loop, sometimes it is useful\n     * to report an error while still allowing the rest of the batch to be\n     * processed.\n     * @param {*} exception\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.throwException = function(exception) {\n      // Each throw needs to be in its own context.\n      jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick(function() {\n        throw exception;\n      });\n    };\n\n\n    /**\n     * Fires the provided callback just before the current callstack unwinds, or as\n     * soon as possible after the current JS execution context.\n     * @param {function(this:THIS)} callback\n     * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n     *     the provided function.\n     * @template THIS\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.run = function(callback, opt_context) {\n      if (!jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueueScheduled_) {\n        // Nothing is currently scheduled, schedule it now.\n        jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick(jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.processWorkQueue);\n        jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueueScheduled_ = true;\n      }\n\n      jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueue_.push(\n        new jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.WorkItem_(callback, opt_context));\n    };\n\n\n    /** @private {boolean} */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueueScheduled_ = false;\n\n\n    /** @private {!Array.<!async.run.WorkItem_>} */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueue_ = [];\n\n    /**\n     * Run any pending async.run work items. This function is not intended\n     * for general use, but for use by entry point handlers to run items ahead of\n     * async.nextTick.\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.processWorkQueue = function() {\n      // NOTE: additional work queue items may be pushed while processing.\n      while (jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueue_.length) {\n        // Don't let the work queue grow indefinitely.\n        var workItems = jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueue_;\n        jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueue_ = [];\n        for (var i = 0; i < workItems.length; i++) {\n          var workItem = workItems[i];\n          try {\n            workItem.fn.call(workItem.scope);\n          } catch (e) {\n            jspm_packages$github$alloyui$core$master$promise$Promise$$async.throwException(e);\n          }\n        }\n      }\n\n      // There are no more work items, reset the work queue.\n      jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.workQueueScheduled_ = false;\n    };\n\n\n    /**\n     * @constructor\n     * @final\n     * @struct\n     * @private\n     *\n     * @param {function()} fn\n     * @param {Object|null|undefined} scope\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.run.WorkItem_ = function(fn, scope) {\n      /** @const */\n      this.fn = fn;\n      /** @const */\n      this.scope = scope;\n    };\n\n\n    /**\n     * Fires the provided callbacks as soon as possible after the current JS\n     * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n     * reasons.\n     * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n     *     possible.\n     * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n     * @template SCOPE\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick = function(callback, opt_context) {\n      var cb = callback;\n      if (opt_context) {\n        cb = callback.bind(opt_context);\n      }\n      cb = jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.wrapCallback_(cb);\n      // Introduced and currently only supported by IE10.\n      if (jspm_packages$github$alloyui$core$master$core$$default.isFunction(window.setImmediate)) {\n        window.setImmediate(cb);\n        return;\n      }\n      // Look for and cache the custom fallback version of setImmediate.\n      if (!jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.setImmediate_) {\n        jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.setImmediate_ = jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.getSetImmediateEmulator_();\n      }\n      jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.setImmediate_(cb);\n    };\n\n\n    /**\n     * Cache for the setImmediate implementation.\n     * @type {function(function())}\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.setImmediate_ = null;\n\n\n    /**\n     * Determines the best possible implementation to run a function as soon as\n     * the JS event loop is idle.\n     * @return {function(function())} The \"setImmediate\" implementation.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.getSetImmediateEmulator_ = function() {\n      // Create a private message channel and use it to postMessage empty messages\n      // to ourselves.\n      var Channel = window.MessageChannel;\n      // If MessageChannel is not available and we are in a browser, implement\n      // an iframe based polyfill in browsers that have postMessage and\n      // document.addEventListener. The latter excludes IE8 because it has a\n      // synchronous postMessage implementation.\n      if (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n        window.postMessage && window.addEventListener) {\n        /** @constructor */\n        Channel = function() {\n          // Make an empty, invisible iframe.\n          var iframe = document.createElement('iframe');\n          iframe.style.display = 'none';\n          iframe.src = '';\n          document.documentElement.appendChild(iframe);\n          var win = iframe.contentWindow;\n          var doc = win.document;\n          doc.open();\n          doc.write('');\n          doc.close();\n          var message = 'callImmediate' + Math.random();\n          var origin = win.location.protocol + '//' + win.location.host;\n          var onmessage = function(e) {\n            // Validate origin and message to make sure that this message was\n            // intended for us.\n            if (e.origin !== origin && e.data !== message) {\n              return;\n            }\n            this.port1.onmessage();\n          }.bind(this);\n          win.addEventListener('message', onmessage, false);\n          this.port1 = {};\n          this.port2 = {\n            postMessage: function() {\n              win.postMessage(message, origin);\n            }\n          };\n        };\n      }\n      if (typeof Channel !== 'undefined') {\n        var channel = new Channel();\n        // Use a fifo linked list to call callbacks in the right order.\n        var head = {};\n        var tail = head;\n        channel.port1.onmessage = function() {\n          head = head.next;\n          var cb = head.cb;\n          head.cb = null;\n          cb();\n        };\n        return function(cb) {\n          tail.next = {\n            cb: cb\n          };\n          tail = tail.next;\n          channel.port2.postMessage(0);\n        };\n      }\n      // Implementation for IE6-8: Script elements fire an asynchronous\n      // onreadystatechange event when inserted into the DOM.\n      if (typeof document !== 'undefined' && 'onreadystatechange' in\n          document.createElement('script')) {\n        return function(cb) {\n          var script = document.createElement('script');\n          script.onreadystatechange = function() {\n            // Clean up and call the callback.\n            script.onreadystatechange = null;\n            script.parentNode.removeChild(script);\n            script = null;\n            cb();\n            cb = null;\n          };\n          document.documentElement.appendChild(script);\n        };\n      }\n      // Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n      // or more.\n      return function(cb) {\n        setTimeout(cb, 0);\n      };\n    };\n\n\n    /**\n     * Helper function that is overrided to protect callbacks with entry point\n     * monitor if the application monitors entry points.\n     * @param {function()} callback Callback function to fire as soon as possible.\n     * @return {function()} The wrapped callback.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick.wrapCallback_ = function(opt_returnValue) {\n      return opt_returnValue;\n    };\n\n\n    /**\n     * Promises provide a result that may be resolved asynchronously. A Promise may\n     * be resolved by being fulfilled or rejected with a value, which will be known\n     * as the fulfillment value or the rejection reason. Whether fulfilled or\n     * rejected, the Promise result is immutable once it is set.\n     *\n     * Promises may represent results of any type, including undefined. Rejection\n     * reasons are typically Errors, but may also be of any type. Closure Promises\n     * allow for optional type annotations that enforce that fulfillment values are\n     * of the appropriate types at compile time.\n     *\n     * The result of a Promise is accessible by calling {@code then} and registering\n     * {@code onFulfilled} and {@code onRejected} callbacks. Once the Promise\n     * resolves, the relevant callbacks are invoked with the fulfillment value or\n     * rejection reason as argument. Callbacks are always invoked in the order they\n     * were registered, even when additional {@code then} calls are made from inside\n     * another callback. A callback is always run asynchronously sometime after the\n     * scope containing the registering {@code then} invocation has returned.\n     *\n     * If a Promise is resolved with another Promise, the first Promise will block\n     * until the second is resolved, and then assumes the same result as the second\n     * Promise. This allows Promises to depend on the results of other Promises,\n     * linking together multiple asynchronous operations.\n     *\n     * This implementation is compatible with the Promises/A+ specification and\n     * passes that specification's conformance test suite. A Closure Promise may be\n     * resolved with a Promise instance (or sufficiently compatible Promise-like\n     * object) created by other Promise implementations. From the specification,\n     * Promise-like objects are known as \"Thenables\".\n     *\n     * @see http://promisesaplus.com/\n     *\n     * @param {function(\n     *             this:RESOLVER_CONTEXT,\n     *             function((TYPE|IThenable.<TYPE>|Thenable)),\n     *             function(*)): void} resolver\n     *     Initialization function that is invoked immediately with {@code resolve}\n     *     and {@code reject} functions as arguments. The Promise is resolved or\n     *     rejected with the first argument passed to either function.\n     * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n     *     resolver function. If unspecified, the resolver function will be executed\n     *     in the default scope.\n     * @constructor\n     * @struct\n     * @final\n     * @implements {Thenable.<TYPE>}\n     * @template TYPE,RESOLVER_CONTEXT\n     */\n    var jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise = function(resolver, opt_context) {\n      /**\n       * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n       * BLOCKED.\n       * @private {CancellablePromise.State_}\n       */\n      this.state_ = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.PENDING;\n\n      /**\n       * The resolved result of the Promise. Immutable once set with either a\n       * fulfillment value or rejection reason.\n       * @private {*}\n       */\n      this.result_ = undefined;\n\n      /**\n       * For Promises created by calling {@code then()}, the originating parent.\n       * @private {CancellablePromise}\n       */\n      this.parent_ = null;\n\n      /**\n       * The list of {@code onFulfilled} and {@code onRejected} callbacks added to\n       * this Promise by calls to {@code then()}.\n       * @private {Array.<CancellablePromise.CallbackEntry_>}\n       */\n      this.callbackEntries_ = null;\n\n      /**\n       * Whether the Promise is in the queue of Promises to execute.\n       * @private {boolean}\n       */\n      this.executing_ = false;\n\n      if (jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n        /**\n         * A timeout ID used when the {@code UNHANDLED_REJECTION_DELAY} is greater\n         * than 0 milliseconds. The ID is set when the Promise is rejected, and\n         * cleared only if an {@code onRejected} callback is invoked for the\n         * Promise (or one of its descendants) before the delay is exceeded.\n         *\n         * If the rejection is not handled before the timeout completes, the\n         * rejection reason is passed to the unhandled rejection handler.\n         * @private {number}\n         */\n        this.unhandledRejectionId_ = 0;\n      } else if (jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n        /**\n         * When the {@code UNHANDLED_REJECTION_DELAY} is set to 0 milliseconds, a\n         * boolean that is set if the Promise is rejected, and reset to false if an\n         * {@code onRejected} callback is invoked for the Promise (or one of its\n         * descendants). If the rejection is not handled before the next timestep,\n         * the rejection reason is passed to the unhandled rejection handler.\n         * @private {boolean}\n         */\n        this.hadUnhandledRejection_ = false;\n      }\n\n      try {\n        var self = this;\n        resolver.call(\n          opt_context, function(value) {\n            self.resolve_(jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.FULFILLED, value);\n          }, function(reason) {\n            self.resolve_(jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED, reason);\n          });\n      } catch (e) {\n        this.resolve_(jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED, e);\n      }\n    };\n\n    /**\n     * @define {number} The delay in milliseconds before a rejected Promise's reason\n     * is passed to the rejection handler. By default, the rejection handler\n     * rethrows the rejection reason so that it appears in the developer console or\n     * {@code window.onerror} handler.\n     *\n     * Rejections are rethrown as quickly as possible by default. A negative value\n     * disables rejection handling entirely.\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY = 0;\n\n\n    /**\n     * The possible internal states for a Promise. These states are not directly\n     * observable to external callers.\n     * @enum {number}\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_ = {\n      /** The Promise is waiting for resolution. */\n      PENDING: 0,\n\n      /** The Promise is blocked waiting for the result of another Thenable. */\n      BLOCKED: 1,\n\n      /** The Promise has been resolved with a fulfillment value. */\n      FULFILLED: 2,\n\n      /** The Promise has been resolved with a rejection reason. */\n      REJECTED: 3\n    };\n\n\n    /**\n     * Typedef for entries in the callback chain. Each call to {@code then},\n     * {@code thenCatch}, or {@code thenAlways} creates an entry containing the\n     * functions that may be invoked once the Promise is resolved.\n     *\n     * @typedef {{\n     *   child: CancellablePromise,\n     *   onFulfilled: function(*),\n     *   onRejected: function(*)\n     * }}\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.CallbackEntry_ = null;\n\n\n    /**\n     * @param {(TYPE|Thenable.<TYPE>|Thenable)=} opt_value\n     * @return {!CancellablePromise.<TYPE>} A new Promise that is immediately resolved\n     *     with the given value.\n     * @template TYPE\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.resolve = function(opt_value) {\n      return new jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise(function(resolve) {\n          resolve(opt_value);\n        });\n    };\n\n\n    /**\n     * @param {*=} opt_reason\n     * @return {!CancellablePromise} A new Promise that is immediately rejected with the\n     *     given reason.\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.reject = function(opt_reason) {\n      return new jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise(function(resolve, reject) {\n          reject(opt_reason);\n        });\n    };\n\n\n    /**\n     * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n     * @return {!CancellablePromise.<TYPE>} A Promise that receives the result of the\n     *     first Promise (or Promise-like) input to complete.\n     * @template TYPE\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.race = function(promises) {\n      return new jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise(function(resolve, reject) {\n          if (!promises.length) {\n            resolve(undefined);\n          }\n          for (var i = 0, promise; (promise = promises[i]); i++) {\n            promise.then(resolve, reject);\n          }\n        });\n    };\n\n\n    /**\n     * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n     * @return {!CancellablePromise.<!Array.<TYPE>>} A Promise that receives a list of\n     *     every fulfilled value once every input Promise (or Promise-like) is\n     *     successfully fulfilled, or is rejected by the first rejection result.\n     * @template TYPE\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.all = function(promises) {\n      return new jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise(function(resolve, reject) {\n          var toFulfill = promises.length;\n          var values = [];\n\n          if (!toFulfill) {\n            resolve(values);\n            return;\n          }\n\n          var onFulfill = function(index, value) {\n            toFulfill--;\n            values[index] = value;\n            if (toFulfill === 0) {\n              resolve(values);\n            }\n          };\n\n          var onReject = function(reason) {\n            reject(reason);\n          };\n\n          for (var i = 0, promise; (promise = promises[i]); i++) {\n            promise.then(jspm_packages$github$alloyui$core$master$promise$Promise$$partial(onFulfill, i), onReject);\n          }\n        });\n    };\n\n\n    /**\n     * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n     * @return {!CancellablePromise.<TYPE>} A Promise that receives the value of\n     *     the first input to be fulfilled, or is rejected with a list of every\n     *     rejection reason if all inputs are rejected.\n     * @template TYPE\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.firstFulfilled = function(promises) {\n      return new jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise(function(resolve, reject) {\n          var toReject = promises.length;\n          var reasons = [];\n\n          if (!toReject) {\n            resolve(undefined);\n            return;\n          }\n\n          var onFulfill = function(value) {\n            resolve(value);\n          };\n\n          var onReject = function(index, reason) {\n            toReject--;\n            reasons[index] = reason;\n            if (toReject === 0) {\n              reject(reasons);\n            }\n          };\n\n          for (var i = 0, promise; (promise = promises[i]); i++) {\n            promise.then(onFulfill, jspm_packages$github$alloyui$core$master$promise$Promise$$partial(onReject, i));\n          }\n        });\n    };\n\n\n    /**\n     * Adds callbacks that will operate on the result of the Promise, returning a\n     * new child Promise.\n     *\n     * If the Promise is fulfilled, the {@code onFulfilled} callback will be invoked\n     * with the fulfillment value as argument, and the child Promise will be\n     * fulfilled with the return value of the callback. If the callback throws an\n     * exception, the child Promise will be rejected with the thrown value instead.\n     *\n     * If the Promise is rejected, the {@code onRejected} callback will be invoked\n     * with the rejection reason as argument, and the child Promise will be rejected\n     * with the return value (or thrown value) of the callback.\n     *\n     * @override\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n      return this.addChildPromise_(\n        jspm_packages$github$alloyui$core$master$core$$default.isFunction(opt_onFulfilled) ? opt_onFulfilled : null,\n        jspm_packages$github$alloyui$core$master$core$$default.isFunction(opt_onRejected) ? opt_onRejected : null,\n        opt_context);\n    };\n    jspm_packages$github$alloyui$core$master$promise$Promise$$Thenable.addImplementation(jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise);\n\n\n    /**\n     * Adds a callback that will be invoked whether the Promise is fulfilled or\n     * rejected. The callback receives no argument, and no new child Promise is\n     * created. This is useful for ensuring that cleanup takes place after certain\n     * asynchronous operations. Callbacks added with {@code thenAlways} will be\n     * executed in the same order with other calls to {@code then},\n     * {@code thenAlways}, or {@code thenCatch}.\n     *\n     * Since it does not produce a new child Promise, cancellation propagation is\n     * not prevented by adding callbacks with {@code thenAlways}. A Promise that has\n     * a cleanup handler added with {@code thenAlways} will be canceled if all of\n     * its children created by {@code then} (or {@code thenCatch}) are canceled.\n     *\n     * @param {function(this:THIS): void} onResolved A function that will be invoked\n     *     when the Promise is resolved.\n     * @param {THIS=} opt_context An optional context object that will be the\n     *     execution context for the callbacks. By default, functions are executed\n     *     in the global scope.\n     * @return {!CancellablePromise.<TYPE>} This Promise, for chaining additional calls.\n     * @template THIS\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.thenAlways = function(onResolved, opt_context) {\n      var callback = function() {\n        try {\n          // Ensure that no arguments are passed to onResolved.\n          onResolved.call(opt_context);\n        } catch (err) {\n          jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.handleRejection_.call(null, err);\n        }\n      };\n\n      this.addCallbackEntry_({\n        child: null,\n        onRejected: callback,\n        onFulfilled: callback\n      });\n      return this;\n    };\n\n\n    /**\n     * Adds a callback that will be invoked only if the Promise is rejected. This\n     * is equivalent to {@code then(null, onRejected)}.\n     *\n     * @param {!function(this:THIS, *): *} onRejected A function that will be\n     *     invoked with the rejection reason if the Promise is rejected.\n     * @param {THIS=} opt_context An optional context object that will be the\n     *     execution context for the callbacks. By default, functions are executed\n     *     in the global scope.\n     * @return {!CancellablePromise} A new Promise that will receive the result of the\n     *     callback.\n     * @template THIS\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.thenCatch = function(onRejected, opt_context) {\n      return this.addChildPromise_(null, onRejected, opt_context);\n    };\n\n\n    /**\n     * Cancels the Promise if it is still pending by rejecting it with a cancel\n     * Error. No action is performed if the Promise is already resolved.\n     *\n     * All child Promises of the canceled Promise will be rejected with the same\n     * cancel error, as with normal Promise rejection. If the Promise to be canceled\n     * is the only child of a pending Promise, the parent Promise will also be\n     * canceled. Cancellation may propagate upward through multiple generations.\n     *\n     * @param {string=} opt_message An optional debugging message for describing the\n     *     cancellation reason.\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.cancel = function(opt_message) {\n      if (this.state_ === jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.PENDING) {\n        jspm_packages$github$alloyui$core$master$promise$Promise$$async.run(function() {\n          var err = new jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.CancellationError(opt_message);\n          this.cancelInternal_(err);\n        }, this);\n      }\n    };\n\n\n    /**\n     * Cancels this Promise with the given error.\n     *\n     * @param {!Error} err The cancellation error.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.cancelInternal_ = function(err) {\n      if (this.state_ === jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.PENDING) {\n        if (this.parent_) {\n          // Cancel the Promise and remove it from the parent's child list.\n          this.parent_.cancelChild_(this, err);\n        } else {\n          this.resolve_(jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED, err);\n        }\n      }\n    };\n\n\n    /**\n     * Cancels a child Promise from the list of callback entries. If the Promise has\n     * not already been resolved, reject it with a cancel error. If there are no\n     * other children in the list of callback entries, propagate the cancellation\n     * by canceling this Promise as well.\n     *\n     * @param {!CancellablePromise} childPromise The Promise to cancel.\n     * @param {!Error} err The cancel error to use for rejecting the Promise.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.cancelChild_ = function(childPromise, err) {\n      if (!this.callbackEntries_) {\n        return;\n      }\n      var childCount = 0;\n      var childIndex = -1;\n\n      // Find the callback entry for the childPromise, and count whether there are\n      // additional child Promises.\n      for (var i = 0, entry; (entry = this.callbackEntries_[i]); i++) {\n        var child = entry.child;\n        if (child) {\n          childCount++;\n          if (child === childPromise) {\n            childIndex = i;\n          }\n          if (childIndex >= 0 && childCount > 1) {\n            break;\n          }\n        }\n      }\n\n      // If the child Promise was the only child, cancel this Promise as well.\n      // Otherwise, reject only the child Promise with the cancel error.\n      if (childIndex >= 0) {\n        if (this.state_ === jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.PENDING && childCount === 1) {\n          this.cancelInternal_(err);\n        } else {\n          var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];\n          this.executeCallback_(\n            callbackEntry, jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED, err);\n        }\n      }\n    };\n\n\n    /**\n     * Adds a callback entry to the current Promise, and schedules callback\n     * execution if the Promise has already been resolved.\n     *\n     * @param {CancellablePromise.CallbackEntry_} callbackEntry Record containing\n     *     {@code onFulfilled} and {@code onRejected} callbacks to execute after\n     *     the Promise is resolved.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.addCallbackEntry_ = function(callbackEntry) {\n      if ((!this.callbackEntries_ || !this.callbackEntries_.length) &&\n        (this.state_ === jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.FULFILLED ||\n        this.state_ === jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED)) {\n        this.scheduleCallbacks_();\n      }\n      if (!this.callbackEntries_) {\n        this.callbackEntries_ = [];\n      }\n      this.callbackEntries_.push(callbackEntry);\n    };\n\n\n    /**\n     * Creates a child Promise and adds it to the callback entry list. The result of\n     * the child Promise is determined by the state of the parent Promise and the\n     * result of the {@code onFulfilled} or {@code onRejected} callbacks as\n     * specified in the Promise resolution procedure.\n     *\n     * @see http://promisesaplus.com/#the__method\n     *\n     * @param {?function(this:THIS, TYPE):\n     *          (RESULT|CancellablePromise.<RESULT>|Thenable)} onFulfilled A callback that\n     *     will be invoked if the Promise is fullfilled, or null.\n     * @param {?function(this:THIS, *): *} onRejected A callback that will be\n     *     invoked if the Promise is rejected, or null.\n     * @param {THIS=} opt_context An optional execution context for the callbacks.\n     *     in the default calling context.\n     * @return {!CancellablePromise} The child Promise.\n     * @template RESULT,THIS\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.addChildPromise_ = function(\n    onFulfilled, onRejected, opt_context) {\n\n      var callbackEntry = {\n        child: null,\n        onFulfilled: null,\n        onRejected: null\n      };\n\n      callbackEntry.child = new jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise(function(resolve, reject) {\n        // Invoke onFulfilled, or resolve with the parent's value if absent.\n        callbackEntry.onFulfilled = onFulfilled ? function(value) {\n          try {\n            var result = onFulfilled.call(opt_context, value);\n            resolve(result);\n          } catch (err) {\n            reject(err);\n          }\n        } : resolve;\n\n        // Invoke onRejected, or reject with the parent's reason if absent.\n        callbackEntry.onRejected = onRejected ? function(reason) {\n          try {\n            var result = onRejected.call(opt_context, reason);\n            if (!jspm_packages$github$alloyui$core$master$core$$default.isDef(result) &&\n              reason instanceof jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.CancellationError) {\n              // Propagate cancellation to children if no other result is returned.\n              reject(reason);\n            } else {\n              resolve(result);\n            }\n          } catch (err) {\n            reject(err);\n          }\n        } : reject;\n      });\n\n      callbackEntry.child.parent_ = this;\n      this.addCallbackEntry_(\n        /** @type {CancellablePromise.CallbackEntry_} */ (callbackEntry));\n      return callbackEntry.child;\n    };\n\n\n    /**\n     * Unblocks the Promise and fulfills it with the given value.\n     *\n     * @param {TYPE} value\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.unblockAndFulfill_ = function(value) {\n      if (this.state_ !== jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.BLOCKED) {\n        throw new Error('CancellablePromise is not blocked.');\n      }\n      this.state_ = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.PENDING;\n      this.resolve_(jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.FULFILLED, value);\n    };\n\n\n    /**\n     * Unblocks the Promise and rejects it with the given rejection reason.\n     *\n     * @param {*} reason\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.unblockAndReject_ = function(reason) {\n      if (this.state_ !== jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.BLOCKED) {\n        throw new Error('CancellablePromise is not blocked.');\n      }\n      this.state_ = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.PENDING;\n      this.resolve_(jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED, reason);\n    };\n\n\n    /**\n     * Attempts to resolve a Promise with a given resolution state and value. This\n     * is a no-op if the given Promise has already been resolved.\n     *\n     * If the given result is a Thenable (such as another Promise), the Promise will\n     * be resolved with the same state and result as the Thenable once it is itself\n     * resolved.\n     *\n     * If the given result is not a Thenable, the Promise will be fulfilled or\n     * rejected with that result based on the given state.\n     *\n     * @see http://promisesaplus.com/#the_promise_resolution_procedure\n     *\n     * @param {CancellablePromise.State_} state\n     * @param {*} x The result to apply to the Promise.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.resolve_ = function(state, x) {\n      if (this.state_ !== jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.PENDING) {\n        return;\n      }\n\n      if (this === x) {\n        state = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED;\n        x = new TypeError('CancellablePromise cannot resolve to itself');\n\n      } else if (jspm_packages$github$alloyui$core$master$promise$Promise$$Thenable.isImplementedBy(x)) {\n        x = /** @type {!Thenable} */ (x);\n        this.state_ = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.BLOCKED;\n        x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);\n        return;\n\n      } else if (jspm_packages$github$alloyui$core$master$core$$default.isObject(x)) {\n        try {\n          var then = x.then;\n          if (jspm_packages$github$alloyui$core$master$core$$default.isFunction(then)) {\n            this.tryThen_(x, then);\n            return;\n          }\n        } catch (e) {\n          state = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED;\n          x = e;\n        }\n      }\n\n      this.result_ = x;\n      this.state_ = state;\n      this.scheduleCallbacks_();\n\n      if (state === jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.REJECTED &&\n        !(x instanceof jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.CancellationError)) {\n        jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.addUnhandledRejection_(this, x);\n      }\n    };\n\n\n    /**\n     * Attempts to call the {@code then} method on an object in the hopes that it is\n     * a Promise-compatible instance. This allows interoperation between different\n     * Promise implementations, however a non-compliant object may cause a Promise\n     * to hang indefinitely. If the {@code then} method throws an exception, the\n     * dependent Promise will be rejected with the thrown value.\n     *\n     * @see http://promisesaplus.com/#point-70\n     *\n     * @param {Thenable} thenable An object with a {@code then} method that may be\n     *     compatible with the Promise/A+ specification.\n     * @param {!Function} then The {@code then} method of the Thenable object.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.tryThen_ = function(thenable, then) {\n      this.state_ = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.BLOCKED;\n      var promise = this;\n      var called = false;\n\n      var resolve = function(value) {\n        if (!called) {\n          called = true;\n          promise.unblockAndFulfill_(value);\n        }\n      };\n\n      var reject = function(reason) {\n        if (!called) {\n          called = true;\n          promise.unblockAndReject_(reason);\n        }\n      };\n\n      try {\n        then.call(thenable, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n\n    /**\n     * Executes the pending callbacks of a resolved Promise after a timeout.\n     *\n     * Section 2.2.4 of the Promises/A+ specification requires that Promise\n     * callbacks must only be invoked from a call stack that only contains Promise\n     * implementation code, which we accomplish by invoking callback execution after\n     * a timeout. If {@code startExecution_} is called multiple times for the same\n     * Promise, the callback chain will be evaluated only once. Additional callbacks\n     * may be added during the evaluation phase, and will be executed in the same\n     * event loop.\n     *\n     * All Promises added to the waiting list during the same browser event loop\n     * will be executed in one batch to avoid using a separate timeout per Promise.\n     *\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.scheduleCallbacks_ = function() {\n      if (!this.executing_) {\n        this.executing_ = true;\n        jspm_packages$github$alloyui$core$master$promise$Promise$$async.run(this.executeCallbacks_, this);\n      }\n    };\n\n\n    /**\n     * Executes all pending callbacks for this Promise.\n     *\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.executeCallbacks_ = function() {\n      while (this.callbackEntries_ && this.callbackEntries_.length) {\n        var entries = this.callbackEntries_;\n        this.callbackEntries_ = [];\n\n        for (var i = 0; i < entries.length; i++) {\n          this.executeCallback_(entries[i], this.state_, this.result_);\n        }\n      }\n      this.executing_ = false;\n    };\n\n\n    /**\n     * Executes a pending callback for this Promise. Invokes an {@code onFulfilled}\n     * or {@code onRejected} callback based on the resolved state of the Promise.\n     *\n     * @param {!CancellablePromise.CallbackEntry_} callbackEntry An entry containing the\n     *     onFulfilled and/or onRejected callbacks for this step.\n     * @param {CancellablePromise.State_} state The resolution status of the Promise,\n     *     either FULFILLED or REJECTED.\n     * @param {*} result The resolved result of the Promise.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.executeCallback_ = function(\n    callbackEntry, state, result) {\n      if (state === jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.State_.FULFILLED) {\n        callbackEntry.onFulfilled(result);\n      } else {\n        this.removeUnhandledRejection_();\n        callbackEntry.onRejected(result);\n      }\n    };\n\n\n    /**\n     * Marks this rejected Promise as having being handled. Also marks any parent\n     * Promises in the rejected state as handled. The rejection handler will no\n     * longer be invoked for this Promise (if it has not been called already).\n     *\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.prototype.removeUnhandledRejection_ = function() {\n      var p;\n      if (jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n        for (p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n          clearTimeout(p.unhandledRejectionId_);\n          p.unhandledRejectionId_ = 0;\n        }\n      } else if (jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n        for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n          p.hadUnhandledRejection_ = false;\n        }\n      }\n    };\n\n\n    /**\n     * Marks this rejected Promise as unhandled. If no {@code onRejected} callback\n     * is called for this Promise before the {@code UNHANDLED_REJECTION_DELAY}\n     * expires, the reason will be passed to the unhandled rejection handler. The\n     * handler typically rethrows the rejection reason so that it becomes visible in\n     * the developer console.\n     *\n     * @param {!CancellablePromise} promise The rejected Promise.\n     * @param {*} reason The Promise rejection reason.\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.addUnhandledRejection_ = function(promise, reason) {\n      if (jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n        promise.unhandledRejectionId_ = setTimeout(function() {\n          jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.handleRejection_.call(null, reason);\n        }, jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY);\n\n      } else if (jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n        promise.hadUnhandledRejection_ = true;\n        jspm_packages$github$alloyui$core$master$promise$Promise$$async.run(function() {\n          if (promise.hadUnhandledRejection_) {\n            jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.handleRejection_.call(null, reason);\n          }\n        });\n      }\n    };\n\n\n    /**\n     * A method that is invoked with the rejection reasons for Promises that are\n     * rejected but have no {@code onRejected} callbacks registered yet.\n     * @type {function(*)}\n     * @private\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.handleRejection_ = jspm_packages$github$alloyui$core$master$promise$Promise$$async.throwException;\n\n\n    /**\n     * Sets a handler that will be called with reasons from unhandled rejected\n     * Promises. If the rejected Promise (or one of its descendants) has an\n     * {@code onRejected} callback registered, the rejection will be considered\n     * handled, and the rejection handler will not be called.\n     *\n     * By default, unhandled rejections are rethrown so that the error may be\n     * captured by the developer console or a {@code window.onerror} handler.\n     *\n     * @param {function(*)} handler A function that will be called with reasons from\n     *     rejected Promises. Defaults to {@code async.throwException}.\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.setUnhandledRejectionHandler = function(handler) {\n      jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.handleRejection_ = handler;\n    };\n\n\n\n    /**\n     * Error used as a rejection reason for canceled Promises.\n     *\n     * @param {string=} opt_message\n     * @constructor\n     * @extends {Error}\n     * @final\n     */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.CancellationError = class extends Error {\n      constructor(opt_message) {\n         super(opt_message);\n\n         if (opt_message) {\n           this.message = opt_message;\n         }\n       }\n    };\n\n    /** @override */\n    jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise.CancellationError.prototype.name = 'cancel';\n\n    'use strict';\n\n    /**\n     * Attribute adds support for having object properties that can be watched for\n     * changes, as well as configured with validators, setters and other options.\n     * See the `addAttr` method for a complete list of available attribute\n     * configuration options.\n     * @constructor\n     * @extends {EventEmitter}\n     */\n    class jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute extends jspm_packages$github$alloyui$core$master$events$EventEmitter$$default {\n      constructor(opt_config) {\n        super();\n\n        /**\n         * Object with information about the batch event that is currently\n         * scheduled, or null if none is.\n         * @type {Object}\n         * @protected\n         */\n        this.scheduledBatchData_ = null;\n\n        /**\n         * Object that contains information about all this instance's attributes.\n         * @type {!Object<string, !Object>}\n         * @protected\n         */\n        this.attrsInfo_ = {};\n\n        this.mergeInvalidAttrs_();\n        this.addAttrsFromStaticHint_(opt_config);\n      }\n\n      /**\n       * Adds the given attribute.\n       * @param {string} name The name of the new attribute.\n       * @param {Object.<string, *>=} config The configuration object for the new attribute.\n       *   This object can have the following keys:\n       *   initOnly - Ignores writes to the attribute after it's been initialized. That is,\n       *   allows writes only when adding the attribute for the first time.\n       *   setter - Function for normalizing new attribute values. It receives the new value\n       *   that was set, and returns the value that should be stored.\n       *   validator - Function that validates new attribute values. When it returns false,\n       *   the new value is ignored.\n       *   value - The default value for this attribute. Note that setting this to an object\n       *   will cause all attribute instances to use the same reference to the object. To\n       *   have each attribute instance use a different reference, use the `valueFn` option\n       *   instead.\n       *   valueFn - A function that returns the default value for this attribute.\n       * @param {*} initialValue The initial value of the new attribute. This value has higher\n       *   precedence than the default value specified in this attribute's configuration.\n       */\n      addAttr(name, config, initialValue) {\n        this.assertValidAttrName_(name);\n\n        this.attrsInfo_[name] = {\n          config: config || {},\n          initialValue: initialValue,\n          state: jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.UNINITIALIZED\n        };\n\n        Object.defineProperty(this, name, {\n          configurable: true,\n          get: this.getAttrValue_.bind(this, name),\n          set: this.setAttrValue_.bind(this, name)\n        });\n      }\n\n      /**\n       * Adds the given attributes.\n       * @param {!Object.<string, !Object>} configs An object that maps the names of all the\n       *   attributes to be added to their configuration objects.\n       * @param {!Object.<string, *>} initialValues An object that maps the names of\n       *   attributes to their initial values. These values have higher precedence than the\n       *   default values specified in the attribute configurations.\n       */\n      addAttrs(configs, initialValues) {\n        initialValues = initialValues || {};\n        var names = Object.keys(configs);\n\n        for (var i = 0; i < names.length; i++) {\n          this.addAttr(names[i], configs[names[i]], initialValues[names[i]]);\n        }\n      }\n\n      /**\n       * Adds attributes from super classes static hint `MyClass.ATTRS = {};`.\n       * @param {!Object.<string, !Object>} configs An object that maps the names\n       *     of all the attributes to be added to their configuration objects.\n       * @protected\n       */\n      addAttrsFromStaticHint_(config) {\n        jspm_packages$github$alloyui$core$master$core$$default.mergeSuperClassesProperty(this.constructor, 'ATTRS', this.mergeAttrs_);\n        this.addAttrs(this.constructor.ATTRS_MERGED, config);\n      }\n\n      /**\n       * Checks that the given name is a valid attribute name. If it's not, an error\n       * will be thrown.\n       * @param {string} name The name to be validated.\n       * @throws {Error}\n       */\n      assertValidAttrName_(name) {\n        if (this.constructor.INVALID_ATTRS_MERGED[name]) {\n          throw new Error('It\\'s not allowed to create an attribute with the name \"' + name + '\".');\n        }\n      }\n\n      /**\n       * Checks if the it's allowed to write on the requested attribute.\n       * @param {string} name The name of the attribute.\n       * @return {Boolean}\n       * @protected\n       */\n      canWrite_(name) {\n        this.initAttr_(name);\n\n        var info = this.attrsInfo_[name];\n        return !info.config.initOnly || info.state !== jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.INITIALIZED;\n      }\n\n      /**\n       * Calls the requested function, running the appropriate code for when it's\n       * passed as an actual function object or just the function's name.\n       * @param {!Function|string} fn Function, or name of the function to run.\n       * @param {...*} A variable number of optional parameters to be passed to the\n       *   function that will be called.\n       * @return {*} The return value of the called function.\n       * @protected\n       */\n      callFunction_(fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        if (jspm_packages$github$alloyui$core$master$core$$default.isString(fn)) {\n          return this[fn].apply(this, args);\n        } else if (jspm_packages$github$alloyui$core$master$core$$default.isFunction(fn)) {\n          return fn.apply(this, args);\n        }\n      }\n\n      /**\n       * Calls the attribute's setter, if there is one.\n       * @param {string} name The name of the attribute.\n       * @param {*} value The value to be set.\n       * @return {*} The final value to be set.\n       */\n      callSetter_(name, value) {\n        var info = this.attrsInfo_[name];\n        var config = info.config;\n        if (config.setter) {\n          value = this.callFunction_(config.setter, value);\n        }\n        return value;\n      }\n\n      /**\n       * Calls the attribute's validator, if there is one.\n       * @param {string} name The name of the attribute.\n       * @param {*} value The value to be validated.\n       * @return {Boolean} Flag indicating if value is valid or not.\n       */\n      callValidator_(name, value) {\n        var info = this.attrsInfo_[name];\n        var config = info.config;\n        if (config.validator) {\n          return this.callFunction_(config.validator, value);\n        }\n        return true;\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        super.disposeInternal();\n        this.attrsInfo_ = null;\n        this.scheduledBatchData_ = null;\n      }\n\n      /**\n       * Emits the attribute change batch event.\n       * @protected\n       */\n      emitBatchEvent_() {\n        if (!this.isDisposed()) {\n          var data = this.scheduledBatchData_;\n          this.scheduledBatchData_ = null;\n          this.emit('attrsChanged', data);\n        }\n      }\n\n      /**\n       * Returns an object that maps all attribute names to their values.\n       * @return {Object.<string, *>}\n       */\n      getAttrs() {\n        var attrsMap = {};\n        var names = this.getAttrNames();\n\n        for (var i = 0; i < names.length; i++) {\n          attrsMap[names[i]] = this[names[i]];\n        }\n\n        return attrsMap;\n      }\n\n      /**\n       * Returns an array with all attribute names.\n       * @return {Array.<string>}\n       */\n      getAttrNames() {\n        return Object.keys(this.attrsInfo_);\n      }\n\n      /**\n       * Gets the value of the specified attribute. This is passed as that attribute's\n       * getter to the `Object.defineProperty` call inside the `addAttr` method.\n       * @param {string} name The name of the attribute.\n       * @return {*}\n       * @protected\n       */\n      getAttrValue_(name) {\n        this.initAttr_(name);\n\n        return this.attrsInfo_[name].value;\n      }\n\n      /**\n       * Informs of changes to an attributes value through an event. Won't trigger\n       * the event if the value hasn't changed or if it's being initialized.\n       * @param {string} name The name of the attribute.\n       * @param {*} prevVal The previous value of the attribute.\n       * @protected\n       */\n      informChange_(name, prevVal) {\n        if (this.shouldInformChange_(name, prevVal)) {\n          var data = {\n            attrName: name,\n            newVal: this[name],\n            prevVal: prevVal\n          };\n          this.emit(name + 'Changed', data);\n          this.scheduleBatchEvent_(data);\n        }\n      }\n\n      /**\n       * Initializes the specified attribute, giving it a first value.\n       * @param {string} name The name of the attribute.\n       * @protected\n       */\n      initAttr_(name) {\n        var info = this.attrsInfo_[name];\n        if (info.state !== jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.UNINITIALIZED) {\n          return;\n        }\n\n        info.state = jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.INITIALIZING;\n        this.setInitialValue_(name);\n        if (!info.written) {\n          info.state = jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.INITIALIZING_DEFAULT;\n          this.setDefaultValue_(name);\n        }\n        info.state = jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.INITIALIZED;\n      }\n\n      /**\n       * Merges an array of values for the ATTRS property into a single object.\n       * @param {!Array} values The values to be merged.\n       * @return {!Object} The merged value.\n       * @protected\n       */\n      mergeAttrs_(values) {\n        return jspm_packages$github$alloyui$core$master$object$object$$default.mixin.apply(null, [{}].concat(values.reverse()));\n      }\n\n      /**\n       * Merges the values of the `INVALID_ATTRS` static for the whole hierarchy of\n       * the current instance.\n       * @protected\n       */\n      mergeInvalidAttrs_() {\n        jspm_packages$github$alloyui$core$master$core$$default.mergeSuperClassesProperty(this.constructor, 'INVALID_ATTRS', function(values) {\n          return jspm_packages$github$alloyui$core$master$array$array$$default.flatten(values).reduce(function(merged, val) {\n            if (val) {\n              merged[val] = true;\n            }\n            return merged;\n          }, {});\n        });\n      }\n\n      /**\n       * Removes the requested attribute.\n       * @param {string} name The name of the attribute.\n       */\n      removeAttr(name) {\n        this.attrsInfo_[name] = null;\n        delete this[name];\n      }\n\n      /**\n       * Schedules an attribute change batch event to be emitted asynchronously.\n       * @param {!Object} attrChangeData Information about an attribute's update.\n       * @protected\n       */\n      scheduleBatchEvent_(attrChangeData) {\n        if (!this.scheduledBatchData_) {\n          jspm_packages$github$alloyui$core$master$promise$Promise$$async.nextTick(this.emitBatchEvent_, this);\n          this.scheduledBatchData_ = {\n            changes: {}\n          };\n        }\n\n        var name = attrChangeData.attrName;\n        var changes = this.scheduledBatchData_.changes;\n        if (changes[name]) {\n          changes[name].newVal = attrChangeData.newVal;\n        } else {\n          changes[name] = attrChangeData;\n        }\n      }\n\n      /**\n       * Sets the value of all the specified attributes.\n       * @param {!Object.<string,*>} values A map of attribute names to the values they\n       *   should be set to.\n       */\n      setAttrs(values) {\n        var names = Object.keys(values);\n\n        for (var i = 0; i < names.length; i++) {\n          this[names[i]] = values[names[i]];\n        }\n      }\n\n      /**\n       * Sets the value of the specified attribute. This is passed as that attribute's\n       * setter to the `Object.defineProperty` call inside the `addAttr` method.\n       * @param {string} name The name of the attribute.\n       * @param {*} value The new value of the attribute.\n       * @protected\n       */\n      setAttrValue_(name, value) {\n        if (!this.canWrite_(name) || !this.validateAttrValue_(name, value)) {\n          return;\n        }\n\n        var info = this.attrsInfo_[name];\n        var prevVal = this[name];\n        info.value = this.callSetter_(name, value);\n        info.written = true;\n        this.informChange_(name, prevVal);\n      }\n\n      /**\n       * Sets the default value of the requested attribute.\n       * @param {string} name The name of the attribute.\n       * @return {*}\n       */\n      setDefaultValue_(name) {\n        var config = this.attrsInfo_[name].config;\n\n        if (config.value !== undefined) {\n          this[name] = config.value;\n        } else {\n          this[name] = this.callFunction_(config.valueFn);\n        }\n      }\n\n      /**\n       * Sets the initial value of the requested attribute.\n       * @param {string} name The name of the attribute.\n       * @return {*}\n       */\n      setInitialValue_(name) {\n        var info = this.attrsInfo_[name];\n        if (info.initialValue !== undefined) {\n          this[name] = info.initialValue;\n          info.initialValue = undefined;\n        }\n      }\n\n      /**\n       * Checks if we should inform about an attributes update. Updates are ignored\n       * during attribute initialization. Otherwise, updates to primitive values\n       * are only informed when the new value is different from the previous\n       * one. Updates to objects (which includes functions and arrays) are always\n       * informed outside initialization though, since we can't be sure if all of\n       * the internal data has stayed the same.\n       * @param {string} name The name of the attribute.\n       * @param {*} prevVal The previous value of the attribute.\n       * @return {Boolean}\n       */\n      shouldInformChange_(name, prevVal) {\n        var info = this.attrsInfo_[name];\n        return (info.state === jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.INITIALIZED) &&\n        (jspm_packages$github$alloyui$core$master$core$$default.isObject(prevVal) || prevVal !== this[name]);\n      }\n\n      /**\n       * Validates the attribute's value, which includes calling the validator defined\n       * in the attribute's configuration object, if there is one.\n       * @param {string} name The name of the attribute.\n       * @param {*} value The value to be validated.\n       * @return {Boolean} Flag indicating if value is valid or not.\n       */\n      validateAttrValue_(name, value) {\n        var info = this.attrsInfo_[name];\n\n        return info.state === jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States.INITIALIZING_DEFAULT ||\n          this.callValidator_(name, value);\n      }\n    }\n\n    /**\n     * A list with attribute names that will automatically be rejected as invalid.\n     * Subclasses can define their own invalid attributes by setting this static\n     * on their constructors, which will be merged together and handled automatically.\n     * @type {!Array<string>}\n     */\n    jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.INVALID_ATTRS = ['attrs'];\n\n    /**\n     * Constants that represent the states that an attribute can be in.\n     * @type {!Object}\n     */\n    jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute.States = {\n      UNINITIALIZED: 0,\n      INITIALIZING: 1,\n      INITIALIZING_DEFAULT: 2,\n      INITIALIZED: 3\n    };\n\n    var jspm_packages$github$alloyui$core$master$attribute$Attribute$$default = jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute;\n    'use strict';\n\n    /**\n     * EventEmitterProxy utility. It's responsible for linking two EventEmitter\n     * instances together, emitting events from the first emitter through the\n     * second one. That means that listening to a supported event on the target\n     * emitter will mean listening to it on the origin emitter as well.\n     * @param {EventEmitter | Element} originEmitter Events originated on this emitter\n     *   will be fired for the target emitter's listeners as well. Can be either a real\n     *   EventEmitter instance or a DOM element.\n     * @param {EventEmitter} targetEmitter Event listeners attached to this emitter\n     *   will also be triggered when the event is fired by the origin emitter.\n     * @param {Object} opt_blacklist Optional blacklist of events that should not be\n     *   proxied.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class jspm_packages$github$alloyui$core$master$events$EventEmitterProxy$$EventEmitterProxy extends jspm_packages$github$alloyui$core$master$disposable$Disposable$$default {\n      constructor(originEmitter, targetEmitter, opt_blacklist) {\n        /**\n         * Map of events that should not be proxied.\n         * @type {Object}\n         * @protected\n         */\n       this.blacklist_ = opt_blacklist || {};\n\n        /**\n         * The origin emitter. This emitter's events will be proxied through the\n         * target emitter.\n         * @type {EventEmitter}\n         * @protected\n         */\n        this.originEmitter_ = originEmitter;\n\n        /**\n         * Holds a map of events from the origin emitter that are already being proxied.\n         * @type {Object}\n         * @protected\n         */\n        this.proxiedEvents_ = {};\n\n        /**\n         * The target emitter. This emitter will emit all events that come from\n         * the origin emitter.\n         * @type {EventEmitter}\n         * @protected\n         */\n        this.targetEmitter_ = targetEmitter;\n\n        this.startProxy_();\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        var removeFnName = jspm_packages$github$alloyui$core$master$core$$default.isElement(this.originEmitter_) ? 'removeEventListener' : 'removeListener';\n        for (var event in this.proxiedEvents_) {\n          this.originEmitter_[removeFnName](event, this.proxiedEvents_[event]);\n        }\n\n        this.proxiedEvents_ = null;\n        this.originEmitter_ = null;\n        this.targetEmitter_ = null;\n      }\n\n      /**\n       * Proxies the given event from the origin to the target emitter.\n       * @param {string} event\n       */\n      proxyEvent_(event) {\n        if (!this.shouldProxyEvent_(event)) {\n          return;\n        }\n\n        var self = this;\n        this.proxiedEvents_[event] = function() {\n          var args = [event].concat(Array.prototype.slice.call(arguments, 0));\n          self.targetEmitter_.emit.apply(self.targetEmitter_, args);\n        };\n\n        var addFnName = jspm_packages$github$alloyui$core$master$core$$default.isElement(this.originEmitter_) ? 'addEventListener' : 'on';\n        this.originEmitter_[addFnName](event, this.proxiedEvents_[event]);\n      }\n\n      /**\n       * Checks if the given event should be proxied.\n       * @param {string} event\n       * @return {boolean}\n       * @protected\n       */\n      shouldProxyEvent_(event) {\n        return !this.proxiedEvents_[event] && !this.blacklist_[event] &&\n          (!jspm_packages$github$alloyui$core$master$core$$default.isElement(this.originEmitter_) || jspm_packages$github$alloyui$core$master$dom$dom$$default.supportsEvent(this.originEmitter_, event));\n      }\n\n      /**\n       * Starts proxying all events from the origin to the target emitter.\n       * @protected\n       */\n      startProxy_() {\n        this.targetEmitter_.on('newListener', this.proxyEvent_.bind(this));\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$events$EventEmitterProxy$$default = jspm_packages$github$alloyui$core$master$events$EventEmitterProxy$$EventEmitterProxy;\n    'use strict';\n\n    /**\n     * EventHandler utility. It's useful for easily removing a group of\n     * listeners from different EventEmitter instances.\n     * @constructor\n     * @extends {Disposable}\n     */\n    class jspm_packages$github$alloyui$core$master$events$EventHandler$$EventHandler extends jspm_packages$github$alloyui$core$master$disposable$Disposable$$default {\n        constructor() {\n          /**\n           * An array that holds the added event handles, so the listeners can be\n           * removed later.\n           * @type {Array.<EventHandle>}\n           * @protected\n           */\n          this.eventHandles_ = [];\n        }\n\n        /**\n         * Adds event handles to be removed later through the `removeAllListeners`\n         * method.\n         * @param {...(!EventHandle)} var_args\n         */\n        add() {\n          for (var i = 0; i < arguments.length; i++) {\n            this.eventHandles_.push(arguments[i]);\n          }\n        }\n\n        /**\n         * Disposes of this instance's object references.\n         * @override\n         */\n        disposeInternal() {\n          this.eventHandles_ = null;\n        }\n\n        /**\n         * Removes all listeners that have been added through the `add` method.\n         */\n        removeAllListeners() {\n          for (var i = 0; i < this.eventHandles_.length; i++) {\n            this.eventHandles_[i].removeListener();\n          }\n\n          this.eventHandles_ = [];\n        }\n    }\n\n    var jspm_packages$github$alloyui$core$master$events$EventHandler$$default = jspm_packages$github$alloyui$core$master$events$EventHandler$$EventHandler;\n    'use strict';\n\n    /**\n     * Component collects common behaviors to be followed by UI components, such\n     * as Lifecycle, bounding box element creation, CSS classes management,\n     * events encapsulation and surfaces support. Surfaces are an area of the\n     * component that can have information rendered into it. A component\n     * manages multiple surfaces. Surfaces are only rendered when its content is\n     * modified, representing render performance gains. For each surface, render\n     * attributes could be associated, when the render context of a surface gets\n     * modified the component Lifecycle re-paints the modified surface\n     * automatically.\n     *\n     * Example:\n     *\n     * <code>\n     * class CustomComponent extends Component {\n     *   constructor(config) {\n     *     super(config);\n     *   }\n     *\n     *   created() {\n     *   }\n     *\n     *   decorateInternal() {\n     *   }\n     *\n     *   renderInternal() {\n     *     this.element.appendChild(this.getSurfaceElement('header'));\n     *     this.element.appendChild(this.getSurfaceElement('bottom'));\n     *   }\n     *\n     *   getSurfaceContent(surfaceId) {\n     *   }\n     *\n     *   attached() {\n     *   }\n     *\n     *   detached() {\n     *   }\n     * }\n     *\n     * CustomComponent.ATTRS = {\n     *   title: { value: 'Title' },\n     *   fontSize: { value: '10px' }\n     * };\n     *\n     * CustomComponent.SURFACES = {\n     *   header: { renderAttrs: ['title', 'fontSize'] },\n     *   bottom: { renderAttrs: ['fontSize'] }\n     * };\n     * </code>\n     *\n     * @param {!Object} opt_config An object with the initial values for this component's\n     *   attributes.\n     * @constructor\n     * @extends {Attribute}\n     */\n    class jspm_packages$github$alloyui$core$master$component$Component$$Component extends jspm_packages$github$alloyui$core$master$attribute$Attribute$$default {\n      constructor(opt_config) {\n        super(opt_config);\n\n        /**\n         * Whether the element is being decorated.\n         * @type {boolean}\n         * @protected\n         */\n        this.decorating_ = false;\n\n        /**\n         * Holds events that were listened through the `delegate` Component function.\n         * @type {EventHandler}\n         * @protected\n         */\n        this.delegateEventHandler_ = null;\n\n        /**\n         * Instance of `EventEmitterProxy` which proxies events from the component's\n         * element to the component itself.\n         * @type {EventEmitterProxy}\n         * @protected\n         */\n        this.elementEventProxy_ = null;\n\n        /**\n         * Whether the element is in document.\n         * @type {boolean}\n         */\n        this.inDocument = false;\n\n        /**\n         * Maps that index the surfaces instances by the surface id.\n         * @type {Object}\n         * @default null\n         * @protected\n         */\n        this.surfaces_ = null;\n\n        /**\n         * Whether the element was rendered.\n         * @type {boolean}\n         */\n        this.wasRendered = false;\n\n        /**\n         * Whether the element was decorated.\n         * @type {boolean}\n         */\n        this.wasDecorated = false;\n\n        jspm_packages$github$alloyui$core$master$core$$default.mergeSuperClassesProperty(this.constructor, 'ELEMENT_CLASSES', this.mergeElementClasses_);\n        jspm_packages$github$alloyui$core$master$core$$default.mergeSuperClassesProperty(this.constructor, 'ELEMENT_TAG_NAME', jspm_packages$github$alloyui$core$master$array$array$$default.firstDefinedValue);\n        jspm_packages$github$alloyui$core$master$core$$default.mergeSuperClassesProperty(this.constructor, 'SURFACE_TAG_NAME', jspm_packages$github$alloyui$core$master$array$array$$default.firstDefinedValue);\n        this.addSurfacesFromStaticHint_();\n\n        this.elementEventProxy_ = new jspm_packages$github$alloyui$core$master$events$EventEmitterProxy$$default(this.element, this);\n        this.delegateEventHandler_ = new jspm_packages$github$alloyui$core$master$events$EventHandler$$default();\n\n        this.created_();\n      }\n\n      /**\n       * Registers a surface to the component. Surface elements are not\n       * automatically appended to the component element.\n       * @param {string} surfaceId The surface id to be registered.\n       * @param {Object=} opt_config Optional surface configuration.\n       * @chainable\n       */\n      addSurface(surfaceId, opt_config) {\n        this.surfaces_[surfaceId] = opt_config || {};\n        this.cacheSurfaceRenderAttrs_(surfaceId);\n        return this;\n      }\n\n      /**\n       * Registers surfaces to the component. Surface elements are not\n       * automatically appended to the component element.\n       * @param {!Object.<string, Object=>} configs An object that maps the names\n       *     of all the surfaces to be added to their configuration objects.\n       * @chainable\n       */\n      addSurfaces(configs) {\n        for (var surfaceId in configs) {\n          this.addSurface(surfaceId, configs[surfaceId]);\n        }\n        return this;\n      }\n\n      /**\n       * Adds surfaces from super classes static hint.\n       * @protected\n       */\n      addSurfacesFromStaticHint_() {\n        jspm_packages$github$alloyui$core$master$core$$default.mergeSuperClassesProperty(this.constructor, 'SURFACES', this.mergeSurfaces_);\n        this.surfaces_ = {};\n        this.surfacesRenderAttrs_ = {};\n\n        var configs = this.constructor.SURFACES_MERGED;\n        for (var surfaceId in configs) {\n          this.addSurface(surfaceId, jspm_packages$github$alloyui$core$master$object$object$$default.mixin({}, configs[surfaceId]));\n        }\n      }\n\n      /**\n       * Invokes the attached Lifecycle. When attached, the component element is\n       * appended to the DOM and any other action to be performed must be\n       * implemented in this method, such as, binding DOM events. A component can\n       * be re-attached multiple times.\n       * @param {(string|Element)=} opt_parentElement Optional parent element\n       *     to render the component.\n       * @param {(string|Element)=} opt_siblingElement Optional sibling element\n       *     to render the component before it. Relevant when the component needs\n       *     to be rendered before an existing element in the DOM, e.g.\n       *     `component.render(null, existingElement)`.\n       * @protected\n       * @chainable\n       */\n      attach(opt_parentElement, opt_siblingElement) {\n        if (!this.inDocument) {\n          this.renderElement_(opt_parentElement, opt_siblingElement);\n          this.inDocument = true;\n          this.attached();\n        }\n        return this;\n      }\n\n      /**\n       * Lifecycle. When attached, the component element is appended to the DOM\n       * and any other action to be performed must be implemented in this method,\n       * such as, binding DOM events. A component can be re-attached multiple\n       * times, therefore the undo behavior for any action performed in this phase\n       * must be implemented on the detach phase.\n       */\n      attached() {\n      }\n\n      /**\n       * Caches surface render attributes into a O(k) flat map representation.\n       * Relevant for performance to calculate the surfaces group that were\n       * modified by attributes mutation.\n       * @param {string} surfaceId The surface id to be cached into the flat map.\n       * @protected\n       */\n      cacheSurfaceRenderAttrs_(surfaceId) {\n        var attrs = this.getSurface(surfaceId).renderAttrs;\n        for (var i in attrs) {\n          this.surfacesRenderAttrs_[attrs[i]] = this.surfacesRenderAttrs_[attrs[i]] || {};\n          this.surfacesRenderAttrs_[attrs[i]][surfaceId] = true;\n        }\n      }\n\n      /**\n       * Clears the surfaces content cache.\n       * @protected\n       */\n      clearSurfacesCache_() {\n        for (var surfaceId in this.surfaces_) {\n          this.getSurface(surfaceId).cacheState = jspm_packages$github$alloyui$core$master$component$Component$$Component.Cache.NOT_INITIALIZED;\n        }\n      }\n\n      /**\n       * Compresses the requested html for caching purposes.\n       * @param {string} htmlString The html to be compressed.\n       * @return {string} The compressed html.\n       * @protected\n       */\n      compressHtmlForCache_(htmlString) {\n        return jspm_packages$github$alloyui$core$master$html$html$$default.compress(htmlString);\n      }\n\n      /**\n       * Computes the cache state for the surface content. If value is string, the\n       * cache state is represented by its hashcode.\n       * @param {Object} value The value to calculate the cache state.\n       * @return {Object} The computed cache state.\n       * @protected\n       */\n      computeSurfaceCacheState_(value) {\n        if (jspm_packages$github$alloyui$core$master$core$$default.isString(value)) {\n          if (jspm_packages$github$alloyui$core$master$dom$features$$default.checkAttrOrderChange()) {\n            value = this.convertHtmlToBrowserFormat_(value);\n          }\n          return jspm_packages$github$alloyui$core$master$string$string$$default.hashCode(value);\n        }\n        return jspm_packages$github$alloyui$core$master$component$Component$$Component.Cache.NOT_CACHEABLE;\n      }\n\n      /**\n       * Computes the cache state for the surface content based on the decorated\n       * DOM element. The innerHTML of the surface element is read and compressed\n       * in order to minimize mismatches caused by breaking spaces or HTML\n       * formatting differences that does not affect the content structure.\n       * @protected\n       */\n      computeSurfacesCacheStateFromDom_() {\n        for (var surfaceId in this.surfaces_) {\n          var surface = this.getSurface(surfaceId);\n          surface.cacheState = this.computeSurfaceCacheState_(\n            this.compressHtmlForCache_(this.getSurfaceElement(surfaceId).innerHTML)\n          );\n        }\n      }\n\n      /**\n       * Converts the given html string to the format the current browser uses\n       * when html is rendered. This is done by rendering the html in a temporary\n       * element, and returning its resulting rendered html.\n       * @param {string} htmlString The html to be converted.\n       * @return {string}\n       * @protected\n       */\n      convertHtmlToBrowserFormat_(htmlString) {\n        var element = document.createElement('div');\n        jspm_packages$github$alloyui$core$master$dom$dom$$default.append(element, htmlString);\n        return element.innerHTML;\n      }\n\n      /**\n       * Lifecycle. Creation phase of the component happens once after the\n       * component is instantiated, therefore its the initial phase of the\n       * component Lifecycle. Be conscious about actions performed in this phase\n       * to not compromise instantiation time with operations that can be\n       * postponed to further phases. It's recommended to bind component custom\n       * events in this phase, in contrast to DOM events that must be bind on\n       * attach phase.\n       */\n      created() {\n      }\n\n      /**\n       * Creates the surface element with its id namespaced to the component id.\n       * @param {string} surfaceElementId The id of the element for the surface to be\n       *   created.\n       * @return {Element} The surface element.\n       * @protected\n       */\n      createSurfaceElement_(surfaceElementId) {\n        var el = document.createElement(this.constructor.SURFACE_TAG_NAME_MERGED);\n        el.id = surfaceElementId;\n        return el;\n      }\n\n      /**\n       * Lifecycle. Internal implementation for decoration. Any extra operation\n       * necessary to prepare the component DOM must be implemented in this phase.\n       */\n      decorateInternal() {\n      }\n\n      /**\n       * Listens to a delegate event on the component's element.\n       * @param {string} eventName The name of the event to listen to.\n       * @param {string} selector The selector that matches the child elements that\n       *   the event should be triggered for.\n       * @param {!function(!Object)} callback Function to be called when the event is\n       *   triggered. It will receive the normalized event object.\n       * @return {!DomEventHandle} Can be used to remove the listener.\n       */\n      delegate(eventName, selector, callback) {\n        var handle = jspm_packages$github$alloyui$core$master$dom$dom$$default.delegate(this.element, eventName, selector, callback);\n        this.delegateEventHandler_.add(handle);\n        return handle;\n      }\n\n      /**\n       * Invokes the detached Lifecycle. When detached, the component element is\n       * removed from the DOM and any other action to be performed must be\n       * implemented in this method, such as, unbinding DOM events. A component\n       * can be detached multiple times.\n       * @chainable\n       */\n      detach() {\n        if (this.inDocument) {\n          this.element.parentNode.removeChild(this.element);\n          this.inDocument = false;\n          this.detached();\n        }\n        return this;\n      }\n\n      /**\n       * Lifecycle. When detached, the component element is removed from the DOM\n       * and any other action to be performed must be implemented in this method,\n       * such as, unbinding DOM events. A component can be detached multiple\n       * times, therefore the undo behavior for any action performed in this phase\n       * must be implemented on the attach phase.\n       */\n      detached() {\n      }\n\n      /**\n       * Internal implementation for the creation phase of the component.\n       * @protected\n       */\n      created_() {\n        this.on('attrsChanged', this.handleAttributesChanges_);\n        this.created();\n      }\n\n      /**\n       * Lifecycle. Creates the component using existing DOM elements. Often the\n       * component can be created using existing elements in the DOM to leverage\n       * progressive enhancement. Any extra operation necessary to prepare the\n       * component DOM must be implemented in this phase. Decorate phase replaces\n       * render phase.\n       *\n       * Decoration Lifecycle:\n       *   decorate - Decorate is manually called.\n       *   decorateInternal - Internal implementation for decoration happens.\n       *   render surfaces - All surfaces content are rendered.\n       *   attribute synchronization - All synchronization methods are called.\n       *   attach - Attach Lifecycle is called.\n       * @chainable\n       */\n      decorate() {\n        if (this.inDocument) {\n          throw new Error(jspm_packages$github$alloyui$core$master$component$Component$$Component.Error.ALREADY_RENDERED);\n        }\n        this.decorating_ = true;\n\n        this.decorateInternal();\n        this.computeSurfacesCacheStateFromDom_(); // TODO(edu): This optimization seems worth it, analyze it.\n        this.renderSurfacesContent_(this.surfaces_); // TODO(edu): Sync surfaces on decorate?\n\n        this.syncAttrs_(this.getAttrNames());\n\n        this.attach();\n\n        this.decorating_ = false;\n        this.wasDecorated = true;\n        this.wasRendered = true;\n\n        return this;\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        this.detach();\n\n        this.elementEventProxy_.dispose();\n        this.elementEventProxy_ = null;\n\n        this.delegateEventHandler_.removeAllListeners();\n        this.delegateEventHandler_ = null;\n\n        this.surfaces_ = null;\n        this.surfacesRenderAttrs_ = null;\n        super.disposeInternal();\n      }\n\n      /**\n       * Fires attributes synchronization changes for attributes.\n       * @param {Object.<string, Object>} changes Object containing the attribute\n       *     name as key and an object with newVal and prevVal as value.\n       * @protected\n       */\n      syncAttrs_(attrsName) {\n        for (var i in attrsName) {\n          this.fireAttrChange_(attrsName[i]);\n        }\n      }\n\n      /**\n       * Fires attributes synchronization changes for attributes.\n       * @param {Object.<string, Object>} changes Object containing the attribute\n       *     name as key and an object with newVal and prevVal as value.\n       * @protected\n       */\n      syncAttrsFromChanges_(changes) {\n        for (var attr in changes) {\n          this.fireAttrChange_(attr, changes[attr]);\n        }\n      }\n\n      /**\n       * Fires attribute synchronization change for the attribute.\n       * @param {Object.<string, Object>} change Object containing newVal and\n       *     prevVal keys.\n       * @protected\n       */\n      fireAttrChange_(attr, opt_change) {\n        var fn = this['sync' + attr.charAt(0).toUpperCase() + attr.slice(1)];\n        if (jspm_packages$github$alloyui$core$master$core$$default.isFunction(fn)) {\n          if (!opt_change) {\n            opt_change = {\n              newVal: this[attr],\n              prevVal: undefined\n            };\n          }\n          fn.call(this, opt_change.newVal, opt_change.prevVal);\n        }\n      }\n\n      /**\n       * Gets surfaces that got modified by the specified attributes changes.\n       * @param {Object.<string, Object>} changes Object containing the attribute\n       *     name as key and an object with newVal and prevVal as value.\n       * @return {Object.<string, boolean>} Object containing modified surface ids\n       *     as key and true as value.\n       */\n      getModifiedSurfacesFromChanges_(changes) {\n        var surfaces = [];\n        for (var attr in changes) {\n          surfaces.push(this.surfacesRenderAttrs_[attr]);\n        }\n        return jspm_packages$github$alloyui$core$master$object$object$$default.mixin.apply(null, surfaces);\n      }\n\n      /**\n       * Gets surface configuration object. If surface is not registered returns\n       * null.\n       * @param {string} surfaceId The surface id.\n       * @return {?Object} The surface configuration object.\n       */\n      getSurface(surfaceId) {\n        return this.surfaces_[surfaceId] || null;\n      }\n\n      /**\n       * Gets the content for the requested surface. Should be implemented by subclasses.\n       * @param {string} surfaceId The surface id.\n       * @return {Object|string} The content to be rendered.\n       */\n      getSurfaceContent() {\n      }\n\n      /**\n       * Gets the content for the requested surface. By default this just calls\n       * `getSurfaceContent`, but can be overriden to add more behavior (check\n       * `SoyComponent` for an example).\n       * @param {string} surfaceId The surface id.\n       * @return {Object|string} The content to be rendered.\n       * @protected\n       */\n      getSurfaceContent_(surfaceId) {\n        return this.getSurfaceContent(surfaceId);\n      }\n\n      /**\n       * Queries from the document or creates an element for the surface. Surface\n       * elements have its surface id namespaced to the component id, e.g. for a\n       * component with id `gallery` and a surface with id `pictures` the surface\n       * element will be represented by the id `gallery-pictures`. Surface\n       * elements must also be appended to the component element.\n       * @param {string} surfaceId The surface id.\n       * @return {Element} The surface element or null if surface not registered.\n       */\n      getSurfaceElement(surfaceId) {\n        var surface = this.getSurface(surfaceId);\n        if (!surface) {\n          return null;\n        }\n        if (!surface.element) {\n          var surfaceElementId = this.makeSurfaceId_(surfaceId);\n          surface.element = document.getElementById(surfaceElementId) ||\n            this.element.querySelector('#' + surfaceElementId) ||\n          this.createSurfaceElement_(surfaceElementId);\n        }\n        return surface.element;\n      }\n\n      /**\n       * A map of surface ids to the respective surface object.\n       * @return {!Object}\n       */\n      getSurfaces() {\n        return this.surfaces_;\n      }\n\n      /**\n       * Handles attributes batch changes. Responsible for surface mutations and\n       * attributes synchronization.\n       * @param {Event} event\n       * @protected\n       */\n      handleAttributesChanges_(event) {\n        if (this.inDocument) {\n          this.renderSurfacesContent_(this.getModifiedSurfacesFromChanges_(event.changes));\n        }\n        this.syncAttrsFromChanges_(event.changes);\n      }\n\n      /**\n       * Makes an unique id for the component.\n       * @return {string} Unique id.\n       * @protected\n       */\n      makeId_() {\n        return 'aui_c_' + jspm_packages$github$alloyui$core$master$core$$default.getUid(this);\n      }\n\n      /**\n       * Makes the id for the surface scoped by the component.\n       * @param {string} surfaceId The surface id.\n       * @return {string}\n       * @protected\n       */\n      makeSurfaceId_(surfaceId) {\n        return this.id + '-' + surfaceId;\n      }\n\n      /**\n       * Merges an array of values for the ELEMENT_CLASSES property into a single object.\n       * @param {!Array.<string>} values The values to be merged.\n       * @return {!string} The merged value.\n       * @protected\n       */\n      mergeElementClasses_(values) {\n        return values.filter(function(val) {\n          return val;\n        }).join(' ');\n      }\n\n      /**\n       * Merges an array of values for the SURFACES property into a single object.\n       * @param {!Array} values The values to be merged.\n       * @return {!Object} The merged value.\n       * @protected\n       */\n      mergeSurfaces_(values) {\n        return jspm_packages$github$alloyui$core$master$object$object$$default.mixin.apply(null, [{}].concat(values.reverse()));\n      }\n\n      /**\n       * Unregisters a surface and removes its element from the DOM.\n       * @param {string} surfaceId The surface id.\n       * @chainable\n       */\n      removeSurface(surfaceId) {\n        var el = this.getSurfaceElement(surfaceId);\n        if (el && el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n        delete this.surfaces_[surfaceId];\n        return this;\n      }\n\n      /**\n       * Lifecycle. Renders the component into the DOM. Render phase replaces\n       * decorate phase, without progressive enhancement support.\n       *\n       * Render Lifecycle:\n       *   render - Decorate is manually called.\n       *   renderInternal - Internal implementation for rendering happens.\n       *   render surfaces - All surfaces content are rendered.\n       *   attribute synchronization - All synchronization methods are called.\n       *   attach - Attach Lifecycle is called.\n       *\n       * @param {(string|Element)=} opt_parentElement Optional parent element\n       *     to render the component.\n       * @param {(string|Element)=} opt_siblingElement Optional sibling element\n       *     to render the component before it. Relevant when the component needs\n       *     to be rendered before an existing element in the DOM, e.g.\n       *     `component.render(null, existingElement)`.\n       * @chainable\n       */\n      render(opt_parentElement, opt_siblingElement) {\n        if (this.wasRendered) {\n          throw new Error(jspm_packages$github$alloyui$core$master$component$Component$$Component.Error.ALREADY_RENDERED);\n        }\n\n        this.renderInternal();\n        this.clearSurfacesCache_();\n        this.renderSurfacesContent_(this.surfaces_);\n\n        this.syncAttrs_(this.getAttrNames());\n\n        this.attach(opt_parentElement, opt_siblingElement);\n\n        this.wasRendered = true;\n\n        return this;\n      }\n\n      /**\n       * Renders the component element into the DOM.\n       * @param {(string|Element)=} opt_parentElement Optional parent element\n       *     to render the component.\n       * @param {(string|Element)=} opt_siblingElement Optional sibling element\n       *     to render the component before it. Relevant when the component needs\n       *     to be rendered before an existing element in the DOM, e.g.\n       *     `component.render(null, existingElement)`.\n       * @protected\n       */\n      renderElement_(opt_parentElement, opt_siblingElement) {\n        this.element.id = this.id;\n        if (opt_siblingElement || !this.element.parentNode) {\n          var parent = jspm_packages$github$alloyui$core$master$dom$dom$$default.toElement(opt_parentElement) || document.body;\n          parent.insertBefore(this.element, jspm_packages$github$alloyui$core$master$dom$dom$$default.toElement(opt_siblingElement));\n        }\n      }\n\n      /**\n       * Lifecycle. Internal implementation for rendering. Any extra operation\n       * necessary to prepare the component DOM must be implemented in this phase.\n       */\n      renderInternal() {\n      }\n\n      /**\n       * Render content into a surface. If the specified content is the same of\n       * the current surface content, nothing happens. If the surface cache state\n       * is not initialized or the content is not eligible for cache or content is\n       * different, the surfaces re-renders. It's not recommended to use this\n       * method directly since surface content can be provided by\n       * `getSurfaceContent(surfaceId)`.\n       * @param {string} surfaceId The surface id.\n       * @param {Object|string} content The content to be rendered.\n       */\n      renderSurfaceContent(surfaceId, content) {\n        if (jspm_packages$github$alloyui$core$master$core$$default.isDefAndNotNull(content)) {\n          var surface = this.getSurface(surfaceId);\n          var cacheState = this.computeSurfaceCacheState_(content);\n\n          surface.cacheMiss = cacheState === jspm_packages$github$alloyui$core$master$component$Component$$Component.Cache.NOT_INITIALIZED ||\n            cacheState === jspm_packages$github$alloyui$core$master$component$Component$$Component.Cache.NOT_CACHEABLE ||\n            cacheState !== surface.cacheState;\n          if (surface.cacheMiss) {\n            this.replaceSurfaceContent_(surfaceId, content);\n          }\n          surface.cacheState = cacheState;\n        }\n      }\n\n      /**\n       * Renders all surfaces contents ignoring the cache.\n       * @param {Object.<string, Object=>} surfaces Object map where the key is\n       *     the surface id and value the optional surface configuration.\n       * @protected\n       */\n      renderSurfacesContent_(surfaces) {\n        for (var surfaceId in surfaces) {\n          this.renderSurfaceContent(surfaceId, this.getSurfaceContent_(surfaceId));\n        }\n      }\n\n      /**\n       * Replaces the content of a surface with a new one.\n       * @param {string} surfaceId The surface id.\n       * @param {Element|string} content The content to be rendered.\n       * @protected\n       */\n      replaceSurfaceContent_(surfaceId, content) {\n        var el = this.getSurfaceElement(surfaceId);\n        jspm_packages$github$alloyui$core$master$dom$dom$$default.removeChildren(el);\n        jspm_packages$github$alloyui$core$master$dom$dom$$default.append(el, content);\n      }\n\n      /**\n       * Setter logic for element attribute.\n       * @param {string|Element} val\n       * @return {Element}\n       * @protected\n       */\n      setterElementFn_(val) {\n        var element = jspm_packages$github$alloyui$core$master$dom$dom$$default.toElement(val);\n        if (!element) {\n          element = this.valueElementFn_();\n        }\n        return element;\n      }\n\n      /**\n       * Attribute synchronization logic for elementClasses attribute.\n       * @param {string} newVal\n       * @param {string} prevVal\n       */\n      syncElementClasses(newVal, prevVal) {\n        var classesToAdd = this.constructor.ELEMENT_CLASSES_MERGED;\n        if (newVal) {\n          classesToAdd = classesToAdd + ' ' + newVal;\n        }\n        if (prevVal) {\n          jspm_packages$github$alloyui$core$master$dom$dom$$default.removeClasses(this.element, prevVal.split(' '));\n        }\n        jspm_packages$github$alloyui$core$master$dom$dom$$default.addClasses(this.element, classesToAdd.split(' '));\n      }\n\n      /**\n       * Validator logic for `children` element.\n       * @param {*} val\n       * @return {boolean}\n       * @protected\n       */\n      validatorChildrenFn_(val) {\n        return (val instanceof Array) && val.every(function(component) {\n          return component instanceof jspm_packages$github$alloyui$core$master$component$Component$$Component;\n        });\n      }\n\n      /**\n       * Validator logic for element attribute.\n       * @param {string|Element} val\n       * @return {boolean} True if val is a valid element.\n       * @protected\n       */\n      validatorElementFn_(val) {\n        return jspm_packages$github$alloyui$core$master$core$$default.isElement(val) || jspm_packages$github$alloyui$core$master$core$$default.isString(val);\n      }\n\n      /**\n       * Validator logic for elementClasses attribute.\n       * @param {string} val\n       * @return {Boolean} True if val is a valid element classes.\n       * @protected\n       */\n      validatorElementClassesFn_(val) {\n        return jspm_packages$github$alloyui$core$master$core$$default.isString(val);\n      }\n\n      /**\n       * Validator logic for id attribute.\n       * @param {string} val\n       * @return {Boolean} True if val is a valid id.\n       * @protected\n       */\n      validatorIdFn_(val) {\n        return jspm_packages$github$alloyui$core$master$core$$default.isString(val);\n      }\n\n      /**\n       * Provides the default value for element attribute.\n       * @return {Element} The element.\n       * @protected\n       */\n      valueElementFn_() {\n        return document.createElement(this.constructor.ELEMENT_TAG_NAME_MERGED);\n      }\n\n      /**\n       * Provides the default value for id attribute.\n       * @return {string} The id.\n       * @protected\n       */\n      valueIdFn_() {\n        return this.element.id || this.makeId_();\n      }\n    }\n\n    /**\n     * Component attributes definition.\n     * @type {Object}\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$component$Component$$Component.ATTRS = {\n      /**\n       * Child components passed to this component.\n       * @type {Array<Component>}\n       */\n      children: {\n        validator: 'validatorChildrenFn_',\n        valueFn: function() {\n          return [];\n        }\n      },\n\n      /**\n       * Component element bounding box.\n       * @type {Element}\n       * @initOnly\n       */\n      element: {\n        initOnly: true,\n        setter: 'setterElementFn_',\n        validator: 'validatorElementFn_',\n        valueFn: 'valueElementFn_'\n      },\n\n      /**\n       * CSS classes to be applied to the element.\n       * @type {Array.<string>}\n       */\n      elementClasses: {\n        validator: 'validatorElementClassesFn_'\n      },\n\n      /**\n       * Component element id. If not specified will be generated.\n       * @type {string}\n       * @initOnly\n       */\n      id: {\n        initOnly: true,\n        validator: 'validatorIdFn_',\n        valueFn: 'valueIdFn_'\n      }\n    };\n\n    /**\n     * CSS classes to be applied to the element.\n     * @type {string}\n     * @protected\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$component$Component$$Component.ELEMENT_CLASSES = 'component';\n\n    /**\n     * Element tag name is a string that specifies the type of element to be\n     * created. The nodeName of the created element is initialized with the\n     * value of tag name.\n     * @type {string}\n     * @default div\n     * @protected\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$component$Component$$Component.ELEMENT_TAG_NAME = 'div';\n\n    /**\n     * Surface tag name is a string that specifies the type of element to be\n     * created for the surfaces. The nodeName of the created element is\n     * initialized with the value of tag name.\n     * @type {string}\n     * @default div\n     * @protected\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$component$Component$$Component.SURFACE_TAG_NAME = 'div';\n\n    /**\n     * Cache states for the component.\n     * @enum {string}\n     */\n    jspm_packages$github$alloyui$core$master$component$Component$$Component.Cache = {\n      /**\n       * Cache is not allowed for this state.\n       */\n      NOT_CACHEABLE: -1,\n\n      /**\n       * Cache not initialized.\n       */\n      NOT_INITIALIZED: -2\n    };\n\n    /**\n     * Errors thrown by the component.\n     * @enum {string}\n     */\n    jspm_packages$github$alloyui$core$master$component$Component$$Component.Error = {\n      /**\n       * Error when the component is already rendered and another render attempt\n       * is made.\n       */\n      ALREADY_RENDERED: 'Component already rendered'\n    };\n\n    /**\n     * A list with attribute names that will automatically be rejected as invalid.\n     * @type {!Array<string>}\n     */\n    jspm_packages$github$alloyui$core$master$component$Component$$Component.INVALID_ATTRS = ['componentName', 'components', 'elementContent', 'ref'];\n\n    var jspm_packages$github$alloyui$core$master$component$Component$$default = jspm_packages$github$alloyui$core$master$component$Component$$Component;\n    'use strict';\n\n    /**\n     * The component registry is used to register components, so they can\n     * be accessible by name.\n     * @type {Object}\n     */\n    class jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry {\n      /**\n       * Gets the constructor function for the given component name, or\n       * undefined if it hasn't been registered yet.\n       * @param {string} name The component's name.\n       * @return {?function}\n       * @static\n       */\n      static getConstructor(name) {\n        var constructorFn = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry.components_[name];\n        if (!constructorFn) {\n          console.error(\n            'There\\'s no constructor registered for the component ' +\n            'named ' + name + '. Components need to be registered via ' +\n            'ComponentRegistry.register.'\n          );\n        }\n        return constructorFn;\n      }\n\n      /**\n       * Registers a component.\n       * @param {string} name The component's name.\n       * @param {string} constructorFn The component's constructor function.\n       * @static\n       */\n      static register(name, constructorFn) {\n        jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry.components_[name] = constructorFn;\n        constructorFn.NAME = name;\n        constructorFn.TEMPLATES = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry.Templates[name];\n      }\n    }\n\n    /**\n     * Holds all registered components, indexed by their names.\n     * @type {!Object<string, function()>}\n     * @protected\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry.components_ = {};\n\n    /**\n     * Holds all registered component templates, indexed by component names.\n     * Soy files automatically add their templates to this object when imported.\n     * @type {!Object<string, !Object<string, !function()>>}\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry.Templates = {};\n\n    var jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry;\n    'use strict';\n\n    class jspm_packages$github$alloyui$core$master$component$ComponentCollector$$ComponentCollector extends jspm_packages$github$alloyui$core$master$disposable$Disposable$$default {\n      constructor(element) {\n        super();\n\n        /**\n         * Holds the extracted components, indexed by id.\n         * @type {!Object<string, !Component>}\n         * @protected\n         */\n        this.components_ = {};\n\n        /**\n         * DOM element to search for component placeholders in.\n         * @type {!Element}\n         * @protected\n         */\n        this.element_ = element;\n\n        /**\n         * Holds a map of component ids that indicate if each component has already\n         * been extracted as a subcomponent on this call to `extractComponents`.\n         * @type {!Object<string, boolean>}\n         * @protected\n         */\n        this.extractedSubComponents_ = {};\n\n        /**\n         * Holds the root extracted components (that is, components that are\n         * not children of other extracted components), indexed by id.\n         * @type {!Object<string, !Component>}\n         * @protected\n         */\n        this.rootComponents_ = {};\n\n        /**\n         * Flag indicating if new components should be decorated instead of\n         * rendered.\n         * @type {boolean}\n         * @protected\n         */\n        this.shouldDecorate_ = false;\n      }\n\n      /**\n       * Creates a component instance.\n       * @param {string} id The component id.\n       * @param {string} name The component name.\n       * @param {!Object} data The component config data.\n       * @return {!Component} The created component instance.\n       * @protected\n       */\n      createComponent_(id, name, data) {\n        var ConstructorFn = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.getConstructor(name);\n        data.element = data.element ? data.element : '#' + id;\n        this.components_[id] = new ConstructorFn(data);\n        return this.components_[id];\n      }\n\n      /**\n       * Creates a root component instance.\n       * @param {string} id The component id.\n       * @param {string} name The component name.\n       * @param {!Object} data The component config data.\n       * @param {Element} element The component's element.\n       * @protected\n       */\n      createRootComponent_(id, name, data, element) {\n        data.element = element;\n        this.rootComponents_[id] = this.createComponent_(id, name, data);\n\n        if (this.shouldDecorate_ && element.childNodes.length > 0) {\n          this.rootComponents_[id].decorate();\n        } else {\n          this.rootComponents_[id].render();\n        }\n      }\n\n      /**\n       * Gets all the extracted components.\n       * @return {!Array<!Component>}\n       */\n      getComponents() {\n        return this.components_;\n      }\n\n      /**\n       * Gets all the root extracted components.\n       * @return {!Array<!Component>}\n       */\n      getRootComponents() {\n        return this.rootComponents_;\n      }\n\n      /**\n       * Extracts components according, looking for elements with the appropriate\n       * ids on the document, and creating component instances tied to those.\n       * @param {!Object<string, !Object>} componentData An object with creation\n       *   data for components that may be found inside the element, indexed by\n       *   their ids.\n       */\n      extractComponents(componentData) {\n        var id;\n        this.extractedSubComponents_ = {};\n\n        for (id in componentData) {\n          this.extractSubcomponents(componentData[id], componentData);\n        }\n        for (id in componentData) {\n          if (!this.extractedSubComponents_[id]) {\n            var element = document.getElementById(id) || this.element_.querySelector('#' + id);\n            if (element) {\n              this.extractRootComponent_(element, componentData);\n            }\n          }\n        }\n      }\n\n      /**\n       * Extracts a component from the given element.\n       * @param {!Element} element Element that represents a component that should\n       *   be extracted.\n       * @param {!Object<string, !Object>} componentData An object with creation\n       *   data for components that may be found inside the element, indexed by\n       *   their ids.\n       * @protected\n       */\n      extractRootComponent_(element, componentData) {\n        var id = element.id;\n        var data = componentData[id];\n\n        if (this.components_[id]) {\n          this.updateRootComponent_(id, data.data, element);\n        } else {\n          this.createRootComponent_(id, data.componentName, data.data, element);\n        }\n      }\n\n      /**\n       * Handles a subcomponent, creating it for the first time or updating it in\n       * case it doesn't exist yet.\n       * @param {!Object} data The subcomponent's template call data.\n       * @param {!Object<string, !Object>} componentData An object with creation\n       *   data for components that may be found inside the element, indexed by\n       *   their ids.\n       * @return {!Component} The subcomponent's instance.\n       * @protected\n       */\n      extractSubcomponent_(data, componentData) {\n        this.extractSubcomponents(data, componentData);\n\n        var id = data.data.id;\n        var component = this.components_[id];\n        if (component) {\n          component.setAttrs(data.data);\n        } else {\n          component = this.createComponent_(id, data.componentName, data.data);\n          delete this.rootComponents_[id];\n        }\n        this.extractedSubComponents_[id] = true;\n        return component;\n      }\n\n      /**\n       * Converts values in the given data object to arrays of components, when\n       * possible.\n       * @param {!Object} data The subcomponent's template call data.\n       * @param {!Object<string, !Object>} componentData An object with creation\n       *   data for components that may be found inside the element, indexed by\n       *   their ids.\n       */\n      extractSubcomponents(data, componentData) {\n        for (var key in data.data) {\n          if (this.shouldExtractSubcomponents_(data.data[key])) {\n            data.data[key] = this.extractSubcomponentsFromString_(data.data[key], componentData);\n          }\n        }\n      }\n\n      /**\n       * Handles the given string of rendered templates, converting them to\n       * component instances.\n       * @param {string} renderedComponents Rendered components.\n       * @param {!Object<string, !Object>} componentData An object with creation\n       *   data for components that may be found inside the element, indexed by\n       *   their ids.\n       * @return {string|!Array<!Component>} [description]\n       * @protected\n       */\n      extractSubcomponentsFromString_(renderedComponents, componentData) {\n        var components = [];\n        var frag = jspm_packages$github$alloyui$core$master$dom$dom$$default.buildFragment(renderedComponents);\n        var ignored = false;\n        for (var i = 0; i < frag.childNodes.length; i++) {\n          var node = frag.childNodes[i];\n          if (jspm_packages$github$alloyui$core$master$core$$default.isElement(node) && node.hasAttribute('data-component') && node.id) {\n            components.push(this.extractSubcomponent_(componentData[node.id], componentData));\n          } else {\n            ignored = true;\n          }\n        }\n\n        if (components.length) {\n          if (ignored) {\n            console.warn(\n              'One or more HTML nodes were ignored when extracting components. ' +\n              'Only nodes with both the id and the data-component attribute set are valid.'\n            );\n          }\n          return components;\n        } else {\n          return renderedComponents;\n        }\n      }\n\n      /**\n       * Sets the flag that indicates if new components should be decorated instead\n       * of rendered.\n       * @param {boolean} shouldDecorate\n       */\n      setShouldDecorate(shouldDecorate) {\n        this.shouldDecorate_ = shouldDecorate;\n      }\n\n      /**\n       * Checks if the given value has sub components that should be extracted.\n       * @param {*} value\n       * @return {boolean}\n       */\n      shouldExtractSubcomponents_(value) {\n        return jspm_packages$github$alloyui$core$master$core$$default.isString(value) && value.indexOf('data-component') !== -1;\n      }\n\n      /**\n       * Updates a root component's data and parentNode.\n       * @param {string} id The component's id.\n       * @param {!Object} data The component's data.\n       * @param {Element} element The element indicating the position the component\n       *   should be at.\n       * @protected\n       */\n      updateRootComponent_(id, data, element) {\n        var component = this.components_[id];\n        if (component.element !== element) {\n          element.parentNode.insertBefore(component.element, element);\n          element.parentNode.removeChild(element);\n        }\n        component.setAttrs(data);\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$component$ComponentCollector$$default = jspm_packages$github$alloyui$core$master$component$ComponentCollector$$ComponentCollector;\n    'use strict';\n\n    /**\n     * Collects inline events from a passed element, detaching previously\n     * attached events that are not being used anymore.\n     * @param {Component} component\n     * @constructor\n     * @extends {Disposable}\n     */\n    class jspm_packages$github$alloyui$core$master$component$EventsCollector$$EventsCollector extends jspm_packages$github$alloyui$core$master$disposable$Disposable$$default {\n      constructor(component) {\n        super();\n\n        if (!component) {\n          throw new Error('The component instance is mandatory');\n        }\n\n        /**\n         * Holds the component intance.\n         * @type {!Component}\n         * @protected\n         */\n        this.component_ = component;\n\n        /**\n         * Holds the attached delegate event handles, indexed by the css selector.\n         * @type {!Object<string, !DomEventHandle>}\n         * @protected\n         */\n        this.eventHandles_ = {};\n\n        /**\n         * Holds the number of extracted listeners, indexed by the listener's css selector.\n         * @type {!Object<string, number>}\n         * @protected\n         */\n        this.listenerCounts_ = {};\n      }\n\n      /**\n       * Attaches the listener described by the given params, unless it has already\n       * been attached.\n       * @param {string} eventType\n       * @param {string} fnName\n       * @protected\n       */\n      attachListener_(eventType, fnName) {\n        var selector = '[data-on' + eventType + '=\"' + fnName + '\"]';\n        this.listenerCounts_[selector] = (this.listenerCounts_[selector] || 0) + 1;\n        if (!this.eventHandles_[selector]) {\n          var fn = this.component_[fnName].bind(this.component_);\n          this.eventHandles_[selector] = this.component_.delegate(eventType, selector, fn);\n        }\n      }\n\n      /**\n       * Attaches all listeners declared as attributes on the given element and\n       * its children.\n       * @param {string} content\n       */\n      attachListeners(content) {\n        this.listenerCounts_ = {};\n        this.attachListenersFromHtml_(content);\n        this.detachUnusedListeners_();\n      }\n\n      /**\n       * Attaches listeners found in the given html content.\n       * @param {string} content\n       * @protected\n       */\n      attachListenersFromHtml_(content) {\n        var regex = /data-on([a-z]+)=['|\"](\\w+)['|\"]/g;\n        var match = regex.exec(content);\n        while(match) {\n          this.attachListener_(match[1], match[2]);\n          match = regex.exec(content);\n        }\n      }\n\n      /**\n       * Removes all previously attached event listeners to the component.\n       */\n      detachAllListeners() {\n        for (var selector in this.eventHandles_) {\n          if (this.eventHandles_[selector]) {\n            this.eventHandles_[selector].removeListener();\n          }\n        }\n        this.eventHandles_ = {};\n        this.listenerCounts_ = {};\n      }\n\n      /**\n       * Detaches all existing listeners that are not being used anymore.\n       * @protected\n       */\n      detachUnusedListeners_() {\n        for (var selector in this.eventHandles_) {\n          if (!this.listenerCounts_[selector]) {\n            this.eventHandles_[selector].removeListener();\n            this.eventHandles_[selector] = null;\n          }\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        this.detachAllListeners();\n        this.component_ = null;\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$component$EventsCollector$$default = jspm_packages$github$alloyui$core$master$component$EventsCollector$$EventsCollector;\n    var jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from SoyComponent.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.SoyComponent.\n     * @hassoydeltemplate {Component}\n     * @hassoydeltemplate {ComponentChildren}\n     * @hassoydelcall {ComponentElement}\n     * @hassoydelcall {ComponentTemplate}\n     */\n\n    if (typeof jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent == 'undefined') { jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.component = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_ijData.renderChildComponents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), opt_data.componentName, true)(opt_data, null, opt_ijData)) : soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), opt_data.componentName, true)(soy.$$augmentMap(opt_data, {elementContent: ''}), null, opt_ijData)));\n    };\n    if (goog.DEBUG) {\n      jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.component.soyTemplateName = 'Templates.SoyComponent.component';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s9_0084916f = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.component(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s9_0084916f.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s9_0084916f';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Component'), '', 0, jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s9_0084916f);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s11_26860e4b = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-children-placeholder\" data-component-children=\"\">' + ((opt_ijData.renderChildComponents) ? soy.$$escapeHtml(opt_data.children) : '') + '</div>');\n    };\n    if (goog.DEBUG) {\n      jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s11_26860e4b.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s11_26860e4b';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentChildren'), '', 0, jspm_packages$github$alloyui$core$master$soy$SoyComponent$soy$$Templates.SoyComponent.__deltemplate_s11_26860e4b);\n\n    'use strict';\n\n    /**\n     * We need to listen to calls to the SoyComponent template so we can use them to\n     * properly instantiate and update child components defined through soy.\n     * TODO: Switch to using proper AOP.\n     */\n    var jspm_packages$github$alloyui$core$master$soy$SoyComponent$$originalTemplate = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.Templates.SoyComponent.component;\n\n    /**\n     * Special Component class that handles a better integration between soy templates\n     * and the components. It allows for automatic rendering of surfaces that have soy\n     * templates defined with their names, skipping the call to `getSurfaceContent`.\n     * @param {Object} opt_config An object with the initial values for this component's\n     *   attributes.\n     * @constructor\n     * @extends {Component}\n     */\n    class jspm_packages$github$alloyui$core$master$soy$SoyComponent$$SoyComponent extends jspm_packages$github$alloyui$core$master$component$Component$$default {\n      constructor(opt_config) {\n        jspm_packages$github$alloyui$core$master$core$$default.mergeSuperClassesProperty(this.constructor, 'TEMPLATES', this.mergeTemplates_);\n        super(opt_config);\n\n        /**\n         * Holds a `ComponentCollector` that will extract inner components.\n         * @type {!ComponentCollector}\n         * @protected\n         */\n        this.componentCollector_ = new jspm_packages$github$alloyui$core$master$component$ComponentCollector$$default(this.element);\n\n        /**\n         * Gets all nested components.\n         * @type {!Array<!Component>}\n         */\n        this.components = null;\n\n        /**\n         * Holds events that were listened through the element.\n         * @type {!EventHandler}\n         * @protected\n         */\n        this.eventsCollector_ = new jspm_packages$github$alloyui$core$master$component$EventsCollector$$default(this);\n\n        /**\n         * Stores the arguments that were passed to the last call to the\n         * SoyComponent template for each component instance (mapped by its id).\n         * @type {!Object}\n         * @protected\n         */\n        this.componentsInterceptedData_ = {};\n\n        this.addSurfacesFromTemplates_();\n      }\n\n      /**\n       * Adds surfaces for each registered template that is not named `element`.\n       * @protected\n       */\n      addSurfacesFromTemplates_() {\n        var templates = this.constructor.TEMPLATES_MERGED;\n        for (var templateName in templates) {\n          if (templateName !== 'content' &&\n            templateName.substr(0, 13) !== '__deltemplate') {\n\n            var surface = this.getSurface(templateName);\n            if (!surface) {\n              this.addSurface(templateName, {\n                renderAttrs: templates[templateName].params\n              });\n            }\n          }\n        }\n      }\n\n      /**\n       * @inheritDoc\n       * @override\n       */\n      attach(opt_parentElement, opt_siblingElement) {\n        if (this.decorating_) {\n          // We need to call the element soy template function when the component\n          // is being decorated, even though we won't use its results. This call is\n          // only needed in order for us tointercept the call data for nested components.\n          this.renderElementTemplate();\n          this.componentCollector_.setShouldDecorate(true);\n        }\n\n        this.componentCollector_.extractComponents(this.componentsInterceptedData_);\n        this.componentCollector_.setShouldDecorate(false);\n\n        super.attach(opt_parentElement, opt_siblingElement);\n        this.componentsInterceptedData_ = {};\n        this.attachInlineListeners_();\n\n        return this;\n      }\n\n      /**\n       * Attaches inline listeners to the main element.\n       * @protected\n       */\n      attachInlineListeners_() {\n        this.eventsCollector_.attachListeners(this.element.outerHTML);\n      }\n\n      /**\n       * Overrides the method that compresses html for caching, so that it now\n       * first empties all nested component placeholders before compressing.\n       * @param {string} htmlString The html to be compressed.\n       * @return {string} The compressed html.\n       * @protected\n       * @override\n       */\n      compressHtmlForCache_(htmlString) {\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$default.removeElementContent(htmlString, ' data-component');\n        htmlString = jspm_packages$github$alloyui$core$master$html$html$$default.removeElementContent(htmlString, ' data-component-children');\n        return super.compressHtmlForCache_(htmlString);\n      }\n\n      /**\n       * Calls decorate on all children components, setting their element\n       * attribute to the appropriate element inside the children placeholder.\n       * @param {!Element} placeholder Placeholder where the children should be\n       *   rendered.\n       * @param {!Array<!Component>} children An array of children components.\n       * @return {boolean}\n       */\n      decorateChildren_(placeholder, children) {\n        children.forEach(function(child) {\n          child.decorate();\n        });\n      }\n\n      /**\n       * @inheritDoc\n       * @override\n       */\n      detach() {\n        this.eventsCollector_.detachAllListeners();\n        super.detach();\n        return this;\n      }\n\n      /**\n       * Gets all nested components.\n       * @return {!Array<!Component>}\n       * @protected\n       */\n      getComponents_() {\n        return this.componentCollector_.getComponents();\n      }\n\n      /**\n       * Overrides the default behavior so that this can automatically render\n       * the appropriate soy template when one exists.\n       * @param {string} surfaceId The surface id.\n       * @return {Object|string} The content to be rendered.\n       * @protected\n       * @override\n       */\n      getSurfaceContent_(surfaceId) {\n        var surfaceTemplate = this.constructor.TEMPLATES_MERGED[surfaceId];\n        if (jspm_packages$github$alloyui$core$master$core$$default.isFunction(surfaceTemplate)) {\n          return this.renderTemplate_(surfaceTemplate);\n        } else {\n          return super.getSurfaceContent_(surfaceId);\n        }\n      }\n\n      /**\n       * Handles a call to the SoyComponent template.\n       * @param {!Object} data The data the template was called with.\n       * @return {string} The original return value of the template.\n       */\n      handleTemplateCall_(data) {\n        var callData = {\n          componentName: data.componentName\n        };\n        callData.data = this.normalizeTemplateCallData_(data);\n        this.componentsInterceptedData_[data.id] = callData;\n        return jspm_packages$github$alloyui$core$master$soy$SoyComponent$$originalTemplate.apply(jspm_packages$github$alloyui$core$master$soy$SoyComponent$$originalTemplate, arguments);\n      }\n\n      /**\n       * Merges an array of values for the `TEMPLATES` property into a single object.\n       * @param {!Array} values The values to be merged.\n       * @return {!Object} The merged value.\n       * @protected\n       */\n      mergeTemplates_(values) {\n        return jspm_packages$github$alloyui$core$master$object$object$$default.mixin.apply(null, [{}].concat(values.reverse()));\n      }\n\n      /**\n       * Normalizes a template's call data, converting special soy objects\n       * into html strings. This function doesn't change the original data\n       * object.\n       * @param {!Object} data\n       * @return {!Object}\n       */\n      normalizeTemplateCallData_(data) {\n        data = jspm_packages$github$alloyui$core$master$object$object$$default.mixin({}, data, {\n          componentName: null\n        });\n        for (var key in data) {\n          if (data[key] instanceof soydata.SanitizedHtml) {\n            data[key] = data[key].content;\n          }\n        }\n        return data;\n      }\n\n      /**\n       * Renders this component's child components, if their placeholder is found.\n       * @protected\n       * TODO(edu): Re-think this part.\n       */\n      renderChildrenComponents_() {\n        var placeholder = this.element.querySelector('#' + this.makeSurfaceId_('children-placeholder'));\n        if (placeholder) {\n          var children = this.children;\n          if (this.shouldDecorateChildren_(placeholder)) {\n            this.decorateChildren_(placeholder, children);\n            return;\n          }\n\n          jspm_packages$github$alloyui$core$master$dom$dom$$default.removeChildren(placeholder);\n          children.forEach(function(child) {\n            if (child.wasRendered) {\n              jspm_packages$github$alloyui$core$master$dom$dom$$default.append(placeholder, child.element);\n            } else {\n              child.render(placeholder);\n            }\n          });\n        }\n      }\n\n      /**\n       * Overrides the behavior of this method to automatically render the element\n       * template if it's defined and to automatically attach listeners to all\n       * specified events by the user in the template. Also handles any calls to\n       * component templates.\n       * @override\n       */\n      renderInternal() {\n        var templateContent = this.renderElementTemplate();\n        if (templateContent) {\n          jspm_packages$github$alloyui$core$master$dom$dom$$default.append(this.element, templateContent);\n        }\n      }\n\n      /**\n       * Overrides the default behavior of `renderSurfaceContent` to also\n       * handle calls to component templates done by the surface's template.\n       * @param {string} surfaceId The surface id.\n       * @param {Object|string} content The content to be rendered.\n       * @override\n       */\n      renderSurfaceContent(surfaceId, content) {\n        super.renderSurfaceContent(surfaceId, content);\n\n        if (this.inDocument) {\n          if (this.getSurface(surfaceId).cacheMiss) {\n            this.componentCollector_.extractComponents(this.componentsInterceptedData_);\n          }\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      renderSurfacesContent_(surfaces) {\n        super.renderSurfacesContent_(surfaces);\n\n        if (this.inDocument) {\n          this.setComponentsAttrs_();\n          this.componentsInterceptedData_ = {};\n          this.attachInlineListeners_();\n        }\n        // TODO(edu): Moves assignment to be a getter Attribute instead.\n        this.components = this.getComponents_();\n      }\n\n      /**\n       * Renders the main element's template.\n       * @return {?string} The template's result content, or undefined if the\n       *   template doesn't exist.\n       */\n      renderElementTemplate() {\n        var elementTemplate = this.constructor.TEMPLATES_MERGED.content;\n        if (jspm_packages$github$alloyui$core$master$core$$default.isFunction(elementTemplate)) {\n          return this.renderTemplate_(elementTemplate);\n        }\n      }\n\n      /**\n       * Renders the specified template.\n       * @param {!function()} templateFn\n       * @return {string} The template's result content.\n       */\n      renderTemplate_(templateFn) {\n        jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.Templates.SoyComponent.component = this.handleTemplateCall_.bind(this);\n        var content = templateFn(this, null, {}).content;\n        jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.Templates.SoyComponent.component = jspm_packages$github$alloyui$core$master$soy$SoyComponent$$originalTemplate;\n        return content;\n      }\n\n      /**\n       * Updates all inner components with their last template call data.\n       * @protected\n       */\n      setComponentsAttrs_() {\n        var rootComponents = this.componentCollector_.getRootComponents();\n        for (var id in rootComponents) {\n          var data = this.componentsInterceptedData_[id];\n          if (data) {\n            this.componentCollector_.extractSubcomponents(data, this.componentsInterceptedData_);\n            if (rootComponents[data.data.id]) {\n              rootComponents[data.data.id].setAttrs(data.data);\n            }\n          }\n        }\n      }\n\n      /**\n       * Checks if children components should be decorated. Returns true when this\n       * component is being decorated and the placeholder contents match the number\n       * of children.\n       * @param {!Element} placeholder Placeholder where the children should be\n       *   rendered.\n       * @return {boolean}\n       */\n      shouldDecorateChildren_(placeholder) {\n        return this.decorating_ && placeholder.childNodes.length > 0;\n      }\n\n      /**\n       * Syncs the component according to the new value of the `children` attribute.\n       */\n      syncChildren(newVal, prevVal) {\n        if (!jspm_packages$github$alloyui$core$master$array$array$$default.equal(newVal, prevVal || [])) {\n          this.renderChildrenComponents_();\n        }\n      }\n\n      /**\n       * Overrides the default value function for the `id` attribute, so it will\n       * handle the case where `element` is in the middle of its creation, which\n       * means the id should be generated.\n       * @return {string} The id.\n       * @protected\n       * @override\n       */\n      valueIdFn_() {\n        if (!this.element) {\n          return this.makeId_();\n        }\n        return super.valueIdFn_();\n      }\n\n      /**\n       * Provides the default value for element attribute.\n       * @return {Element} The element.\n       * @protected\n       */\n      valueElementFn_() {\n        var templateFn = soy.$$getDelegateFn(this.constructor.NAME, '', true);\n        var rendered = templateFn(this, null, {}).content;\n        if (!rendered) {\n          return super.valueElementFn_();\n        }\n\n        var frag = jspm_packages$github$alloyui$core$master$dom$dom$$default.buildFragment(rendered);\n        var element = frag.childNodes[0];\n\n        // Remove element from fragment, so it won't have a parent. Otherwise,\n        // the `attach` method will think that the element has already been\n        // attached.\n        frag.removeChild(element);\n\n        return element;\n      }\n    }\n\n    /**\n     * The soy templates for this component. Templates that have the same\n     * name of a registered surface will be used for automatically rendering\n     * it.\n     * @type {Object<string, !function(Object):Object>}\n     * @protected\n     * @static\n     */\n    jspm_packages$github$alloyui$core$master$soy$SoyComponent$$SoyComponent.TEMPLATES = {};\n\n    var jspm_packages$github$alloyui$core$master$soy$SoyComponent$$default = jspm_packages$github$alloyui$core$master$soy$SoyComponent$$SoyComponent;\n    'use strict';\n\n    class lib$scripts$Component$$Component extends jspm_packages$github$alloyui$core$master$soy$SoyComponent$$default {\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      syncVisible(visible) {\n        this.element.style.display = visible ? null : 'none';\n      }\n    }\n\n    lib$scripts$Component$$Component.ATTRS = {\n      visible: {\n        validator: jspm_packages$github$alloyui$core$master$core$$default.isBoolean,\n        value: true\n      }\n    };\n\n    var lib$scripts$Component$$default = lib$scripts$Component$$Component;\n    var lib$scripts$Modal$soy$$Templates = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from Modal.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.Modal.\n     * @hassoydeltemplate {ComponentElement}\n     * @hassoydeltemplate {ComponentTemplate}\n     * @hassoydeltemplate {Modal}\n     * @hassoydeltemplate {Modal.body}\n     * @hassoydeltemplate {Modal.footer}\n     * @hassoydeltemplate {Modal.header}\n     * @hassoydelcall {Component}\n     * @hassoydelcall {ComponentElement}\n     * @hassoydelcall {Modal}\n     * @hassoydelcall {Modal.body}\n     * @hassoydelcall {Modal.footer}\n     * @hassoydelcall {Modal.header}\n     */\n\n    if (typeof lib$scripts$Modal$soy$$Templates.Modal == 'undefined') { lib$scripts$Modal$soy$$Templates.Modal = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.content = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.content.soyTemplateName = 'Templates.Modal.content';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.body = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.body) ? soy.$$escapeHtml(opt_data.body) : '');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.body.soyTemplateName = 'Templates.Modal.body';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.footer = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.footer) ? soy.$$escapeHtml(opt_data.footer) : '');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.footer.soyTemplateName = 'Templates.Modal.footer';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.header = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.header) ? '<a class=\"modal-close icon-12-close-long\" data-onclick=\"close\"></a>' + soy.$$escapeHtml(opt_data.header) : '');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.header.soyTemplateName = 'Templates.Modal.header';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s19_65c2d4d4 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<section id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-body\">' + soy.$$escapeHtml(opt_data.elementContent) + '</section>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s19_65c2d4d4.soyTemplateName = 'Templates.Modal.__deltemplate_s19_65c2d4d4';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s19_65c2d4d4);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s25_c9897a65 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<footer id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-footer\">' + soy.$$escapeHtml(opt_data.elementContent) + '</footer>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s25_c9897a65.soyTemplateName = 'Templates.Modal.__deltemplate_s25_c9897a65';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s25_c9897a65);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s31_499dc9aa = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<header id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-header\">' + soy.$$escapeHtml(opt_data.elementContent) + '</header>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s31_499dc9aa.soyTemplateName = 'Templates.Modal.__deltemplate_s31_499dc9aa';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s31_499dc9aa);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s37_45b138fb = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Modal'}), null, opt_ijData)));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s37_45b138fb.soyTemplateName = 'Templates.Modal.__deltemplate_s37_45b138fb';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s37_45b138fb);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s40_29e4e741 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$Modal$soy$$Templates.Modal.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s40_29e4e741.soyTemplateName = 'Templates.Modal.__deltemplate_s40_29e4e741';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Modal', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s40_29e4e741);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s44_df8ef55a = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"modal ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + ((opt_data.elementContent) ? soy.$$escapeHtml(opt_data.elementContent) : '') + '</div>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s44_df8ef55a.soyTemplateName = 'Templates.Modal.__deltemplate_s44_df8ef55a';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s44_df8ef55a);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s54_31c78f9d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s54_31c78f9d.soyTemplateName = 'Templates.Modal.__deltemplate_s54_31c78f9d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s54_31c78f9d);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s56_90747620 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? lib$scripts$Modal$soy$$Templates.Modal.body(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s56_90747620.soyTemplateName = 'Templates.Modal.__deltemplate_s56_90747620';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s56_90747620);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s62_231e36e7 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? lib$scripts$Modal$soy$$Templates.Modal.footer(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s62_231e36e7.soyTemplateName = 'Templates.Modal.__deltemplate_s62_231e36e7';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s62_231e36e7);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s68_b8354b7d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? lib$scripts$Modal$soy$$Templates.Modal.header(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s68_b8354b7d.soyTemplateName = 'Templates.Modal.__deltemplate_s68_b8354b7d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', 0, lib$scripts$Modal$soy$$Templates.Modal.__deltemplate_s68_b8354b7d);\n\n    lib$scripts$Modal$soy$$Templates.Modal.body.params = [\"body\"];\n    lib$scripts$Modal$soy$$Templates.Modal.footer.params = [\"footer\"];\n    lib$scripts$Modal$soy$$Templates.Modal.header.params = [\"header\"];\n    'use strict';\n\n    /**\n     * Modal component.\n     */\n    class lib$scripts$Modal$$Modal extends lib$scripts$Component$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      /**\n       * Closes the tooltip.\n       */\n      close() {\n        this.visible = false;\n      }\n\n      /**\n       * @inheritDoc\n       */\n      disposeInternal() {\n        jspm_packages$github$alloyui$core$master$dom$dom$$default.exitDocument(this.overlayElement);\n        super.disposeInternal();\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncOverlay(overlay) {\n        jspm_packages$github$alloyui$core$master$dom$dom$$default[overlay ? 'enterDocument' : 'exitDocument'](this.overlayElement);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncVisible(visible) {\n        if (this.overlay) {\n          this.syncOverlay(visible);\n        }\n        super.syncVisible(visible);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      valueOverlayElementFn_() {\n        return jspm_packages$github$alloyui$core$master$dom$dom$$default.buildFragment('<div class=\"overlay\"></div>').firstChild\n      }\n    }\n\n    /**\n     * Default modal elementClasses.\n     * @default modal\n     * @type {String}\n     * @static\n     */\n    lib$scripts$Modal$$Modal.ELEMENT_CLASSES = 'modal';\n\n    lib$scripts$Modal$$Modal.ATTRS = {\n      /**\n       * Content to be placed inside modal body.\n       * @type {String}\n       */\n      body: {\n        validator: jspm_packages$github$alloyui$core$master$core$$default.isString\n      },\n\n      /**\n       * Modal default elementClasses attribute.\n       * @default centered\n       * @type {String}\n       */\n      elementClasses: {\n        value: 'centered'\n      },\n\n      /**\n       * Content to be placed inside modal footer.\n       * @type {String}\n       */\n      footer: {\n        validator: jspm_packages$github$alloyui$core$master$core$$default.isString\n      },\n\n      /**\n       * Content to be placed inside modal header.\n       * @type {String}\n       */\n      header: {\n        validator: jspm_packages$github$alloyui$core$master$core$$default.isString\n      },\n\n      /**\n       * Whether overlay should be visible when modal is visible.\n       * @type {boolean}\n       * @default true\n       */\n      overlay: {\n        validator: jspm_packages$github$alloyui$core$master$core$$default.isBoolean,\n        value: true\n      },\n\n      /**\n       * Element to be used as overlay.\n       * @type {Element}\n       */\n      overlayElement: {\n        initOnly: true,\n        valueFn: 'valueOverlayElementFn_'\n      }\n    };\n\n    jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.register('Modal', lib$scripts$Modal$$Modal);\n\n    var lib$scripts$Modal$$default = lib$scripts$Modal$$Modal;\n    'use strict';\n\n    class jspm_packages$github$alloyui$core$master$math$math$$math {\n      /**\n         * Tests if a rectangle intersects with another.\n         *\n         * <pre>\n         *  x0y0 --------       x2y2 --------\n         *      |       |           |       |\n         *      -------- x1y1       -------- x3y3\n         * </pre>\n         *\n         * Note that coordinates starts from top to down (y), left to right (x):\n         *\n         * <pre>\n         *      ------> (x)\n         *      |\n         *      |\n         *     (y)\n         * </pre>\n         *\n         * @param {number} x0 Horizontal coordinate of P0.\n         * @param {number} y0 Vertical coordinate of P0.\n         * @param {number} x1 Horizontal coordinate of P1.\n         * @param {number} y1 Vertical coordinate of P1.\n         * @param {number} x2 Horizontal coordinate of P2.\n         * @param {number} y2 Vertical coordinate of P2.\n         * @param {number} x3 Horizontal coordinate of P3.\n         * @param {number} y3 Vertical coordinate of P3.\n         * @return {boolean}\n         */\n        static intersectRect(x0, y0, x1, y1, x2, y2, x3, y3) {\n          return !(x2 > x1 || x3 < x0 || y2 > y1 || y3 < y0);\n        }\n    }\n\n    var jspm_packages$github$alloyui$core$master$math$math$$default = jspm_packages$github$alloyui$core$master$math$math$$math;\n    'use strict';\n\n    /**\n     * Class with static methods responsible for doing browser position checks.\n     */\n    class jspm_packages$github$alloyui$core$master$dom$position$$position {\n      /**\n       * Gets the size of an element and its position relative to the viewport.\n       * @param {!Element} node\n       * @return {!DOMRect} The returned value is a DOMRect object which is the\n       *     union of the rectangles returned by getClientRects() for the element,\n       *     i.e., the CSS border-boxes associated with the element.\n       */\n      static getRegion(node) {\n        return node.getBoundingClientRect();\n      }\n\n      /**\n       * Tests if a region is inside another.\n       * @param {DOMRect} r1\n       * @param {DOMRect} r2\n       * @return {boolean}\n       */\n      static insideRegion(r1, r2) {\n        return (r2.top >= r1.top) && (r2.bottom <= r1.bottom) &&\n                  (r2.right <= r1.right) && (r2.left >= r1.left);\n      }\n\n      /**\n       * Tests if a region is inside viewport region.\n       * @param {DOMRect} region\n       * @return {boolean}\n       */\n      static insideViewportRegion(region) {\n        return this.insideRegion(this.getViewportRegion(), region);\n      }\n\n      /**\n       * Computes the intersection region between two regions.\n       * @param {DOMRect} r1\n       * @param {DOMRect} r2\n       * @return {?DOMRect} Intersection region or null if regions doesn't\n       *     intersects.\n       */\n      static intersection(r1, r2) {\n        if (!this.intersectRegion(r1, r2)) {\n          return null;\n        }\n        var bottom = Math.min(r1.bottom, r2.bottom);\n        var right = Math.min(r1.right, r2.right);\n        var left = Math.max(r1.left, r2.left);\n        var top = Math.max(r1.top, r2.top);\n        return {\n          bottom: bottom,\n          height: bottom - top,\n          left: left,\n          right: right,\n          top: top,\n          width: right - left\n        };\n      }\n\n      /**\n       * Tests if a region intersects with another.\n       * @param {DOMRect} r1\n       * @param {DOMRect} r2\n       * @return {boolean}\n       */\n      static intersectRegion(r1, r2) {\n        return jspm_packages$github$alloyui$core$master$math$math$$default.intersectRect(\n          r1.top, r1.left, r1.bottom, r1.right,\n          r2.top, r2.left, r2.bottom, r2.right);\n      }\n\n      /**\n       * Gets the region of the viewport excluding scrollbar.\n       * @param {Window=} opt_window Optional window element to test.\n       * @return {!DOMRect} The returned value is a simulated DOMRect object which\n       *     is the union of the rectangles returned by getClientRects() for the\n       *     element, i.e., the CSS border-boxes associated with the element.\n       */\n      static getViewportRegion(opt_window) {\n        var region = this.getViewportSize(opt_window);\n        region.bottom = region.height;\n        region.left = 0;\n        region.right = region.width;\n        region.top = 0;\n        return region;\n      }\n\n      /**\n       * Gets the dimensions of the viewport excluding scrollbar.\n       * @param {Window=} opt_window Optional window element to test.\n       * @return {!Object} Object with values 'width' and 'height'.\n       */\n      static getViewportSize(opt_window) {\n        var el = (opt_window || window).document.documentElement;\n        return {\n          height: el.clientHeight,\n          width: el.clientWidth\n        };\n      }\n    }\n\n    var jspm_packages$github$alloyui$core$master$dom$position$$default = jspm_packages$github$alloyui$core$master$dom$position$$position;\n    'use strict';\n\n    /**\n     * Position utility. Computes region or best region to align an element with\n     * another. Regions are relative to viewport, make sure to use element with\n     * position fixed, or position absolute when the element first positioned\n     * parent is the body element.\n     */\n    class lib$scripts$Position$$Position {\n\n      /**\n       * Aligns the element with the best region around alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {!Element} element Element to be aligned.\n       * @param {!Element} alignElement Element to align with.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n       *     The initial position to try. Options `Position.Top`, `Position.Right`,\n       *     `Position.Bottom`, `Position.Left`.\n       * @static\n       */\n      static align(element, alignElement, position) {\n        var bestRegion = this.getAlignBestRegion(element, alignElement, position);\n        var left = bestRegion.left;\n        var top = bestRegion.top;\n\n        var computedStyle = window.getComputedStyle(element, null);\n        if (computedStyle.getPropertyValue('position') !== 'fixed') {\n          var docEl = window.document.documentElement;\n          bestRegion.top += docEl.clientTop + window.pageYOffset;\n          bestRegion.left += docEl.clientLeft + window.pageXOffset;\n        }\n\n        element.style.top = bestRegion.top + 'px';\n        element.style.left = bestRegion.left + 'px';\n      }\n\n      /**\n       * Returns the best region to align element with alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {!Element} element Element to be aligned.\n       * @param {!Element} alignElement Element to align with.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n       *     The initial position to try. Options `Position.Top`, `Position.Right`,\n       *     `Position.Bottom`, `Position.Left`.\n       * @return {DOMRect} Best region to align element.\n       * @static\n       */\n      static getAlignBestRegion(element, alignElement, position) {\n        var bestArea = 0;\n        var bestPosition = position;\n        var bestRegion = this.getAlignRegion(element, alignElement, bestPosition);\n        var tryPosition = bestPosition;\n        var tryRegion = bestRegion;\n\n        for (var i = 0; i < 4;) {\n          if (jspm_packages$github$alloyui$core$master$dom$position$$default.intersectRegion(jspm_packages$github$alloyui$core$master$dom$position$$default.getViewportRegion(), tryRegion)) {\n            var visibleRegion = jspm_packages$github$alloyui$core$master$dom$position$$default.intersection(jspm_packages$github$alloyui$core$master$dom$position$$default.getViewportRegion(), tryRegion);\n            var area = visibleRegion.width * visibleRegion.height;\n            if (area > bestArea) {\n              bestArea = area;\n              bestRegion = tryRegion;\n              bestPosition = tryPosition;\n            }\n            if (jspm_packages$github$alloyui$core$master$dom$position$$default.insideViewportRegion(tryRegion)) {\n              break;\n            }\n          }\n          tryPosition = (position + (++i)) % 4;\n          tryRegion = this.getAlignRegion(element, alignElement, tryPosition);\n        }\n\n        return bestRegion;\n      }\n\n      /**\n       * Returns the region to align element with alignElement. The element is\n       * always aligned in the middle of alignElement axis.\n       * @param {!Element} element Element to be aligned.\n       * @param {!Element} alignElement Element to align with.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n       *     The position to align. Options `Position.Top`, `Position.Right`,\n       *     `Position.Bottom`, `Position.Left`.\n       * @return {DOMRect} Region to align element.\n       * @static\n       */\n      static getAlignRegion(element, alignElement, position) {\n        var r1 = jspm_packages$github$alloyui$core$master$dom$position$$default.getRegion(alignElement);\n        var r2 = jspm_packages$github$alloyui$core$master$dom$position$$default.getRegion(element);\n        var top = 0;\n        var left = 0;\n\n        switch(position) {\n          case lib$scripts$Position$$Position.Top:\n            top = r1.top - r2.height;\n            left = r1.left + r1.width/2 - r2.width/2;\n            break;\n          case lib$scripts$Position$$Position.Right:\n            top = r1.top + r1.height/2 - r2.height/2;\n            left = r1.left + r1.width;\n            break;\n          case lib$scripts$Position$$Position.Bottom:\n            top = r1.bottom;\n            left = r1.left + r1.width/2 - r2.width/2;\n            break;\n          case lib$scripts$Position$$Position.Left:\n            top = r1.top + r1.height/2 - r2.height/2;\n            left = r1.left - r2.width;\n            break;\n        }\n\n        return {\n          bottom: top + r2.height,\n          height: r2.height,\n          left: left,\n          right: left + r2.width,\n          top: top,\n          width: r2.width\n        };\n      }\n\n      /**\n       * Checks if specified value is a valid position. Options `Position.Top`,\n       *     `Position.Right`, `Position.Bottom`, `Position.Left`.\n       * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} val\n       * @return {Boolean} Returns true if value is a valid position.\n       * @static\n       */\n      static isValidPosition(val) {\n        return 0 <= val && val <= 3;\n      }\n    }\n\n    /**\n     * Represents the `Position.Top` constant.\n     * @type {Number}\n     * @default 0\n     * @static\n     */\n    lib$scripts$Position$$Position.Top = 0;\n\n    /**\n     * Represents the `Position.Right` constant.\n     * @type {Number}\n     * @default 1\n     * @static\n     */\n    lib$scripts$Position$$Position.Right = 1;\n\n    /**\n     * Represents the `Position.Bottom` constant.\n     * @type {Number}\n     * @default 2\n     * @static\n     */\n    lib$scripts$Position$$Position.Bottom = 2;\n\n    /**\n     * Represents the `Position.Left` constant.\n     * @type {Number}\n     * @default 3\n     * @static\n     */\n    lib$scripts$Position$$Position.Left = 3;\n\n    var lib$scripts$Position$$default = lib$scripts$Position$$Position;\n    var lib$scripts$Tooltip$soy$$Templates = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from Tooltip.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.Tooltip.\n     * @hassoydeltemplate {ComponentElement}\n     * @hassoydeltemplate {ComponentTemplate}\n     * @hassoydeltemplate {Tooltip}\n     * @hassoydelcall {Component}\n     * @hassoydelcall {ComponentElement}\n     * @hassoydelcall {Tooltip}\n     */\n\n    if (typeof lib$scripts$Tooltip$soy$$Templates.Tooltip == 'undefined') { lib$scripts$Tooltip$soy$$Templates.Tooltip = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.content = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(opt_data.content));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.content.soyTemplateName = 'Templates.Tooltip.content';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s77_8d49094e = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Tooltip'}), null, opt_ijData)));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s77_8d49094e.soyTemplateName = 'Templates.Tooltip.__deltemplate_s77_8d49094e';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), '', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s77_8d49094e);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s80_606fdd83 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$Tooltip$soy$$Templates.Tooltip.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s80_606fdd83.soyTemplateName = 'Templates.Tooltip.__deltemplate_s80_606fdd83';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Tooltip', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s80_606fdd83);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s84_71828d2a = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + ((opt_data.elementContent) ? soy.$$escapeHtml(opt_data.elementContent) : '') + '</div>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s84_71828d2a.soyTemplateName = 'Templates.Tooltip.__deltemplate_s84_71828d2a';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s84_71828d2a);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s94_a8d4319d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s94_a8d4319d.soyTemplateName = 'Templates.Tooltip.__deltemplate_s94_a8d4319d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', 0, lib$scripts$Tooltip$soy$$Templates.Tooltip.__deltemplate_s94_a8d4319d);\n\n    lib$scripts$Tooltip$soy$$Templates.Tooltip.content.params = [\"content\"];\n    'use strict';\n\n    /**\n     * Tooltip component.\n     */\n    class lib$scripts$Tooltip$$Tooltip extends lib$scripts$Component$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      attached() {\n        this.align();\n      }\n\n      /**\n       * Aligns the tooltip with the best region around alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {Element=} opt_alignElement Optional element to align with.\n       */\n      align(opt_alignElement) {\n        this.syncAlignElement(opt_alignElement);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncAlignElement(alignElement) {\n        if (this.inDocument && alignElement) {\n          lib$scripts$Tooltip$$Tooltip.Position.align(this.element, alignElement, this.position);\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncContent(content) {\n        if (this.inDocument) {\n          jspm_packages$github$alloyui$core$master$dom$dom$$default.removeChildren(this.element);\n          jspm_packages$github$alloyui$core$master$dom$dom$$default.append(this.element, content);\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncVisible(visible) {\n        super.syncVisible(visible);\n        this.align();\n      }\n    }\n\n    /**\n     * @inheritDoc\n     * @see `Position` class.\n     * @static\n     */\n    lib$scripts$Tooltip$$Tooltip.Position = lib$scripts$Position$$default;\n\n    /**\n     * Default tooltip elementClasses.\n     * @default tooltip\n     * @type {String}\n     * @static\n     */\n    lib$scripts$Tooltip$$Tooltip.ELEMENT_CLASSES = 'tooltip';\n\n    /**\n     * Tooltip attrbutes definition.\n     * @type {Object}\n     * @static\n     */\n    lib$scripts$Tooltip$$Tooltip.ATTRS = {\n      /**\n       * Element to align tooltip with.\n       * @type {Element}\n       */\n      alignElement: {\n        setter: jspm_packages$github$alloyui$core$master$dom$dom$$default.toElement\n      },\n\n      /**\n       * Content to be placed inside tooltip.\n       * @type {String}\n       */\n      content: {\n        validator: jspm_packages$github$alloyui$core$master$core$$default.isString\n      },\n\n      /**\n       * The position to try alignment. If not possible the best position will be\n       * found.\n       * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n       * @default Position.Bottom\n       */\n      position: {\n        validator: lib$scripts$Tooltip$$Tooltip.Position.isValidPosition,\n        value: lib$scripts$Tooltip$$Tooltip.Position.Bottom\n      }\n    };\n\n    jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.register('Tooltip', lib$scripts$Tooltip$$Tooltip);\n\n    var lib$scripts$Tooltip$$default = lib$scripts$Tooltip$$Tooltip;\n    var lib$scripts$TooltipMenu$soy$$Templates = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.Templates;\n    // This file was automatically generated from TooltipMenu.soy.\n    // Please don't edit this file by hand.\n\n    /**\n     * @fileoverview Templates in namespace Templates.TooltipMenu.\n     * @hassoydeltemplate {ComponentElement}\n     * @hassoydeltemplate {ComponentTemplate}\n     * @hassoydeltemplate {TooltipMenu}\n     * @hassoydeltemplate {TooltipMenu.items}\n     * @hassoydelcall {Component}\n     * @hassoydelcall {ComponentElement}\n     * @hassoydelcall {TooltipMenu}\n     * @hassoydelcall {TooltipMenu.items}\n     */\n\n    if (typeof lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu == 'undefined') { lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu = {}; }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.content = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.content.soyTemplateName = 'Templates.TooltipMenu.content';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items = function(opt_data, opt_ignored, opt_ijData) {\n      var output = '';\n      var itemList100 = opt_data.items;\n      var itemListLen100 = itemList100.length;\n      for (var itemIndex100 = 0; itemIndex100 < itemListLen100; itemIndex100++) {\n        var itemData100 = itemList100[itemIndex100];\n        output += '<li class=\"tooltip-menu-item\"><a class=\"tooltip-menu-link\" href=\"' + soy.$$escapeHtmlAttribute(soy.$$filterNormalizeUri(itemData100.href ? itemData100.href : '#')) + '\">' + soy.$$escapeHtml(itemData100.content) + '</a></li>';\n      }\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(output);\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items.soyTemplateName = 'Templates.TooltipMenu.items';\n    }\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s107_cfc546d2 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<nav id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip-menu ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + soy.$$escapeHtml(opt_data.elementContent) + '</nav>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s107_cfc546d2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s107_cfc546d2';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s107_cfc546d2);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s115_c0ab3df3 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml('<ul id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-items\" class=\"tooltip-menu-list\">' + soy.$$escapeHtml(opt_data.elementContent) + '</ul>');\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s115_c0ab3df3.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s115_c0ab3df3';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s115_c0ab3df3);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s121_8f8c631d = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'TooltipMenu'}), null, opt_ijData)));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s121_8f8c631d.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s121_8f8c631d';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), '', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s121_8f8c631d);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s124_270e148b = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s124_270e148b.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s124_270e148b';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'TooltipMenu', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s124_270e148b);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s128_da5bead2 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', true)(opt_data, null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s128_da5bead2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s128_da5bead2';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s128_da5bead2);\n\n\n    /**\n     * @param {Object.<string, *>=} opt_data\n     * @param {(null|undefined)=} opt_ignored\n     * @param {Object.<string, *>=} opt_ijData\n     * @return {!soydata.SanitizedHtml}\n     * @suppress {checkTypes}\n     */\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s130_8278e063 = function(opt_data, opt_ignored, opt_ijData) {\n      return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n    };\n    if (goog.DEBUG) {\n      lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s130_8278e063.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s130_8278e063';\n    }\n    soy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', 0, lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.__deltemplate_s130_8278e063);\n\n    lib$scripts$TooltipMenu$soy$$Templates.TooltipMenu.items.params = [\"items\"];\n    'use strict';\n\n    /**\n     * TooltipMenu component.\n     */\n    class lib$scripts$TooltipMenu$$TooltipMenu extends lib$scripts$Component$$default {\n      /**\n       * @inheritDoc\n       */\n      constructor(opt_config) {\n        super(opt_config);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      attached() {\n        this.align();\n      }\n\n      /**\n       * Aligns the tooltip with the best region around alignElement. The best\n       * region is defined by clockwise rotation starting from the specified\n       * `position`. The element is always aligned in the middle of alignElement\n       * axis.\n       * @param {Element=} opt_alignElement Optional element to align with.\n       */\n      align(opt_alignElement) {\n        this.syncAlignElement(opt_alignElement);\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncAlignElement(alignElement) {\n        if (this.inDocument && alignElement) {\n          lib$scripts$TooltipMenu$$TooltipMenu.Position.align(this.element, alignElement, this.position);\n        }\n      }\n\n      /**\n       * @inheritDoc\n       */\n      syncVisible(visible) {\n        super.syncVisible(visible);\n        this.align();\n      }\n    }\n\n    /**\n     * @inheritDoc\n     * @see `Position` class.\n     * @static\n     */\n    lib$scripts$TooltipMenu$$TooltipMenu.Position = lib$scripts$Position$$default;\n\n    /**\n     * Default tooltip elementClasses.\n     * @default tooltip\n     * @type {String}\n     * @static\n     */\n    lib$scripts$TooltipMenu$$TooltipMenu.ELEMENT_CLASSES = 'tooltip-menu';\n\n    /**\n     * TooltipMenu attrbutes definition.\n     * @type {Object}\n     * @static\n     */\n    lib$scripts$TooltipMenu$$TooltipMenu.ATTRS = {\n      /**\n       * Element to align tooltip with.\n       * @type {Element}\n       */\n      alignElement: {\n        setter: jspm_packages$github$alloyui$core$master$dom$dom$$default.toElement\n      },\n\n      /**\n       * Items to be placed inside tooltip menu. Each item must contain at least a\n       * label key.\n       * @type {!Array.<!object>}\n       */\n      items: {\n        validator: Array.isArray,\n        valueFn: function() {\n          return [];\n        }\n      },\n\n      /**\n       * The position to try alignment. If not possible the best position will be\n       * found.\n       * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n       * @default Position.Bottom\n       */\n      position: {\n        validator: lib$scripts$TooltipMenu$$TooltipMenu.Position.isValidPosition,\n        value: lib$scripts$TooltipMenu$$TooltipMenu.Position.Bottom\n      }\n    };\n\n    jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$default.register('TooltipMenu', lib$scripts$TooltipMenu$$TooltipMenu);\n\n    var lib$scripts$TooltipMenu$$default = lib$scripts$TooltipMenu$$TooltipMenu;\n    this.ui = this.ui || {};\n    this.ui.Component = lib$scripts$Component$$Component;\n    this.ui.Modal = lib$scripts$Modal$$Modal;\n    this.ui.Position = lib$scripts$Position$$Position;\n    this.ui.Tooltip = lib$scripts$Tooltip$$Tooltip;\n    this.ui.TooltipMenu = lib$scripts$TooltipMenu$$TooltipMenu;\n    this.ui.core = jspm_packages$github$alloyui$core$master$core$$core;\n    this.ui.SoyComponent = jspm_packages$github$alloyui$core$master$soy$SoyComponent$$SoyComponent;\n    this.ui.dom = jspm_packages$github$alloyui$core$master$dom$dom$$dom;\n    this.ui.ComponentRegistry = jspm_packages$github$alloyui$core$master$component$ComponentRegistry$$ComponentRegistry;\n    this.ui.position = jspm_packages$github$alloyui$core$master$dom$position$$position;\n    this.ui.array = jspm_packages$github$alloyui$core$master$array$array$$array;\n    this.ui.html = jspm_packages$github$alloyui$core$master$html$html$$html;\n    this.ui.object = jspm_packages$github$alloyui$core$master$object$object$$object;\n    this.ui.Component = jspm_packages$github$alloyui$core$master$component$Component$$Component;\n    this.ui.ComponentCollector = jspm_packages$github$alloyui$core$master$component$ComponentCollector$$ComponentCollector;\n    this.ui.EventsCollector = jspm_packages$github$alloyui$core$master$component$EventsCollector$$EventsCollector;\n    this.ui.DomEventHandle = jspm_packages$github$alloyui$core$master$events$DomEventHandle$$DomEventHandle;\n    this.ui.math = jspm_packages$github$alloyui$core$master$math$math$$math;\n    this.ui.string = jspm_packages$github$alloyui$core$master$string$string$$string;\n    this.ui.features = jspm_packages$github$alloyui$core$master$dom$features$$features;\n    this.ui.Attribute = jspm_packages$github$alloyui$core$master$attribute$Attribute$$Attribute;\n    this.ui.EventEmitterProxy = jspm_packages$github$alloyui$core$master$events$EventEmitterProxy$$EventEmitterProxy;\n    this.ui.EventHandler = jspm_packages$github$alloyui$core$master$events$EventHandler$$EventHandler;\n    this.ui.Disposable = jspm_packages$github$alloyui$core$master$disposable$Disposable$$Disposable;\n    this.ui.EventHandle = jspm_packages$github$alloyui$core$master$events$EventHandle$$EventHandle;\n    this.ui.EventEmitter = jspm_packages$github$alloyui$core$master$events$EventEmitter$$EventEmitter;\n    this.ui.CancellablePromise = jspm_packages$github$alloyui$core$master$promise$Promise$$CancellablePromise;\n    this.ui.async = jspm_packages$github$alloyui$core$master$promise$Promise$$async;\n    this.ui.WildcardTrie = jspm_packages$github$alloyui$core$master$structs$WildcardTrie$$WildcardTrie;\n    this.ui.Trie = jspm_packages$github$alloyui$core$master$structs$Trie$$Trie;\n}).call(this);","'use strict';\n\n/**\n * A collection of core utility functions.\n * @const\n */\nclass core {\n  /**\n   * When defining a class Foo with an abstract method bar(), you can do:\n   * Foo.prototype.bar = core.abstractMethod\n   *\n   * Now if a subclass of Foo fails to override bar(), an error will be thrown\n   * when bar() is invoked.\n   *\n   * @type {!Function}\n   * @throws {Error} when invoked to indicate the method should be overridden.\n   */\n  static abstractMethod() {\n    throw Error('Unimplemented abstract method');\n  }\n\n  /**\n   * Loops constructor super classes collecting its properties values. If\n   * property is not available on the super class `undefined` will be\n   * collected as value for the class hierarchy position.\n   * @param {!function()} constructor Class constructor.\n   * @param {string} propertyName Property name to be collected.\n   * @return {Array.<*>} Array of collected values.\n   * TODO(*): Rethink superclass loop.\n   */\n  static collectSuperClassesProperty(constructor, propertyName) {\n    var propertyValues = [constructor[propertyName]];\n    while (constructor.__proto__ && !constructor.__proto__.isPrototypeOf(Function)) {\n      constructor = constructor.__proto__;\n      propertyValues.push(constructor[propertyName]);\n    }\n    return propertyValues;\n  }\n\n  /**\n   * Gets an unique id. If `opt_object` argument is passed, the object is\n   * mutated with an unique id. Consecutive calls with the same object\n   * reference won't mutate the object again, instead the current object uid\n   * returns. See {@link core.UID_PROPERTY}.\n   * @type {opt_object} Optional object to be mutated with the uid. If not\n   *     specified this method only returns the uid.\n   * @throws {Error} when invoked to indicate the method should be overridden.\n   */\n  static getUid(opt_object) {\n    if (opt_object) {\n      return opt_object[core.UID_PROPERTY] ||\n        (opt_object[core.UID_PROPERTY] = core.uniqueIdCounter_++);\n    }\n    return core.uniqueIdCounter_++;\n  }\n\n  /**\n   * The identity function. Returns its first argument.\n   * @param {*=} opt_returnValue The single value that will be returned.\n   * @return {?} The first argument.\n   */\n  static identityFunction(opt_returnValue) {\n    return opt_returnValue;\n  }\n\n  /**\n   * Returns true if the specified value is a boolean.\n   * @param {?} val Variable to test.\n   * @return {boolean} Whether variable is boolean.\n   */\n  static isBoolean(val) {\n    return typeof val === 'boolean';\n  }\n\n  /**\n   * Returns true if the specified value is not undefined.\n   * @param {?} val Variable to test.\n   * @return {boolean} Whether variable is defined.\n   */\n  static isDef(val) {\n    return val !== undefined;\n  }\n\n  /**\n   * Returns true if value is not undefined or null.\n   * @param {*} val\n   * @return {Boolean}\n   */\n  static isDefAndNotNull(val) {\n    return core.isDef(val) && !core.isNull(val);\n  }\n\n  /**\n   * Returns true if value is a dom element.\n   * @param {*} val\n   * @return {Boolean}\n   */\n  static isElement(val) {\n    return val && typeof val === 'object' && val.nodeType === 1;\n  }\n\n  /**\n   * Returns true if the specified value is a function.\n   * @param {?} val Variable to test.\n   * @return {boolean} Whether variable is a function.\n   */\n  static isFunction(val) {\n    return typeof val === 'function';\n  }\n\n  /**\n   * Returns true if value is null.\n   * @param {*} val\n   * @return {Boolean}\n   */\n  static isNull(val) {\n    return val === null;\n  }\n\n  /**\n   * Returns true if the specified value is an object. This includes arrays\n   * and functions.\n   * @param {?} val Variable to test.\n   * @return {boolean} Whether variable is an object.\n   */\n  static isObject(val) {\n    var type = typeof val;\n    return type === 'object' && val !== null || type === 'function';\n  }\n\n  /**\n   * Returns true if value is a string.\n   * @param {*} val\n   * @return {Boolean}\n   */\n  static isString(val) {\n    return typeof val === 'string';\n  }\n\n  /**\n   * Merges the values of a static property a class with the values of that\n   * property for all its super classes, and stores it as a new static\n   * property of that class. If the static property already existed, it won't\n   * be recalculated.\n   * @param {!function()} constructor Class constructor.\n   * @param {string} propertyName Property name to be collected.\n   * @param {function(*, *):*=} opt_mergeFn Function that receives an array filled\n   *   with the values of the property for the current class and all its super classes.\n   *   Should return the merged value to be stored on the current class.\n   * @return {*} The value of the merged property.\n   */\n  static mergeSuperClassesProperty(constructor, propertyName, opt_mergeFn) {\n    var mergedName = propertyName + '_MERGED';\n    if (constructor.hasOwnProperty(mergedName)) {\n      return constructor[mergedName];\n    }\n\n    var merged = core.collectSuperClassesProperty(constructor, propertyName);\n    if (opt_mergeFn) {\n      merged = opt_mergeFn(merged);\n    }\n    constructor[mergedName] = merged;\n    return constructor[mergedName];\n  }\n\n  /**\n   * Null function used for default values of callbacks, etc.\n   * @return {void} Nothing.\n   */\n  static nullFunction() {\n\n  }\n}\n\n/**\n * Unique id property prefix.\n * @type {String}\n * @protected\n */\ncore.UID_PROPERTY = 'core_' + ((Math.random() * 1e9) >>> 0);\n\n/**\n * Counter for unique id.\n * @type {Number}\n * @private\n */\ncore.uniqueIdCounter_ = 1;\n\nexport default core;\n","'use strict';\n\nclass array {\n  /**\n   * Checks if the given arrays have the same content.\n   * @param {!Array<*>} arr1\n   * @param {!Array<*>} arr2\n   * @return {boolean}\n   */\n  static equal(arr1, arr2) {\n    for (var i = 0; i < arr1.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n    return arr1.length === arr2.length;\n  }\n\n  /**\n   * Returns the first value in the given array that isn't undefined.\n   * @param {!Array} arr\n   * @return {*}\n   */\n  static firstDefinedValue(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] !== undefined) {\n        return arr[i];\n      }\n    }\n  }\n\n  /**\n   * Transforms the input nested array to become flat.\n   * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n   * @param {Array.<*>} opt_output Optional output array.\n   * @return {Array.<*>} Flat array.\n   */\n  static flatten(arr, opt_output) {\n    var output = opt_output || [];\n    for (var i = 0; i < arr.length; i++) {\n      if (Array.isArray(arr[i])) {\n        array.flatten(arr[i], output);\n      } else {\n        output.push(arr[i]);\n      }\n    }\n    return output;\n  }\n\n  /**\n   * Removes the first occurrence of a particular value from an array.\n   * @param {Array.<T>} arr Array from which to remove value.\n   * @param {T} obj Object to remove.\n   * @return {boolean} True if an element was removed.\n   * @template T\n   */\n   static remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var rv;\n    if ( (rv = i >= 0) ) {\n      array.removeAt(arr, i);\n    }\n    return rv;\n  }\n\n  /**\n   * Removes from an array the element at index i\n   * @param {Array} arr Array or array like object from which to remove value.\n   * @param {number} i The index to remove.\n   * @return {boolean} True if an element was removed.\n   */\n  static removeAt(arr, i) {\n    return Array.prototype.splice.call(arr, i, 1).length === 1;\n  }\n}\n\nexport default array;\n","'use strict';\n\nclass object {\n\t/**\n\t * Copies all the members of a source object to a target object.\n\t * @param {Object} target Target object.\n\t * @param {...Object} var_args The objects from which values will be copied.\n\t * @return {Object} Returns the target object reference.\n\t */\n\tstatic mixin(target) {\n\t  var key, source;\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    source = arguments[i];\n\t    for (key in source) {\n\t      target[key] = source[key];\n\t    }\n\t  }\n\t  return target;\n\t}\n}\n\nexport default object;\n","'use strict';\n\n/**\n * Disposable utility. When inherited provides the `dispose` function to its\n * subclass, which is responsible for disposing of any object references\n * when an instance won't be used anymore. Subclasses should override\n * `disposeInternal` to implement any specific disposing logic.\n * @constructor\n */\nclass Disposable {\n  constructor() {\n    /**\n     * Flag indicating if this instance has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed_ = false;\n  }\n\n  /**\n   * Disposes of this instance's object references. Calls `disposeInternal`.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposeInternal();\n      this.disposed_ = true;\n    }\n  }\n\n  /**\n   * Subclasses should override this method to implement any specific\n   * disposing logic (like clearing references and calling `dispose` on other\n   * disposables).\n   */\n  disposeInternal() {\n  }\n\n  /**\n   * Checks if this instance has already been disposed.\n   * @return {boolean}\n   */\n  isDisposed() {\n    return this.disposed_;\n  }\n}\n\nexport default Disposable;\n","'use strict';\n\nimport Disposable from \"jspm_packages/github/alloyui/core@master/disposable/Disposable\";\n\n/**\n * EventHandle utility. Holds information about an event subscription, and\n * allows removing them easily.\n * EventHandle is a Disposable, but it's important to note that the\n * EventEmitter that created it is not the one responsible for disposing it.\n * That responsibility is for the code that holds a reference to it.\n * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n * @param {string} event The name of the event that was subscribed to.\n * @param {!Function} listener The listener subscribed to the event.\n * @constructor\n * @extends {Disposable}\n */\nclass EventHandle extends Disposable {\n  constructor(emitter, event, listener) {\n    /**\n     * The EventEmitter instance that the event was subscribed to.\n     * @type {EventEmitter}\n     * @protected\n     */\n    this.emitter_ = emitter;\n\n    /**\n     * The name of the event that was subscribed to.\n     * @type {string}\n     * @protected\n     */\n    this.event_ = event;\n\n    /**\n     * The listener subscribed to the event.\n     * @type {Function}\n     * @protected\n     */\n    this.listener_ = listener;\n  }\n\n  /**\n   * Disposes of this instance's object references.\n   * @override\n   */\n  disposeInternal() {\n    this.emitter_ = null;\n    this.listener_ = null;\n  }\n\n  /**\n   * Removes the listener subscription from the emitter.\n   */\n  removeListener() {\n    if (!this.emitter_.isDisposed()) {\n      this.emitter_.removeListener(this.event_, this.listener_);\n    }\n  }\n}\n\nexport default EventHandle;\n","'use strict';\n\nimport EventHandle from \"jspm_packages/github/alloyui/core@master/events/EventHandle\";\n\n/**\n * This is a special EventHandle, that is responsible for dom events, instead\n * of EventEmitter events.\n * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n * @param {string} event The name of the event that was subscribed to.\n * @param {!Function} listener The listener subscribed to the event.\n * @constructor\n * @extends {EventHandle}\n */\nclass DomEventHandle extends EventHandle {\n  constructor(emitter, event, listener) {\n    super(emitter, event, listener);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeListener() {\n    this.emitter_.removeEventListener(this.event_, this.listener_);\n  }\n}\n\nexport default DomEventHandle;\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport object from \"jspm_packages/github/alloyui/core@master/object/object\";\nimport DomEventHandle from \"jspm_packages/github/alloyui/core@master/events/DomEventHandle\";\n\nclass dom {\n  /**\n   * Adds the requested CSS classes to an element.\n   * @param {!Element} element The element to add CSS classes to.\n   * @param {!Array<string>} classes CSS classes to add.\n   */\n  static addClasses(element, classes) {\n    if ('classList' in element) {\n      dom.addClassesWithNative_(element, classes);\n    } else {\n      dom.addClassesWithoutNative_(element, classes);\n    }\n  }\n\n  /**\n   * Adds the requested CSS classes to an element using classList.\n   * @param {!Element} element The element to add CSS classes to.\n   * @param {!Array<string>} classes CSS classes to add.\n   * @protected\n   */\n  static addClassesWithNative_(element, classes) {\n    classes.forEach(function(className) {\n      element.classList.add(className);\n    });\n  }\n\n  /**\n   * Adds the requested CSS classes to an element without using classList.\n   * @param {!Element} element The element to add CSS classes to.\n   * @param {!Array<string>} classes CSS classes to add.\n   * @protected\n   */\n  static addClassesWithoutNative_(element, classes) {\n    var elementClassName = ' ' + element.className + ' ';\n    var classesToAppend = '';\n\n    for (var i = 0; i < classes.length; i++) {\n      var className = classes[i];\n\n      if (elementClassName.indexOf(' ' + className + ' ') === -1) {\n        classesToAppend += ' ' + className;\n      }\n    }\n\n    if (classesToAppend) {\n      element.className = element.className + classesToAppend;\n    }\n  }\n\n  /**\n   * Appends a child node with text or other nodes to a parent node. If\n   * child is a HTML string it will be automatically converted to a document\n   * fragment before appending it to the parent.\n   * @param {!Element} parent The node to append nodes to.\n   * @param {!Element|String} child The thing to append to the parent.\n   * @return {!Element} The appended child.\n   */\n  static append(parent, child) {\n    if (core.isString(child)) {\n      child = dom.buildFragment(child);\n    }\n    return parent.appendChild(child);\n  }\n\n  /**\n   * Helper for converting a HTML string into a document fragment.\n   * @param {string} htmlString The HTML string to convert.\n   * @return {!Element} The resulting document fragment.\n   */\n  static buildFragment(htmlString) {\n    var tempDiv = document.createElement('div');\n    tempDiv.innerHTML = '<br>' + htmlString;\n    tempDiv.removeChild(tempDiv.firstChild);\n\n    var fragment = document.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n    return fragment;\n  }\n\n  /**\n   * Listens to the specified event on the given DOM element, but only calls the\n   * callback with the event when it triggered by elements that match the given\n   * selector.\n   * @param {!Element} element The container DOM element to listen to the event on.\n   * @param {string} eventName The name of the event to listen to.\n   * @param {string} selector The selector that matches the child elements that\n   *   the event should be triggered for.\n   * @param {!function(!Object)} callback Function to be called when the event is\n   *   triggered. It will receive the normalized event object.\n   * @return {!DomEventHandle} Can be used to remove the listener.\n   */\n  static delegate(element, eventName, selector, callback) {\n    return dom.on(\n      element,\n      eventName,\n      dom.handleDelegateEvent_.bind(null, selector, callback)\n    );\n  }\n\n  /**\n   * Inserts node in document as last element.\n   * @param {Element} node Element to remove children from.\n   */\n  static enterDocument(node) {\n    dom.append(document.body, node);\n  }\n\n  /**\n   * Removes node from document.\n   * @param {Element} node Element to remove children from.\n   */\n  static exitDocument(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * This is called when an event is triggered by a delegate listener (see\n   * `dom.delegate` for more details).\n   * @param {string} selector The selector or element that matches the child\n   *   elements that the event should be triggered for.\n   * @param {!function(!Object)} callback Function to be called when the event\n   *   is triggered. It will receive the normalized event object.\n   * @param {!Event} event The event payload.\n   * @return {boolean} False if at least one of the triggered callbacks returns\n   *   false, or true otherwise.\n   */\n  static handleDelegateEvent_(selector, callback, event) {\n    dom.normalizeDelegateEvent_(event);\n\n    var currentElement = event.target;\n    var returnValue = true;\n\n    while (currentElement && !event.stopped) {\n      if (core.isString(selector) && dom.match(currentElement, selector)) {\n        event.delegateTarget = currentElement;\n        returnValue &= callback(event);\n      }\n      currentElement = currentElement.parentNode;\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Checks if the given element has the requested css class.\n   * @param {!Element} element\n   * @param {string} className\n   * @return {boolean}\n   */\n  static hasClass(element, className) {\n    if ('classList' in element) {\n      return dom.hasClassWithNative_(element, className);\n    } else {\n      return dom.hasClassWithoutNative_(element, className);\n    }\n  }\n\n  /**\n   * Checks if the given element has the requested css class using classList.\n   * @param {!Element} element\n   * @param {string} className\n   * @return {boolean}\n   * @protected\n   */\n  static hasClassWithNative_(element, className) {\n    return element.classList.contains(className);\n  }\n\n  /**\n   * Checks if the given element has the requested css class without using classList.\n   * @param {!Element} element\n   * @param {string} className\n   * @return {boolean}\n   * @protected\n   */\n  static hasClassWithoutNative_(element, className) {\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n  }\n\n  /**\n   * Check if an element matches a given selector.\n   * @param {Element} element\n   * @param {string} selector\n   * @return {boolean}\n   */\n  static match(element, selector) {\n    if (!element || element.nodeType !== 1) {\n      return false;\n    }\n\n    var p = Element.prototype;\n    var m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n    if (m) {\n      return m.call(element, selector);\n    }\n\n    return dom.matchFallback_(element, selector);\n  }\n\n  /**\n   * Check if an element matches a given selector, using an internal implementation\n   * instead of calling existing javascript functions.\n   * @param {Element} element\n   * @param {string} selector\n   * @return {boolean}\n   * @protected\n   */\n  static matchFallback_(element, selector) {\n    var nodes = document.querySelectorAll(selector, element.parentNode);\n    for (var i = 0; i < nodes.length; ++i) {\n      if (nodes[i] === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Normalizes the event payload for delegate listeners.\n   * @param {!Event} event\n   */\n  static normalizeDelegateEvent_(event) {\n    event.stopPropagation = dom.stopPropagation_;\n    event.stopImmediatePropagation = dom.stopImmediatePropagation_;\n  }\n\n  /**\n   * Listens to the specified event on the given DOM element. This function normalizes\n   * DOM event payloads and functions so they'll work the same way on all supported\n   * browsers.\n   * @param {!Element} element The DOM element to listen to the event on.\n   * @param {string} eventName The name of the event to listen to.\n   * @param {!function(!Object)} callback Function to be called when the event is\n   *   triggered. It will receive the normalized event object.\n   * @return {!DomEventHandle} Can be used to remove the listener.\n   */\n  static on(element, eventName, callback) {\n    element.addEventListener(eventName, callback);\n    return new DomEventHandle(element, eventName, callback);\n  }\n\n  /**\n   * Removes all the child nodes on a DOM node.\n   * @param {Element} node Element to remove children from.\n   */\n  static removeChildren(node) {\n    var child;\n    while ((child = node.firstChild)) {\n      node.removeChild(child);\n    }\n  }\n\n  /**\n   * Removes the requested CSS classes from an element.\n   * @param {!Element} element The element to remove CSS classes from.\n   * @param {!Array<string>} classes CSS classes to remove.\n   */\n  static removeClasses(element, classes) {\n    if ('classList' in element) {\n      dom.removeClassesWithNative_(element, classes);\n    } else {\n      dom.removeClassesWithoutNative_(element, classes);\n    }\n  }\n\n  /**\n   * Removes the requested CSS classes from an element using classList.\n   * @param {!Element} element The element to remove CSS classes from.\n   * @param {!Array<string>} classes CSS classes to remove.\n   * @protected\n   */\n  static removeClassesWithNative_(element, classes) {\n    classes.forEach(function(className) {\n      element.classList.remove(className);\n    });\n  }\n\n  /**\n   * Removes the requested CSS classes from an element without using classList.\n   * @param {!Element} element The element to remove CSS classes from.\n   * @param {!Array<string>} classes CSS classes to remove.\n   * @protected\n   */\n  static removeClassesWithoutNative_(element, classes) {\n    var elementClassName = ' ' + element.className + ' ';\n\n    for (var i = 0; i < classes.length; i++) {\n      elementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n    }\n\n    element.className = elementClassName.trim();\n  }\n\n  /**\n   * The function that replaces `stopImmediatePropagation_` for events.\n   * @protected\n   */\n  static stopImmediatePropagation_() {\n    this.stopped = true;\n    Event.prototype.stopImmediatePropagation.call(this);\n  }\n\n  /**\n   * The function that replaces `stopPropagation` for events.\n   * @protected\n   */\n  static stopPropagation_() {\n    this.stopped = true;\n    Event.prototype.stopPropagation.call(this);\n  }\n\n  /**\n   * Checks if the given element supports the given event type.\n   * @param {!Element} element The DOM element to check.\n   * @param {string} eventName The name of the event to check.\n   * @return {boolean}\n   */\n  static supportsEvent(element, eventName) {\n    return 'on' + eventName in element;\n  }\n\n  /**\n   * Converts the given argument to a DOM element. Strings are assumed to\n   * be selectors, and so a matched element will be returned. If the arg\n   * is already a DOM element it will be the return value.\n   * @param {string|Element} selectorOrElement\n   * @return {Element} The converted element, or null if none was found.\n   */\n  static toElement(selectorOrElement) {\n    if (core.isElement(selectorOrElement)) {\n      return selectorOrElement;\n    } else if (core.isString(selectorOrElement)) {\n      return document.querySelector(selectorOrElement);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Triggers the specified event on the given element.\n   * NOTE: This should mostly be used for testing, not on real code.\n   * @param {!Element} element The node that should trigger the event.\n   * @param {string} eventName The name of the event to be triggred.\n   * @param {Object=} opt_eventObj An object with data that should be on the\n   *   triggered event's payload.\n   */\n  static triggerEvent(element, eventName, opt_eventObj) {\n    var eventObj = document.createEvent('HTMLEvents');\n    eventObj.initEvent(eventName, true, true);\n    object.mixin(eventObj, opt_eventObj);\n    element.dispatchEvent(eventObj);\n  }\n}\n\nexport default dom;\n","'use strict';\n\nclass string {\n\t/**\n\t * Removes the breaking spaces from the left and right of the string and\n\t * collapses the sequences of breaking spaces in the middle into single spaces.\n\t * The original and the result strings render the same way in HTML.\n\t * @param {string} str A string in which to collapse spaces.\n\t * @return {string} Copy of the string with normalized breaking spaces.\n\t */\n\tstatic collapseBreakingSpaces(str) {\n\t  return str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n\t}\n\n\t/**\n\t * Calculates the hashcode for a string. The hashcode value is computed by\n\t * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n\t * property of using 31 prime is that the multiplication can be replaced by\n\t * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n\t * Modern VMs do this sort of optimization automatically.\n\t * @param {String} val Target string.\n\t * @return {Number} Returns the string hashcode.\n\t */\n\tstatic hashCode(val) {\n\t  var hash = 0;\n\t  for (var i = 0, len = val.length; i < len; i++) {\n\t    hash = 31 * hash + val.charCodeAt(i);\n\t    hash %= 0x100000000;\n\t  }\n\t  return hash;\n\t}\n\n\t/**\n\t * Replaces interval into the string with specified value, e.g.\n\t * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n\t * @param {string} str The input string.\n\t * @param {Number} start Start interval position to be replaced.\n\t * @param {Number} end End interval position to be replaced.\n\t * @param {string} value The value that replaces the specified interval.\n\t * @return {string}\n\t */\n\tstatic replaceInterval(str, start, end, value) {\n\t  return str.substring(0, start) + value + str.substring(end);\n\t}\n}\n\nexport default string;\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport string from \"jspm_packages/github/alloyui/core@master/string/string\";\n\nclass html {\n  /**\n   * Minifies given HTML source by removing extra white spaces, comments and\n   * other unneeded characters without breaking the content structure. As a\n   * result HTML become smaller in size.\n   * - Contents within <code>, <pre>, <script>, <style>, <textarea> and\n   *   conditional comments tags are preserved.\n   * - Comments are removed.\n   * - Conditional comments are preserved.\n   * - Breaking spaces are collapsed into a single space.\n   * - Unneeded spaces inside tags (around = and before />) are removed.\n   * - Spaces between tags are removed, even from inline-block elements.\n   * - Spaces surrounding tags are removed.\n   * - DOCTYPE declaration is simplified to <!DOCTYPE html>.\n   * - Does not remove default attributes from <script>, <style>, <link>,\n   *   <form>, <input>.\n   * - Does not remove values from boolean tag attributes.\n   * - Does not remove \"javascript:\" from in-line event handlers.\n   * - Does not remove http:// and https:// protocols.\n   * @param {string} htmlString Input HTML to be compressed.\n   * @return {string} Compressed version of the HTML.\n   */\n  static compress(htmlString) {\n    var preserved = {};\n    htmlString = html.preserveBlocks_(htmlString, preserved);\n    htmlString = html.simplifyDoctype_(htmlString);\n    htmlString = html.removeComments_(htmlString);\n    htmlString = html.removeIntertagSpaces_(htmlString);\n    htmlString = html.collapseBreakingSpaces_(htmlString);\n    htmlString = html.removeSpacesInsideTags_(htmlString);\n    htmlString = html.removeSurroundingSpaces_(htmlString);\n    htmlString = html.returnBlocks_(htmlString, preserved);\n    return htmlString.trim();\n  }\n\n  /**\n   * Collapses breaking spaces into a single space.\n   * @param {string} htmlString\n   * @return {string}\n   * @protected\n   */\n  static collapseBreakingSpaces_(htmlString) {\n    return string.collapseBreakingSpaces(htmlString);\n  }\n\n  /**\n   * Searches for first occurrence of the specified open tag string pattern\n   * and from that point finds next \">\" position, identified as possible tag\n   * end position.\n   * @param {string} htmlString\n   * @param {string} openTag Open tag string pattern without open tag ending\n   *     character, e.g. \"<textarea\" or \"<code\".\n   * @return {string}\n   * @protected\n   */\n  static lookupPossibleTagBoundary_(htmlString, openTag) {\n    var tagPos = htmlString.indexOf(openTag);\n    if (tagPos > -1) {\n      tagPos += htmlString.substring(tagPos).indexOf('>') + 1;\n    }\n    return tagPos;\n  }\n\n  /**\n   * Searches for first occurrence of the specified open tag string pattern\n   * and from that point finds correct closing tag.\n   * @param {string} openTagPattern\n   * @param {string} openTag Open tag string pattern without open tag ending\n   *     character, e.g. \"<textarea\" or \" data-foo=\".\n   * @return {string}\n   * @protected\n   */\n  static lookupPossibleTagEnd_(htmlString, openTagPattern) {\n    var tagEnd = html.lookupPossibleTagBoundary_(htmlString, openTagPattern);\n    var abut = 0;\n    var malformed = true;\n    while (tagEnd < htmlString.length) {\n      if (htmlString.charAt(tagEnd) === '<') {\n        if (htmlString.charAt(tagEnd + 1) === '/') {\n          if (abut === 0) {\n            malformed = false;\n            break;\n          }\n          abut--;\n        }\n        else {\n          abut++;\n        }\n      }\n      tagEnd++;\n    }\n    if (malformed) {\n      throw new Error('Cannot remove element contents on malformed HTML.');\n    }\n    return tagEnd;\n  }\n\n  /**\n   * Preserves contents inside any <code>, <pre>, <script>, <style>,\n   * <textarea> and conditional comment tags. When preserved, original content\n   * are replaced with an unique generated block id and stored into\n   * `preserved` map.\n   * @param {string} htmlString\n   * @param {Object} preserved Object to preserve the content indexed by an\n   *     unique generated block id.\n   * @return {html} The preserved HTML.\n   * @protected\n   */\n  static preserveBlocks_(htmlString, preserved) {\n    htmlString = html.preserveOuterHtml_(htmlString, '<!--[if', '<![endif]-->', preserved);\n    htmlString = html.preserveInnerHtml_(htmlString, '<code', '</code', preserved);\n    htmlString = html.preserveInnerHtml_(htmlString, '<pre', '</pre', preserved);\n    htmlString = html.preserveInnerHtml_(htmlString, '<script', '</script', preserved);\n    htmlString = html.preserveInnerHtml_(htmlString, '<style', '</style', preserved);\n    htmlString = html.preserveInnerHtml_(htmlString, '<textarea', '</textarea', preserved);\n    return htmlString;\n  }\n\n  /**\n   * Removes inner contents inside tags that matches with the specified tag\n   * pattern recursively.\n   * @param {string} htmlString\n   * @param {string} openTagPattern Open tag string pattern without open tag\n   *     ending character, e.g. \"<textarea\" or \"<code\".\n   * @return {html} The HTML with inner content removed for desired tag.\n   * @protected\n   */\n  static removeElementContent(htmlString, openTagPattern) {\n    var tagPosEnd = html.lookupPossibleTagBoundary_(htmlString, openTagPattern);\n    if (tagPosEnd > -1) {\n      var tagPosEndBoundary = html.lookupPossibleTagEnd_(htmlString, openTagPattern);\n      htmlString = string.replaceInterval(htmlString, tagPosEnd, tagPosEndBoundary, '');\n      htmlString = htmlString.replace(openTagPattern, '%%%~1~%%%');\n      htmlString = html.removeElementContent(htmlString, openTagPattern);\n    }\n    htmlString = htmlString.replace(/%%%~1~%%%/g, openTagPattern);\n    return htmlString;\n  }\n\n  /**\n   * Preserves inner contents inside the specified tag. When preserved,\n   * original content are replaced with an unique generated block id and\n   * stored into `preserved` map.\n   * @param {string} htmlString\n   * @param {string} openTag Open tag string pattern without open tag ending\n   *     character, e.g. \"<textarea\" or \"<code\".\n   * @param {string} closeTag Close tag string pattern without close tag\n   *     ending character, e.g. \"</textarea\" or \"</code\".\n   * @param {Object} preserved Object to preserve the content indexed by an\n   *     unique generated block id.\n   * @return {html} The preserved HTML.\n   * @protected\n   */\n  static preserveInnerHtml_(htmlString, openTag, closeTag, preserved) {\n    var tagPosEnd = html.lookupPossibleTagBoundary_(htmlString, openTag);\n    while (tagPosEnd > -1) {\n      var tagEndPos = htmlString.indexOf(closeTag);\n      htmlString = html.preserveInterval_(htmlString, tagPosEnd, tagEndPos, preserved);\n      htmlString = htmlString.replace(openTag, '%%%~1~%%%');\n      htmlString = htmlString.replace(closeTag, '%%%~2~%%%');\n      tagPosEnd = html.lookupPossibleTagBoundary_(htmlString, openTag);\n    }\n    htmlString = htmlString.replace(/%%%~1~%%%/g, openTag);\n    htmlString = htmlString.replace(/%%%~2~%%%/g, closeTag);\n    return htmlString;\n  }\n\n  /**\n   * Preserves interval of the specified HTML into the preserved map replacing\n   * original contents with an unique generated id.\n   * @param {string} htmlString\n   * @param {Number} start Start interval position to be replaced.\n   * @param {Number} end End interval position to be replaced.\n   * @param {Object} preserved Object to preserve the content indexed by an\n   *     unique generated block id.\n   * @return {string} The HTML with replaced interval.\n   * @protected\n   */\n  static preserveInterval_(htmlString, start, end, preserved) {\n    var blockId = '%%%~BLOCK~' + core.getUid() + '~%%%';\n    preserved[blockId] = htmlString.substring(start, end);\n    return string.replaceInterval(htmlString, start, end, blockId);\n  }\n\n  /**\n   * Preserves outer contents inside the specified tag. When preserved,\n   * original content are replaced with an unique generated block id and\n   * stored into `preserved` map.\n   * @param {string} htmlString\n   * @param {string} openTag Open tag string pattern without open tag ending\n   *     character, e.g. \"<textarea\" or \"<code\".\n   * @param {string} closeTag Close tag string pattern without close tag\n   *     ending character, e.g. \"</textarea\" or \"</code\".\n   * @param {Object} preserved Object to preserve the content indexed by an\n   *     unique generated block id.\n   * @return {html} The preserved HTML.\n   * @protected\n   */\n  static preserveOuterHtml_(htmlString, openTag, closeTag, preserved) {\n    var tagPos = htmlString.indexOf(openTag);\n    while (tagPos > -1) {\n      var tagEndPos = htmlString.indexOf(closeTag) + closeTag.length;\n      htmlString = html.preserveInterval_(htmlString, tagPos, tagEndPos, preserved);\n      tagPos = htmlString.indexOf(openTag);\n    }\n    return htmlString;\n  }\n\n  /**\n   * Removes all comments of the HTML. Including conditional comments and\n   * \"<![CDATA[\" blocks.\n   * @param {string} htmlString\n   * @return {string} The HTML without comments.\n   * @protected\n   */\n  static removeComments_(htmlString) {\n    var preserved = {};\n    htmlString = html.preserveOuterHtml_(htmlString, '<![CDATA[', ']]>', preserved);\n    htmlString = html.preserveOuterHtml_(htmlString, '<!--', '-->', preserved);\n    htmlString = html.replacePreservedBlocks_(htmlString, preserved, '');\n    return htmlString;\n  }\n\n  /**\n   * Removes spaces between tags, even from inline-block elements.\n   * @param {string} htmlString\n   * @return {string} The HTML without spaces between tags.\n   * @protected\n   */\n  static removeIntertagSpaces_(htmlString) {\n    htmlString = htmlString.replace(html.Patterns.INTERTAG_CUSTOM_CUSTOM, '~%%%%%%~');\n    htmlString = htmlString.replace(html.Patterns.INTERTAG_CUSTOM_TAG, '~%%%<');\n    htmlString = htmlString.replace(html.Patterns.INTERTAG_TAG, '><');\n    htmlString = htmlString.replace(html.Patterns.INTERTAG_TAG_CUSTOM, '>%%%~');\n    return htmlString;\n  }\n\n  /**\n   * Removes spaces inside tags.\n   * @param {string} htmlString\n   * @return {string} The HTML without spaces inside tags.\n   * @protected\n   */\n  static removeSpacesInsideTags_(htmlString) {\n    htmlString = htmlString.replace(html.Patterns.TAG_END_SPACES, '$1$2');\n    htmlString = htmlString.replace(html.Patterns.TAG_QUOTE_SPACES, '=$1$2$3');\n    return htmlString;\n  }\n\n  /**\n   * Removes spaces surrounding tags.\n   * @param {string} htmlString\n   * @return {string} The HTML without spaces surrounding tags.\n   * @protected\n   */\n  static removeSurroundingSpaces_(htmlString) {\n    return htmlString.replace(html.Patterns.SURROUNDING_SPACES, '$1');\n  }\n\n  /**\n   * Restores preserved map keys inside the HTML. Note that the passed HTML\n   * should contain the unique generated block ids to be replaced.\n   * @param {string} htmlString\n   * @param {Object} preserved Object to preserve the content indexed by an\n   *     unique generated block id.\n   * @param {string} replaceValue The value to replace any block id inside the\n   * HTML.\n   * @return {string}\n   * @protected\n   */\n  static replacePreservedBlocks_(htmlString, preserved, replaceValue) {\n    for (var blockId in preserved) {\n      htmlString = htmlString.replace(blockId, replaceValue);\n    }\n    return htmlString;\n  }\n\n  /**\n   * Simplifies DOCTYPE declaration to <!DOCTYPE html>.\n   * @param {string} htmlString\n   * @return {string}\n   * @protected\n   */\n  static simplifyDoctype_(htmlString) {\n    var preserved = {};\n    htmlString = html.preserveOuterHtml_(htmlString, '<!DOCTYPE', '>', preserved);\n    htmlString = html.replacePreservedBlocks_(htmlString, preserved, '<!DOCTYPE html>');\n    return htmlString;\n  }\n\n  /**\n   * Restores preserved map original contents inside the HTML. Note that the\n   * passed HTML should contain the unique generated block ids to be restored.\n   * @param {string} htmlString\n   * @param {Object} preserved Object to preserve the content indexed by an\n   *     unique generated block id.\n   * @return {string}\n   * @protected\n   */\n  static returnBlocks_(htmlString, preserved) {\n    for (var blockId in preserved) {\n      htmlString = htmlString.replace(blockId, preserved[blockId]);\n    }\n    return htmlString;\n  }\n}\n\n/**\n * HTML regex patterns.\n * @enum {RegExp}\n * @protected\n */\nhtml.Patterns = {\n  /**\n   * @type {RegExp}\n   */\n  INTERTAG_CUSTOM_CUSTOM: /~%%%\\s+%%%~/g,\n\n  /**\n   * @type {RegExp}\n   */\n  INTERTAG_TAG_CUSTOM: />\\s+%%%~/g,\n\n  /**\n   * @type {RegExp}\n   */\n  INTERTAG_CUSTOM_TAG: /~%%%\\s+</g,\n\n  /**\n   * @type {RegExp}\n   */\n  INTERTAG_TAG: />\\s+</g,\n\n  /**\n   * @type {RegExp}\n   */\n  SURROUNDING_SPACES: /\\s*(<[^>]+>)\\s*/g,\n\n  /**\n   * @type {RegExp}\n   */\n  TAG_END_SPACES: /(<(?:[^>]+?))(?:\\s+?)(\\/?>)/g,\n\n  /**\n   * @type {RegExp}\n   */\n  TAG_QUOTE_SPACES: /\\s*=\\s*([\"']?)\\s*(.*?)\\s*(\\1)/g\n};\n\nexport default html;\n","'use strict';\n\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\n\n/**\n * Class with static methods responsible for doing browser feature checks.\n */\nclass features {\n  /**\n   * Some browsers (like IE9) change the order of element attributes, when html\n   * is rendered. This method can be used to check if this behavior happens on\n   * the current browser.\n   * @return {boolean}\n   */\n  static checkAttrOrderChange() {\n    if (attrOrderChange === undefined) {\n      var originalContent = '<div data-component=\"\" data-ref=\"\"></div>';\n      var element = document.createElement('div');\n      dom.append(element, originalContent);\n      attrOrderChange = originalContent !== element.innerHTML;\n    }\n    return attrOrderChange;\n  }\n}\n\nvar attrOrderChange;\n\nexport default features;\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport Disposable from \"jspm_packages/github/alloyui/core@master/disposable/Disposable\";\n\n/**\n * Trie data structure. It's useful for quickly storing and finding\n * information related to strings and their prefixes. See\n * http://en.wikipedia.org/wiki/Trie.\n * @constructor\n * @extends {Disposable}\n */\nclass Trie extends Disposable {\n  constructor(value) {\n    this.value_ = value;\n    this.children_ = {};\n  }\n\n  /**\n   * Empties the trie of all keys and values.\n   */\n  clear() {\n    this.children_ = {};\n    this.value_ = null;\n  }\n\n  /**\n   * Creates a new trie node.\n   * @return {Trie}\n   */\n  createNewTrieNode() {\n    return new Trie();\n  }\n\n  /**\n   * Disposes of this instance's object references.\n   * @override\n   */\n  disposeInternal() {\n    for (var k in this.children_) {\n      this.children_[k].dispose();\n    }\n\n    this.children_ = null;\n    this.value_ = null;\n  }\n\n  /**\n   * Finds the node that represents the given key on this tree.\n   * @param {!(Array|string)} key The key to set the value at.\n   * @param {boolean} createIfMissing Flag indicating if nodes that don't yet\n   *   exist in the searched path should be created.\n   * @return {!Trie}\n   */\n  findKeyNode_(key, createIfMissing) {\n    var node = this;\n\n    key = this.normalizeKey(key);\n\n    for (var i = 0; i < key.length; i++) {\n      node = node.getChild(key[i], createIfMissing);\n      if (!node) {\n        return null;\n      }\n    }\n\n    return node;\n  }\n\n  /**\n   * Returns an array with all the child nodes for this trie.\n   * @return {!Array}\n   */\n  getAllChildren() {\n    var allChildren = [];\n\n    for (var k in this.children_) {\n      allChildren.push(this.children_[k]);\n    }\n\n    return allChildren;\n  }\n\n  /**\n   * Gets the child node for the given key part.\n   * @param {string} keyPart String that can directly access a child of this\n   *   Trie.\n   * @param {boolean} createIfMissing Flag indicating if the child should be\n   *   created if it doesn't exist.\n   * @return {Trie}\n   */\n  getChild(keyPart, createIfMissing) {\n    var child = this.children_[keyPart];\n\n    if (createIfMissing && !child) {\n      child = this.createNewTrieNode();\n      this.setChild(keyPart, child);\n    }\n\n    return child;\n  }\n\n  /**\n   * Gets the value for the given key in the tree.\n   * @param {!(Array|string)} key\n   * @return {*}\n   */\n  getKeyValue(key) {\n    var node = this.findKeyNode_(key);\n\n    return node ? node.getValue() : null;\n  }\n\n  /**\n   * Gets this tree's value.\n   * @return {*}\n   */\n  getValue() {\n    return this.value_;\n  }\n\n  /**\n   * Returns a normalized key, to be used by a Trie.\n   * @param  {!(Array|string)} key The key to be normalized.\n   * @return {!Array} The normalized key.\n   */\n  normalizeKey(key) {\n    return core.isString(key) ? key.split('') : key;\n  }\n\n  /**\n   * Sets the child node for the given key part.\n   * @param {string} keyPart String that can directly access a child of this\n   *   Trie.\n   * @param {Trie} child\n   */\n  setChild(keyPart, child) {\n    this.children_[keyPart] = child;\n  }\n\n  /**\n   * Sets the given key/value pair in the tree. If the key already exists and\n   * `mergeFn` is given, the result of its call will be set as the value\n   * instead.\n   * @param {!(Array|string)} key The key to set the value at.\n   * @param {*} value The value to set.\n   * @param {function(*, *)=} opt_mergeFn Function to be called if the key\n   *   already exists. It will be called with the old and the new values, and\n   *   the key will be set to its return value.\n   */\n  setKeyValue(key, value, opt_mergeFn) {\n    var node = this.findKeyNode_(key, true);\n\n    if (node.getValue() && opt_mergeFn) {\n      value = opt_mergeFn(node.getValue(), value);\n    }\n\n    node.setValue(value);\n\n    return node.getValue();\n  }\n\n  /**\n   * Sets this tree's value.\n   * @param {*} value\n   */\n  setValue(value) {\n    this.value_ = value;\n  }\n}\n\n/**\n * The list of children for this tree.\n * @type {Object.<string, Trie>}\n * @protected\n */\nTrie.prototype.children_ = null;\n\n/**\n * The value associated with this tree.\n * @type {*}\n * @protected\n */\nTrie.prototype.value_ = null;\n\nexport default Trie;\n","'use strict';\n\nimport Trie from \"jspm_packages/github/alloyui/core@master/structs/Trie\";\n\n/**\n * A trie that can handle wildcards.\n * @param {*} value\n * @constructor\n * @extends {Trie}\n */\nclass WildcardTrie extends Trie {\n  constructor(value) {\n    super(value);\n  }\n\n  /**\n   * Creates a new trie node.\n   * @return {Trie}\n   * @override\n   */\n  createNewTrieNode() {\n    return new WildcardTrie();\n  }\n\n  /**\n   * Gets all the children that match any of the given list of key parts.\n   * @param {!Array} keyParts\n   * @return {!Array}\n   * @protected\n   */\n  getChildrenMatchingKeyParts_(keyParts) {\n    var matchingChildren = [];\n\n    for (var i = 0; i < keyParts.length; i++) {\n      var child = this.getChild(keyParts[i]);\n      if (child) {\n        matchingChildren.push(child);\n      }\n    }\n\n    return matchingChildren;\n  }\n\n  /**\n   * Gets the value for the given key in the tree.\n   * @param {!(Array|string)} key\n   * @return {!Array}\n   * @override\n   */\n  getKeyValue(key) {\n    key = this.normalizeKey(key);\n\n    var nextKey = key.concat();\n    var keyPart = nextKey.shift();\n\n    if (!keyPart) {\n      return this.getValue() ? [this.getValue()] : [];\n    }\n\n    return this.getKeyValueForChildren_(nextKey, keyPart);\n  }\n\n  /**\n   * Gets the values of a key on the children that match the given key part.\n   * @param  {!Array} key\n   * @param  {string} keyPart\n   * @return {!Array}\n   */\n  getKeyValueForChildren_(key, keyPart) {\n    var values = [];\n\n    var children = this.getMatchingChildren_(keyPart);\n    for (var i = 0; i < children.length; i++) {\n      values = values.concat(children[i].getKeyValue(key));\n    }\n\n    return values;\n  }\n\n  /**\n   * Gets all the children of this trie that match the given key part.\n   * @param  {string} keyPart\n   * @return {!Array.<Trie>}\n   */\n  getMatchingChildren_(keyPart) {\n    var matchingChildren = [];\n\n    if (keyPart === WildcardTrie.TOKEN_SKIP_SINGLE) {\n      matchingChildren = this.getAllChildren();\n    } else {\n      matchingChildren = this.getChildrenMatchingKeyParts_(\n        [keyPart, WildcardTrie.TOKEN_SKIP_SINGLE]\n      );\n    }\n\n    return matchingChildren;\n  }\n}\n\n/**\n * A token representing any single namespace.\n * @type {string}\n * @static\n */\nWildcardTrie.TOKEN_SKIP_SINGLE = '*';\n\nexport default WildcardTrie;\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport Disposable from \"jspm_packages/github/alloyui/core@master/disposable/Disposable\";\nimport EventHandle from \"jspm_packages/github/alloyui/core@master/events/EventHandle\";\nimport WildcardTrie from \"jspm_packages/github/alloyui/core@master/structs/WildcardTrie\";\n\n/**\n * EventEmitter utility.\n * @constructor\n * @extends {Disposable}\n */\nclass EventEmitter extends Disposable {\n  constructor() {\n    /**\n     * The delimiter being used for namespaces.\n     * @type {string}\n     * @protected\n     */\n    this.delimiter_ = '.';\n\n    /**\n     * Holds event listeners scoped by event type.\n     * @type {Trie}\n     * @protected\n     */\n    this.listenersTree_ = new WildcardTrie();\n\n    /**\n     * The maximum number of listeners allowed for each event type. If the number\n     * becomes higher than the max, a warning will be issued.\n     * @type {number}\n     * @protected\n     */\n    this.maxListeners_ = 10;\n\n    /**\n     * The id that will be assigned to the next listener added to this event\n     * emitter.\n     * @type {number}\n     * @protected\n     */\n    this.nextId_ = 1;\n\n    /**\n     * Configuration option which determines if an event facade should be sent\n     * as a param of listeners when emitting events. If set to true, the facade\n     * will be passed as the first argument of the listener.\n     * @type {boolean}\n     * @protected\n     */\n    this.shouldUseFacade_ = false;\n  }\n\n  /**\n   * Adds a listener to the end of the listeners array for the specified events.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n  addListener(events, listener) {\n    this.validateListener_(listener);\n\n    events = this.normalizeEvents_(events);\n    for (var i = 0; i < events.length; i++) {\n      this.addSingleListener_(events[i], listener);\n    }\n\n    return new EventHandle(this, events, listener);\n  }\n\n  /**\n   * Adds a listener to the end of the listeners array for a single event.\n   * @param {string} event\n   * @param {!Function} listener\n   * @param {Function=} opt_origin The original function that was added as a\n   *   listener, if there is any.\n   * @protected\n   */\n  addSingleListener_(event, listener, opt_origin) {\n    this.emit('newListener', event, listener);\n\n    var listeners = this.listenersTree_.setKeyValue(\n      this.splitNamespaces_(event),\n      [{\n        fn: listener,\n        id: this.nextId_++,\n        origin: opt_origin\n      }],\n      this.mergeListenerArrays_\n    );\n\n    if (listeners.length > this.maxListeners_ && !listeners.warned) {\n      console.warn(\n        'Possible EventEmitter memory leak detected. %d listeners added ' +\n        'for event %s. Use emitter.setMaxListeners() to increase limit.',\n        listeners.length,\n        event\n      );\n      listeners.warned = true;\n    }\n  }\n\n  /**\n   * Comparison function between listener objects.\n   * @param {!Object} listener1\n   * @param {!Object} listener2\n   * @return {Number} The difference between the ids of the objects.\n   * @protected\n   */\n  compareListenerObjs_(obj1, obj2) {\n    return obj1.id - obj2.id;\n  }\n\n  /**\n   * Disposes of this instance's object references.\n   * @override\n   */\n  disposeInternal() {\n    this.listenersTree_.dispose();\n    this.listenersTree_ = null;\n  }\n\n  /**\n   * Execute each of the listeners in order with the supplied arguments.\n   * @param {string} event\n   * @param {*} opt_args [arg1], [arg2], [...]\n   * @return {boolean} Returns true if event had listeners, false otherwise.\n   */\n  emit(event) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    var listened = false;\n    var listeners = this.listeners(event);\n\n    if (this.getShouldUseFacade()) {\n      var facade = {\n        type: event\n      };\n      args = [facade].concat(args);\n    }\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(this, args);\n      listened = true;\n    }\n\n    return listened;\n  }\n\n  /**\n   * Gets the delimiter to be used by namespaces.\n   * @return {string}\n   */\n  getDelimiter() {\n    return this.delimiter_;\n  }\n\n  /**\n   * Gets the configuration option which determines if an event facade should\n   * be sent as a param of listeners when emitting events. If set to true, the\n   * facade will be passed as the first argument of the listener.\n   * @return {boolean}\n   */\n  getShouldUseFacade() {\n    return this.shouldUseFacade_;\n  }\n\n  /**\n   * Returns an array of listeners for the specified event.\n   * @param {string} event\n   * @return {Array} Array of listeners.\n   */\n  listeners(event) {\n    var listenerArrays = this.searchListenerTree_(event);\n    var listeners = [];\n\n    for (var i = 0; i < listenerArrays.length; i++) {\n      listeners = listeners.concat(listenerArrays[i]);\n    }\n\n    if (listenerArrays.length > 1) {\n      // If there was more than one result, we should reorder the listeners,\n      // since we joined them without taking the order into account.\n      listeners.sort(this.compareListenerObjs_);\n    }\n\n    return listeners.map(function(listener) {\n      return listener.fn;\n    });\n  }\n\n  /**\n   * Adds a listener that will be invoked a fixed number of times for the\n   * events. After each event is triggered the specified amount of times, the\n   * listener is removed for it.\n   * @param {!(Array|string)} events\n   * @param {number} amount The amount of times this event should be listened\n   * to.\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n  many(events, amount, listener) {\n    events = this.normalizeEvents_(events);\n    for (var i = 0; i < events.length; i++) {\n      this.many_(events[i], amount, listener);\n    }\n\n    return new EventHandle(this, events, listener);\n  }\n\n  /**\n   * Adds a listener that will be invoked a fixed number of times for a single\n   * event. After the event is triggered the specified amount of times, the\n   * listener is removed.\n   * @param {string} event\n   * @param {number} amount The amount of times this event should be listened\n   * to.\n   * @param {!Function} listener\n   * @protected\n   */\n  many_(event, amount, listener) {\n    var self = this;\n\n    if (amount <= 0) {\n      return;\n    }\n\n    function handlerInternal() {\n      if (--amount === 0) {\n        self.removeListener(event, handlerInternal);\n      }\n      listener.apply(self, arguments);\n    }\n\n    self.addSingleListener_(event, handlerInternal, listener);\n  }\n\n  /**\n   * Checks if a listener object matches the given listener function. To match,\n   * it needs to either point to that listener or have it as its origin.\n   * @param {!Object} listenerObj\n   * @param {!Function} listener\n   * @return {boolean}\n   * @protected\n   */\n  matchesListener_(listenerObj, listener) {\n    return listenerObj.fn === listener ||\n      (listenerObj.origin && listenerObj.origin === listener);\n  }\n\n  /**\n   * Merges two objects that contain event listeners.\n   * @param  {!Object} arr1\n   * @param  {!Object} arr2\n   * @return {!Object}\n   * @protected\n   */\n  mergeListenerArrays_(arr1, arr2) {\n    for (var i = 0; i < arr2.length; i++) {\n      arr1.push(arr2[i]);\n    }\n    return arr1;\n  }\n\n  /**\n   * Converts the parameter to an array if only one event is given.\n   * @param  {!(Array|string)} events\n   * @return {!Array}\n   * @protected\n   */\n  normalizeEvents_(events) {\n    return core.isString(events) ? [events] : events;\n  }\n\n  /**\n   * Removes a listener for the specified events.\n   * Caution: changes array indices in the listener array behind the listener.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n  off(events, listener) {\n    this.validateListener_(listener);\n\n    var listenerArrays = this.searchListenerTree_(events);\n    for (var i = 0; i < listenerArrays.length; i++) {\n      this.removeMatchingListenerObjs_(listenerArrays[i], listener);\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds a listener to the end of the listeners array for the specified events.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n  on() {\n    return this.addListener.apply(this, arguments);\n  }\n\n  /**\n   * Adds a one time listener for the events. This listener is invoked only the\n   * next time each event is fired, after which it is removed.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!EventHandle} Can be used to remove the listener.\n   */\n  once(events, listener) {\n    return this.many(events, 1, listener);\n  }\n\n  /**\n   * Removes all listeners, or those of the specified events. It's not a good\n   * idea to remove listeners that were added elsewhere in the code,\n   * especially when it's on an emitter that you didn't create.\n   * @param {(Array|string)=} opt_events\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n  removeAllListeners(opt_events) {\n    if (!opt_events) {\n      this.listenersTree_.clear();\n      return this;\n    }\n\n    return this.removeAllListenersForEvents_(opt_events);\n  }\n\n  /**\n   * Removes all listeners for the specified events.\n   * @param  {!(Array|string)} events\n   * @return {!Object} Returns emitter, so calls can be chained.\n   * @protected\n   */\n  removeAllListenersForEvents_(events) {\n    events = this.normalizeEvents_(events);\n    for (var i = 0; i < events.length; i++) {\n      this.listenersTree_.setKeyValue(this.splitNamespaces_(events[i]), []);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all listener objects from the given array that match the given\n   * listener function.\n   * @param {!Array.<Object>} listenerObjects\n   * @param {!Function} listener\n   * @protected\n   */\n  removeMatchingListenerObjs_(listenerObjects, listener) {\n    for (var i = listenerObjects.length - 1; i >= 0; i--) {\n      if (this.matchesListener_(listenerObjects[i], listener)) {\n        listenerObjects.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * Removes a listener for the specified events.\n   * Caution: changes array indices in the listener array behind the listener.\n   * @param {!(Array|string)} events\n   * @param {!Function} listener\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n  removeListener() {\n    return this.off.apply(this, arguments);\n  }\n\n  /**\n   * Searches the listener tree for the given events.\n   * @param {!(Array|string)} events\n   * @return {!Array.<Array>} An array of listener arrays returned by the tree.\n   * @protected\n   */\n  searchListenerTree_(events) {\n    var values = [];\n\n    events = this.normalizeEvents_(events);\n    for (var i = 0; i < events.length; i++) {\n      values = values.concat(\n        this.listenersTree_.getKeyValue(this.splitNamespaces_(events[i]))\n      );\n    }\n\n    return values;\n  }\n\n  /**\n   * Sets the delimiter to be used by namespaces.\n   * @param {string} delimiter\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n  setDelimiter(delimiter) {\n    this.delimiter_ = delimiter;\n    return this;\n  }\n\n  /**\n   * By default EventEmitters will print a warning if more than 10 listeners\n   * are added for a particular event. This is a useful default which helps\n   * finding memory leaks. Obviously not all Emitters should be limited to 10.\n   * This function allows that to be increased. Set to zero for unlimited.\n   * @param {number} max The maximum number of listeners.\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n  setMaxListeners(max) {\n    this.maxListeners_ = max;\n    return this;\n  }\n\n  /**\n   * Sets the configuration option which determines if an event facade should\n   * be sent as a param of listeners when emitting events. If set to true, the\n   * facade will be passed as the first argument of the listener.\n   * @param {boolean} shouldUseFacade\n   * @return {!Object} Returns emitter, so calls can be chained.\n   */\n  setShouldUseFacade(shouldUseFacade) {\n    this.shouldUseFacade_ = shouldUseFacade;\n    return this;\n  }\n\n  /**\n   * Splits the event, using the current delimiter.\n   * @param {string} event\n   * @return {!Array}\n   * @protected\n   */\n  splitNamespaces_(event) {\n    return event.split(this.getDelimiter());\n  }\n\n  /**\n   * Checks if the given listener is valid, throwing an exception when it's not.\n   * @param  {*} listener\n   * @protected\n   */\n  validateListener_(listener) {\n    if (!core.isFunction(listener)) {\n      throw new TypeError('Listener must be a function');\n    }\n  }\n}\n\nexport default EventEmitter;\n","/*!\n * Promises polyfill from Google's Closure Library.\n *\n *      Copyright 2013 The Closure Library Authors. All Rights Reserved.\n *\n * NOTE(eduardo): Promise support is not ready on all supported browsers,\n * therefore core.js is temporarily using Google's promises as polyfill. It\n * supports cancellable promises and has clean and fast implementation.\n */\n\n'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see CancellablePromise}.\n *\n * @interface\n * @extends {IThenable.<TYPE>}\n * @template TYPE\n */\nvar Thenable = function() {};\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the {@code onFulfilled} callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE):\n *             (RESULT|IThenable.<RESULT>|Thenable))=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fullfilled.\n * @param {?(function(*): *)=} opt_onRejected A function that will be invoked\n *     with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @return {!CancellablePromise.<RESULT>} A new Promise that will receive the\n *     result of the fulfillment or rejection callback.\n * @template RESULT,THIS\n */\nThenable.prototype.then = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * {@code Thenable}.\n *\n * {@see addImplementation}.\n *\n * @const\n */\nThenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:Thenable,...[?])} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\nThenable.addImplementation = function(ctor) {\n  ctor.prototype.then = ctor.prototype.then;\n  ctor.prototype.$goog_Thenable = true;\n};\n\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements {@code Thenable}.\n *     The class/superclass of the instance must call {@code addImplementation}.\n */\nThenable.isImplementedBy = function(object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\nvar partial = function(fn) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n\nvar async = {};\n\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nasync.throwException = function(exception) {\n  // Each throw needs to be in its own context.\n  async.nextTick(function() {\n    throw exception;\n  });\n};\n\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\nasync.run = function(callback, opt_context) {\n  if (!async.run.workQueueScheduled_) {\n    // Nothing is currently scheduled, schedule it now.\n    async.nextTick(async.run.processWorkQueue);\n    async.run.workQueueScheduled_ = true;\n  }\n\n  async.run.workQueue_.push(\n    new async.run.WorkItem_(callback, opt_context));\n};\n\n\n/** @private {boolean} */\nasync.run.workQueueScheduled_ = false;\n\n\n/** @private {!Array.<!async.run.WorkItem_>} */\nasync.run.workQueue_ = [];\n\n/**\n * Run any pending async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * async.nextTick.\n */\nasync.run.processWorkQueue = function() {\n  // NOTE: additional work queue items may be pushed while processing.\n  while (async.run.workQueue_.length) {\n    // Don't let the work queue grow indefinitely.\n    var workItems = async.run.workQueue_;\n    async.run.workQueue_ = [];\n    for (var i = 0; i < workItems.length; i++) {\n      var workItem = workItems[i];\n      try {\n        workItem.fn.call(workItem.scope);\n      } catch (e) {\n        async.throwException(e);\n      }\n    }\n  }\n\n  // There are no more work items, reset the work queue.\n  async.run.workQueueScheduled_ = false;\n};\n\n\n/**\n * @constructor\n * @final\n * @struct\n * @private\n *\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\nasync.run.WorkItem_ = function(fn, scope) {\n  /** @const */\n  this.fn = fn;\n  /** @const */\n  this.scope = scope;\n};\n\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n * reasons.\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @template SCOPE\n */\nasync.nextTick = function(callback, opt_context) {\n  var cb = callback;\n  if (opt_context) {\n    cb = callback.bind(opt_context);\n  }\n  cb = async.nextTick.wrapCallback_(cb);\n  // Introduced and currently only supported by IE10.\n  if (core.isFunction(window.setImmediate)) {\n    window.setImmediate(cb);\n    return;\n  }\n  // Look for and cache the custom fallback version of setImmediate.\n  if (!async.nextTick.setImmediate_) {\n    async.nextTick.setImmediate_ = async.nextTick.getSetImmediateEmulator_();\n  }\n  async.nextTick.setImmediate_(cb);\n};\n\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\nasync.nextTick.setImmediate_ = null;\n\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\nasync.nextTick.getSetImmediateEmulator_ = function() {\n  // Create a private message channel and use it to postMessage empty messages\n  // to ourselves.\n  var Channel = window.MessageChannel;\n  // If MessageChannel is not available and we are in a browser, implement\n  // an iframe based polyfill in browsers that have postMessage and\n  // document.addEventListener. The latter excludes IE8 because it has a\n  // synchronous postMessage implementation.\n  if (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n    window.postMessage && window.addEventListener) {\n    /** @constructor */\n    Channel = function() {\n      // Make an empty, invisible iframe.\n      var iframe = document.createElement('iframe');\n      iframe.style.display = 'none';\n      iframe.src = '';\n      document.documentElement.appendChild(iframe);\n      var win = iframe.contentWindow;\n      var doc = win.document;\n      doc.open();\n      doc.write('');\n      doc.close();\n      var message = 'callImmediate' + Math.random();\n      var origin = win.location.protocol + '//' + win.location.host;\n      var onmessage = function(e) {\n        // Validate origin and message to make sure that this message was\n        // intended for us.\n        if (e.origin !== origin && e.data !== message) {\n          return;\n        }\n        this.port1.onmessage();\n      }.bind(this);\n      win.addEventListener('message', onmessage, false);\n      this.port1 = {};\n      this.port2 = {\n        postMessage: function() {\n          win.postMessage(message, origin);\n        }\n      };\n    };\n  }\n  if (typeof Channel !== 'undefined') {\n    var channel = new Channel();\n    // Use a fifo linked list to call callbacks in the right order.\n    var head = {};\n    var tail = head;\n    channel.port1.onmessage = function() {\n      head = head.next;\n      var cb = head.cb;\n      head.cb = null;\n      cb();\n    };\n    return function(cb) {\n      tail.next = {\n        cb: cb\n      };\n      tail = tail.next;\n      channel.port2.postMessage(0);\n    };\n  }\n  // Implementation for IE6-8: Script elements fire an asynchronous\n  // onreadystatechange event when inserted into the DOM.\n  if (typeof document !== 'undefined' && 'onreadystatechange' in\n      document.createElement('script')) {\n    return function(cb) {\n      var script = document.createElement('script');\n      script.onreadystatechange = function() {\n        // Clean up and call the callback.\n        script.onreadystatechange = null;\n        script.parentNode.removeChild(script);\n        script = null;\n        cb();\n        cb = null;\n      };\n      document.documentElement.appendChild(script);\n    };\n  }\n  // Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n  // or more.\n  return function(cb) {\n    setTimeout(cb, 0);\n  };\n};\n\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\nasync.nextTick.wrapCallback_ = function(opt_returnValue) {\n  return opt_returnValue;\n};\n\n\n/**\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled or rejected with a value, which will be known\n * as the fulfillment value or the rejection reason. Whether fulfilled or\n * rejected, the Promise result is immutable once it is set.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling {@code then} and registering\n * {@code onFulfilled} and {@code onRejected} callbacks. Once the Promise\n * resolves, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional {@code then} calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering {@code then} invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is resolved, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable.<TYPE>|Thenable)),\n *             function(*)): void} resolver\n *     Initialization function that is invoked immediately with {@code resolve}\n *     and {@code reject} functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {Thenable.<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\nvar CancellablePromise = function(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {CancellablePromise.State_}\n   */\n  this.state_ = CancellablePromise.State_.PENDING;\n\n  /**\n   * The resolved result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling {@code then()}, the originating parent.\n   * @private {CancellablePromise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The list of {@code onFulfilled} and {@code onRejected} callbacks added to\n   * this Promise by calls to {@code then()}.\n   * @private {Array.<CancellablePromise.CallbackEntry_>}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the {@code UNHANDLED_REJECTION_DELAY} is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an {@code onRejected} callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    /**\n     * When the {@code UNHANDLED_REJECTION_DELAY} is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * {@code onRejected} callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  try {\n    var self = this;\n    resolver.call(\n      opt_context, function(value) {\n        self.resolve_(CancellablePromise.State_.FULFILLED, value);\n      }, function(reason) {\n        self.resolve_(CancellablePromise.State_.REJECTED, reason);\n      });\n  } catch (e) {\n    this.resolve_(CancellablePromise.State_.REJECTED, e);\n  }\n};\n\n/**\n * @define {number} The delay in milliseconds before a rejected Promise's reason\n * is passed to the rejection handler. By default, the rejection handler\n * rethrows the rejection reason so that it appears in the developer console or\n * {@code window.onerror} handler.\n *\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n */\nCancellablePromise.UNHANDLED_REJECTION_DELAY = 0;\n\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\nCancellablePromise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n\n/**\n * Typedef for entries in the callback chain. Each call to {@code then},\n * {@code thenCatch}, or {@code thenAlways} creates an entry containing the\n * functions that may be invoked once the Promise is resolved.\n *\n * @typedef {{\n *   child: CancellablePromise,\n *   onFulfilled: function(*),\n *   onRejected: function(*)\n * }}\n * @private\n */\nCancellablePromise.CallbackEntry_ = null;\n\n\n/**\n * @param {(TYPE|Thenable.<TYPE>|Thenable)=} opt_value\n * @return {!CancellablePromise.<TYPE>} A new Promise that is immediately resolved\n *     with the given value.\n * @template TYPE\n */\nCancellablePromise.resolve = function(opt_value) {\n  return new CancellablePromise(function(resolve) {\n      resolve(opt_value);\n    });\n};\n\n\n/**\n * @param {*=} opt_reason\n * @return {!CancellablePromise} A new Promise that is immediately rejected with the\n *     given reason.\n */\nCancellablePromise.reject = function(opt_reason) {\n  return new CancellablePromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to complete.\n * @template TYPE\n */\nCancellablePromise.race = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      if (!promises.length) {\n        resolve(undefined);\n      }\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(resolve, reject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<!Array.<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected by the first rejection result.\n * @template TYPE\n */\nCancellablePromise.all = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toFulfill = promises.length;\n      var values = [];\n\n      if (!toFulfill) {\n        resolve(values);\n        return;\n      }\n\n      var onFulfill = function(index, value) {\n        toFulfill--;\n        values[index] = value;\n        if (toFulfill === 0) {\n          resolve(values);\n        }\n      };\n\n      var onReject = function(reason) {\n        reject(reason);\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(partial(onFulfill, i), onReject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the value of\n *     the first input to be fulfilled, or is rejected with a list of every\n *     rejection reason if all inputs are rejected.\n * @template TYPE\n */\nCancellablePromise.firstFulfilled = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toReject = promises.length;\n      var reasons = [];\n\n      if (!toReject) {\n        resolve(undefined);\n        return;\n      }\n\n      var onFulfill = function(value) {\n        resolve(value);\n      };\n\n      var onReject = function(index, reason) {\n        toReject--;\n        reasons[index] = reason;\n        if (toReject === 0) {\n          reject(reasons);\n        }\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(onFulfill, partial(onReject, i));\n      }\n    });\n};\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the {@code onFulfilled} callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value (or thrown value) of the callback.\n *\n * @override\n */\nCancellablePromise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n  return this.addChildPromise_(\n    core.isFunction(opt_onFulfilled) ? opt_onFulfilled : null,\n    core.isFunction(opt_onRejected) ? opt_onRejected : null,\n    opt_context);\n};\nThenable.addImplementation(CancellablePromise);\n\n\n/**\n * Adds a callback that will be invoked whether the Promise is fulfilled or\n * rejected. The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with {@code thenAlways} will be\n * executed in the same order with other calls to {@code then},\n * {@code thenAlways}, or {@code thenCatch}.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with {@code thenAlways}. A Promise that has\n * a cleanup handler added with {@code thenAlways} will be canceled if all of\n * its children created by {@code then} (or {@code thenCatch}) are canceled.\n *\n * @param {function(this:THIS): void} onResolved A function that will be invoked\n *     when the Promise is resolved.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise.<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\nCancellablePromise.prototype.thenAlways = function(onResolved, opt_context) {\n  var callback = function() {\n    try {\n      // Ensure that no arguments are passed to onResolved.\n      onResolved.call(opt_context);\n    } catch (err) {\n      CancellablePromise.handleRejection_.call(null, err);\n    }\n  };\n\n  this.addCallbackEntry_({\n    child: null,\n    onRejected: callback,\n    onFulfilled: callback\n  });\n  return this;\n};\n\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {!function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\nCancellablePromise.prototype.thenCatch = function(onRejected, opt_context) {\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\nCancellablePromise.prototype.cancel = function(opt_message) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    async.run(function() {\n      var err = new CancellablePromise.CancellationError(opt_message);\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\nCancellablePromise.prototype.cancelInternal_ = function(err) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n    } else {\n      this.resolve_(CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!CancellablePromise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\nCancellablePromise.prototype.cancelChild_ = function(childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childIndex = -1;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var i = 0, entry; (entry = this.callbackEntries_[i]); i++) {\n    var child = entry.child;\n    if (child) {\n      childCount++;\n      if (child === childPromise) {\n        childIndex = i;\n      }\n      if (childIndex >= 0 && childCount > 1) {\n        break;\n      }\n    }\n  }\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childIndex >= 0) {\n    if (this.state_ === CancellablePromise.State_.PENDING && childCount === 1) {\n      this.cancelInternal_(err);\n    } else {\n      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];\n      this.executeCallback_(\n        callbackEntry, CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been resolved.\n *\n * @param {CancellablePromise.CallbackEntry_} callbackEntry Record containing\n *     {@code onFulfilled} and {@code onRejected} callbacks to execute after\n *     the Promise is resolved.\n * @private\n */\nCancellablePromise.prototype.addCallbackEntry_ = function(callbackEntry) {\n  if ((!this.callbackEntries_ || !this.callbackEntries_.length) &&\n    (this.state_ === CancellablePromise.State_.FULFILLED ||\n    this.state_ === CancellablePromise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  if (!this.callbackEntries_) {\n    this.callbackEntries_ = [];\n  }\n  this.callbackEntries_.push(callbackEntry);\n};\n\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the {@code onFulfilled} or {@code onRejected} callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|CancellablePromise.<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fullfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!CancellablePromise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\nCancellablePromise.prototype.addChildPromise_ = function(\nonFulfilled, onRejected, opt_context) {\n\n  var callbackEntry = {\n    child: null,\n    onFulfilled: null,\n    onRejected: null\n  };\n\n  callbackEntry.child = new CancellablePromise(function(resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function(value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function(reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!core.isDef(result) &&\n          reason instanceof CancellablePromise.CancellationError) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(\n    /** @type {CancellablePromise.CallbackEntry_} */ (callbackEntry));\n  return callbackEntry.child;\n};\n\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\nCancellablePromise.prototype.unblockAndFulfill_ = function(value) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.FULFILLED, value);\n};\n\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\nCancellablePromise.prototype.unblockAndReject_ = function(reason) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.REJECTED, reason);\n};\n\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be resolved with the same state and result as the Thenable once it is itself\n * resolved.\n *\n * If the given result is not a Thenable, the Promise will be fulfilled or\n * rejected with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {CancellablePromise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\nCancellablePromise.prototype.resolve_ = function(state, x) {\n  if (this.state_ !== CancellablePromise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = CancellablePromise.State_.REJECTED;\n    x = new TypeError('CancellablePromise cannot resolve to itself');\n\n  } else if (Thenable.isImplementedBy(x)) {\n    x = /** @type {!Thenable} */ (x);\n    this.state_ = CancellablePromise.State_.BLOCKED;\n    x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);\n    return;\n\n  } else if (core.isObject(x)) {\n    try {\n      var then = x.then;\n      if (core.isFunction(then)) {\n        this.tryThen_(x, then);\n        return;\n      }\n    } catch (e) {\n      state = CancellablePromise.State_.REJECTED;\n      x = e;\n    }\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  this.scheduleCallbacks_();\n\n  if (state === CancellablePromise.State_.REJECTED &&\n    !(x instanceof CancellablePromise.CancellationError)) {\n    CancellablePromise.addUnhandledRejection_(this, x);\n  }\n};\n\n\n/**\n * Attempts to call the {@code then} method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the {@code then} method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a {@code then} method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The {@code then} method of the Thenable object.\n * @private\n */\nCancellablePromise.prototype.tryThen_ = function(thenable, then) {\n  this.state_ = CancellablePromise.State_.BLOCKED;\n  var promise = this;\n  var called = false;\n\n  var resolve = function(value) {\n    if (!called) {\n      called = true;\n      promise.unblockAndFulfill_(value);\n    }\n  };\n\n  var reject = function(reason) {\n    if (!called) {\n      called = true;\n      promise.unblockAndReject_(reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n\n/**\n * Executes the pending callbacks of a resolved Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If {@code startExecution_} is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\nCancellablePromise.prototype.scheduleCallbacks_ = function() {\n  if (!this.executing_) {\n    this.executing_ = true;\n    async.run(this.executeCallbacks_, this);\n  }\n};\n\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\nCancellablePromise.prototype.executeCallbacks_ = function() {\n  while (this.callbackEntries_ && this.callbackEntries_.length) {\n    var entries = this.callbackEntries_;\n    this.callbackEntries_ = [];\n\n    for (var i = 0; i < entries.length; i++) {\n      this.executeCallback_(entries[i], this.state_, this.result_);\n    }\n  }\n  this.executing_ = false;\n};\n\n\n/**\n * Executes a pending callback for this Promise. Invokes an {@code onFulfilled}\n * or {@code onRejected} callback based on the resolved state of the Promise.\n *\n * @param {!CancellablePromise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {CancellablePromise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The resolved result of the Promise.\n * @private\n */\nCancellablePromise.prototype.executeCallback_ = function(\ncallbackEntry, state, result) {\n  if (state === CancellablePromise.State_.FULFILLED) {\n    callbackEntry.onFulfilled(result);\n  } else {\n    this.removeUnhandledRejection_();\n    callbackEntry.onRejected(result);\n  }\n};\n\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\nCancellablePromise.prototype.removeUnhandledRejection_ = function() {\n  var p;\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n\n/**\n * Marks this rejected Promise as unhandled. If no {@code onRejected} callback\n * is called for this Promise before the {@code UNHANDLED_REJECTION_DELAY}\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!CancellablePromise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\nCancellablePromise.addUnhandledRejection_ = function(promise, reason) {\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = setTimeout(function() {\n      CancellablePromise.handleRejection_.call(null, reason);\n    }, CancellablePromise.UNHANDLED_REJECTION_DELAY);\n\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    promise.hadUnhandledRejection_ = true;\n    async.run(function() {\n      if (promise.hadUnhandledRejection_) {\n        CancellablePromise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no {@code onRejected} callbacks registered yet.\n * @type {function(*)}\n * @private\n */\nCancellablePromise.handleRejection_ = async.throwException;\n\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * {@code onRejected} callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a {@code window.onerror} handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to {@code async.throwException}.\n */\nCancellablePromise.setUnhandledRejectionHandler = function(handler) {\n  CancellablePromise.handleRejection_ = handler;\n};\n\n\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {Error}\n * @final\n */\nCancellablePromise.CancellationError = class extends Error {\n  constructor(opt_message) {\n     super(opt_message);\n\n     if (opt_message) {\n       this.message = opt_message;\n     }\n   }\n};\n\n/** @override */\nCancellablePromise.CancellationError.prototype.name = 'cancel';\n\nexport {CancellablePromise, async};\n","'use strict';\n\nimport array from \"jspm_packages/github/alloyui/core@master/array/array\";\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport object from \"jspm_packages/github/alloyui/core@master/object/object\";\nimport EventEmitter from \"jspm_packages/github/alloyui/core@master/events/EventEmitter\";\nimport {async} from \"jspm_packages/github/alloyui/core@master/promise/Promise\";\n\n/**\n * Attribute adds support for having object properties that can be watched for\n * changes, as well as configured with validators, setters and other options.\n * See the `addAttr` method for a complete list of available attribute\n * configuration options.\n * @constructor\n * @extends {EventEmitter}\n */\nclass Attribute extends EventEmitter {\n  constructor(opt_config) {\n    super();\n\n    /**\n     * Object with information about the batch event that is currently\n     * scheduled, or null if none is.\n     * @type {Object}\n     * @protected\n     */\n    this.scheduledBatchData_ = null;\n\n    /**\n     * Object that contains information about all this instance's attributes.\n     * @type {!Object<string, !Object>}\n     * @protected\n     */\n    this.attrsInfo_ = {};\n\n    this.mergeInvalidAttrs_();\n    this.addAttrsFromStaticHint_(opt_config);\n  }\n\n  /**\n   * Adds the given attribute.\n   * @param {string} name The name of the new attribute.\n   * @param {Object.<string, *>=} config The configuration object for the new attribute.\n   *   This object can have the following keys:\n   *   initOnly - Ignores writes to the attribute after it's been initialized. That is,\n   *   allows writes only when adding the attribute for the first time.\n   *   setter - Function for normalizing new attribute values. It receives the new value\n   *   that was set, and returns the value that should be stored.\n   *   validator - Function that validates new attribute values. When it returns false,\n   *   the new value is ignored.\n   *   value - The default value for this attribute. Note that setting this to an object\n   *   will cause all attribute instances to use the same reference to the object. To\n   *   have each attribute instance use a different reference, use the `valueFn` option\n   *   instead.\n   *   valueFn - A function that returns the default value for this attribute.\n   * @param {*} initialValue The initial value of the new attribute. This value has higher\n   *   precedence than the default value specified in this attribute's configuration.\n   */\n  addAttr(name, config, initialValue) {\n    this.assertValidAttrName_(name);\n\n    this.attrsInfo_[name] = {\n      config: config || {},\n      initialValue: initialValue,\n      state: Attribute.States.UNINITIALIZED\n    };\n\n    Object.defineProperty(this, name, {\n      configurable: true,\n      get: this.getAttrValue_.bind(this, name),\n      set: this.setAttrValue_.bind(this, name)\n    });\n  }\n\n  /**\n   * Adds the given attributes.\n   * @param {!Object.<string, !Object>} configs An object that maps the names of all the\n   *   attributes to be added to their configuration objects.\n   * @param {!Object.<string, *>} initialValues An object that maps the names of\n   *   attributes to their initial values. These values have higher precedence than the\n   *   default values specified in the attribute configurations.\n   */\n  addAttrs(configs, initialValues) {\n    initialValues = initialValues || {};\n    var names = Object.keys(configs);\n\n    for (var i = 0; i < names.length; i++) {\n      this.addAttr(names[i], configs[names[i]], initialValues[names[i]]);\n    }\n  }\n\n  /**\n   * Adds attributes from super classes static hint `MyClass.ATTRS = {};`.\n   * @param {!Object.<string, !Object>} configs An object that maps the names\n   *     of all the attributes to be added to their configuration objects.\n   * @protected\n   */\n  addAttrsFromStaticHint_(config) {\n    core.mergeSuperClassesProperty(this.constructor, 'ATTRS', this.mergeAttrs_);\n    this.addAttrs(this.constructor.ATTRS_MERGED, config);\n  }\n\n  /**\n   * Checks that the given name is a valid attribute name. If it's not, an error\n   * will be thrown.\n   * @param {string} name The name to be validated.\n   * @throws {Error}\n   */\n  assertValidAttrName_(name) {\n    if (this.constructor.INVALID_ATTRS_MERGED[name]) {\n      throw new Error('It\\'s not allowed to create an attribute with the name \"' + name + '\".');\n    }\n  }\n\n  /**\n   * Checks if the it's allowed to write on the requested attribute.\n   * @param {string} name The name of the attribute.\n   * @return {Boolean}\n   * @protected\n   */\n  canWrite_(name) {\n    this.initAttr_(name);\n\n    var info = this.attrsInfo_[name];\n    return !info.config.initOnly || info.state !== Attribute.States.INITIALIZED;\n  }\n\n  /**\n   * Calls the requested function, running the appropriate code for when it's\n   * passed as an actual function object or just the function's name.\n   * @param {!Function|string} fn Function, or name of the function to run.\n   * @param {...*} A variable number of optional parameters to be passed to the\n   *   function that will be called.\n   * @return {*} The return value of the called function.\n   * @protected\n   */\n  callFunction_(fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    if (core.isString(fn)) {\n      return this[fn].apply(this, args);\n    } else if (core.isFunction(fn)) {\n      return fn.apply(this, args);\n    }\n  }\n\n  /**\n   * Calls the attribute's setter, if there is one.\n   * @param {string} name The name of the attribute.\n   * @param {*} value The value to be set.\n   * @return {*} The final value to be set.\n   */\n  callSetter_(name, value) {\n    var info = this.attrsInfo_[name];\n    var config = info.config;\n    if (config.setter) {\n      value = this.callFunction_(config.setter, value);\n    }\n    return value;\n  }\n\n  /**\n   * Calls the attribute's validator, if there is one.\n   * @param {string} name The name of the attribute.\n   * @param {*} value The value to be validated.\n   * @return {Boolean} Flag indicating if value is valid or not.\n   */\n  callValidator_(name, value) {\n    var info = this.attrsInfo_[name];\n    var config = info.config;\n    if (config.validator) {\n      return this.callFunction_(config.validator, value);\n    }\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    this.attrsInfo_ = null;\n    this.scheduledBatchData_ = null;\n  }\n\n  /**\n   * Emits the attribute change batch event.\n   * @protected\n   */\n  emitBatchEvent_() {\n    if (!this.isDisposed()) {\n      var data = this.scheduledBatchData_;\n      this.scheduledBatchData_ = null;\n      this.emit('attrsChanged', data);\n    }\n  }\n\n  /**\n   * Returns an object that maps all attribute names to their values.\n   * @return {Object.<string, *>}\n   */\n  getAttrs() {\n    var attrsMap = {};\n    var names = this.getAttrNames();\n\n    for (var i = 0; i < names.length; i++) {\n      attrsMap[names[i]] = this[names[i]];\n    }\n\n    return attrsMap;\n  }\n\n  /**\n   * Returns an array with all attribute names.\n   * @return {Array.<string>}\n   */\n  getAttrNames() {\n    return Object.keys(this.attrsInfo_);\n  }\n\n  /**\n   * Gets the value of the specified attribute. This is passed as that attribute's\n   * getter to the `Object.defineProperty` call inside the `addAttr` method.\n   * @param {string} name The name of the attribute.\n   * @return {*}\n   * @protected\n   */\n  getAttrValue_(name) {\n    this.initAttr_(name);\n\n    return this.attrsInfo_[name].value;\n  }\n\n  /**\n   * Informs of changes to an attributes value through an event. Won't trigger\n   * the event if the value hasn't changed or if it's being initialized.\n   * @param {string} name The name of the attribute.\n   * @param {*} prevVal The previous value of the attribute.\n   * @protected\n   */\n  informChange_(name, prevVal) {\n    if (this.shouldInformChange_(name, prevVal)) {\n      var data = {\n        attrName: name,\n        newVal: this[name],\n        prevVal: prevVal\n      };\n      this.emit(name + 'Changed', data);\n      this.scheduleBatchEvent_(data);\n    }\n  }\n\n  /**\n   * Initializes the specified attribute, giving it a first value.\n   * @param {string} name The name of the attribute.\n   * @protected\n   */\n  initAttr_(name) {\n    var info = this.attrsInfo_[name];\n    if (info.state !== Attribute.States.UNINITIALIZED) {\n      return;\n    }\n\n    info.state = Attribute.States.INITIALIZING;\n    this.setInitialValue_(name);\n    if (!info.written) {\n      info.state = Attribute.States.INITIALIZING_DEFAULT;\n      this.setDefaultValue_(name);\n    }\n    info.state = Attribute.States.INITIALIZED;\n  }\n\n  /**\n   * Merges an array of values for the ATTRS property into a single object.\n   * @param {!Array} values The values to be merged.\n   * @return {!Object} The merged value.\n   * @protected\n   */\n  mergeAttrs_(values) {\n    return object.mixin.apply(null, [{}].concat(values.reverse()));\n  }\n\n  /**\n   * Merges the values of the `INVALID_ATTRS` static for the whole hierarchy of\n   * the current instance.\n   * @protected\n   */\n  mergeInvalidAttrs_() {\n    core.mergeSuperClassesProperty(this.constructor, 'INVALID_ATTRS', function(values) {\n      return array.flatten(values).reduce(function(merged, val) {\n        if (val) {\n          merged[val] = true;\n        }\n        return merged;\n      }, {});\n    });\n  }\n\n  /**\n   * Removes the requested attribute.\n   * @param {string} name The name of the attribute.\n   */\n  removeAttr(name) {\n    this.attrsInfo_[name] = null;\n    delete this[name];\n  }\n\n  /**\n   * Schedules an attribute change batch event to be emitted asynchronously.\n   * @param {!Object} attrChangeData Information about an attribute's update.\n   * @protected\n   */\n  scheduleBatchEvent_(attrChangeData) {\n    if (!this.scheduledBatchData_) {\n      async.nextTick(this.emitBatchEvent_, this);\n      this.scheduledBatchData_ = {\n        changes: {}\n      };\n    }\n\n    var name = attrChangeData.attrName;\n    var changes = this.scheduledBatchData_.changes;\n    if (changes[name]) {\n      changes[name].newVal = attrChangeData.newVal;\n    } else {\n      changes[name] = attrChangeData;\n    }\n  }\n\n  /**\n   * Sets the value of all the specified attributes.\n   * @param {!Object.<string,*>} values A map of attribute names to the values they\n   *   should be set to.\n   */\n  setAttrs(values) {\n    var names = Object.keys(values);\n\n    for (var i = 0; i < names.length; i++) {\n      this[names[i]] = values[names[i]];\n    }\n  }\n\n  /**\n   * Sets the value of the specified attribute. This is passed as that attribute's\n   * setter to the `Object.defineProperty` call inside the `addAttr` method.\n   * @param {string} name The name of the attribute.\n   * @param {*} value The new value of the attribute.\n   * @protected\n   */\n  setAttrValue_(name, value) {\n    if (!this.canWrite_(name) || !this.validateAttrValue_(name, value)) {\n      return;\n    }\n\n    var info = this.attrsInfo_[name];\n    var prevVal = this[name];\n    info.value = this.callSetter_(name, value);\n    info.written = true;\n    this.informChange_(name, prevVal);\n  }\n\n  /**\n   * Sets the default value of the requested attribute.\n   * @param {string} name The name of the attribute.\n   * @return {*}\n   */\n  setDefaultValue_(name) {\n    var config = this.attrsInfo_[name].config;\n\n    if (config.value !== undefined) {\n      this[name] = config.value;\n    } else {\n      this[name] = this.callFunction_(config.valueFn);\n    }\n  }\n\n  /**\n   * Sets the initial value of the requested attribute.\n   * @param {string} name The name of the attribute.\n   * @return {*}\n   */\n  setInitialValue_(name) {\n    var info = this.attrsInfo_[name];\n    if (info.initialValue !== undefined) {\n      this[name] = info.initialValue;\n      info.initialValue = undefined;\n    }\n  }\n\n  /**\n   * Checks if we should inform about an attributes update. Updates are ignored\n   * during attribute initialization. Otherwise, updates to primitive values\n   * are only informed when the new value is different from the previous\n   * one. Updates to objects (which includes functions and arrays) are always\n   * informed outside initialization though, since we can't be sure if all of\n   * the internal data has stayed the same.\n   * @param {string} name The name of the attribute.\n   * @param {*} prevVal The previous value of the attribute.\n   * @return {Boolean}\n   */\n  shouldInformChange_(name, prevVal) {\n    var info = this.attrsInfo_[name];\n    return (info.state === Attribute.States.INITIALIZED) &&\n    (core.isObject(prevVal) || prevVal !== this[name]);\n  }\n\n  /**\n   * Validates the attribute's value, which includes calling the validator defined\n   * in the attribute's configuration object, if there is one.\n   * @param {string} name The name of the attribute.\n   * @param {*} value The value to be validated.\n   * @return {Boolean} Flag indicating if value is valid or not.\n   */\n  validateAttrValue_(name, value) {\n    var info = this.attrsInfo_[name];\n\n    return info.state === Attribute.States.INITIALIZING_DEFAULT ||\n      this.callValidator_(name, value);\n  }\n}\n\n/**\n * A list with attribute names that will automatically be rejected as invalid.\n * Subclasses can define their own invalid attributes by setting this static\n * on their constructors, which will be merged together and handled automatically.\n * @type {!Array<string>}\n */\nAttribute.INVALID_ATTRS = ['attrs'];\n\n/**\n * Constants that represent the states that an attribute can be in.\n * @type {!Object}\n */\nAttribute.States = {\n  UNINITIALIZED: 0,\n  INITIALIZING: 1,\n  INITIALIZING_DEFAULT: 2,\n  INITIALIZED: 3\n};\n\nexport default Attribute;\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\nimport Disposable from \"jspm_packages/github/alloyui/core@master/disposable/Disposable\";\n\n/**\n * EventEmitterProxy utility. It's responsible for linking two EventEmitter\n * instances together, emitting events from the first emitter through the\n * second one. That means that listening to a supported event on the target\n * emitter will mean listening to it on the origin emitter as well.\n * @param {EventEmitter | Element} originEmitter Events originated on this emitter\n *   will be fired for the target emitter's listeners as well. Can be either a real\n *   EventEmitter instance or a DOM element.\n * @param {EventEmitter} targetEmitter Event listeners attached to this emitter\n *   will also be triggered when the event is fired by the origin emitter.\n * @param {Object} opt_blacklist Optional blacklist of events that should not be\n *   proxied.\n * @constructor\n * @extends {Disposable}\n */\nclass EventEmitterProxy extends Disposable {\n  constructor(originEmitter, targetEmitter, opt_blacklist) {\n    /**\n     * Map of events that should not be proxied.\n     * @type {Object}\n     * @protected\n     */\n   this.blacklist_ = opt_blacklist || {};\n\n    /**\n     * The origin emitter. This emitter's events will be proxied through the\n     * target emitter.\n     * @type {EventEmitter}\n     * @protected\n     */\n    this.originEmitter_ = originEmitter;\n\n    /**\n     * Holds a map of events from the origin emitter that are already being proxied.\n     * @type {Object}\n     * @protected\n     */\n    this.proxiedEvents_ = {};\n\n    /**\n     * The target emitter. This emitter will emit all events that come from\n     * the origin emitter.\n     * @type {EventEmitter}\n     * @protected\n     */\n    this.targetEmitter_ = targetEmitter;\n\n    this.startProxy_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    var removeFnName = core.isElement(this.originEmitter_) ? 'removeEventListener' : 'removeListener';\n    for (var event in this.proxiedEvents_) {\n      this.originEmitter_[removeFnName](event, this.proxiedEvents_[event]);\n    }\n\n    this.proxiedEvents_ = null;\n    this.originEmitter_ = null;\n    this.targetEmitter_ = null;\n  }\n\n  /**\n   * Proxies the given event from the origin to the target emitter.\n   * @param {string} event\n   */\n  proxyEvent_(event) {\n    if (!this.shouldProxyEvent_(event)) {\n      return;\n    }\n\n    var self = this;\n    this.proxiedEvents_[event] = function() {\n      var args = [event].concat(Array.prototype.slice.call(arguments, 0));\n      self.targetEmitter_.emit.apply(self.targetEmitter_, args);\n    };\n\n    var addFnName = core.isElement(this.originEmitter_) ? 'addEventListener' : 'on';\n    this.originEmitter_[addFnName](event, this.proxiedEvents_[event]);\n  }\n\n  /**\n   * Checks if the given event should be proxied.\n   * @param {string} event\n   * @return {boolean}\n   * @protected\n   */\n  shouldProxyEvent_(event) {\n    return !this.proxiedEvents_[event] && !this.blacklist_[event] &&\n      (!core.isElement(this.originEmitter_) || dom.supportsEvent(this.originEmitter_, event));\n  }\n\n  /**\n   * Starts proxying all events from the origin to the target emitter.\n   * @protected\n   */\n  startProxy_() {\n    this.targetEmitter_.on('newListener', this.proxyEvent_.bind(this));\n  }\n}\n\nexport default EventEmitterProxy;\n","'use strict';\n\nimport Disposable from \"jspm_packages/github/alloyui/core@master/disposable/Disposable\";\n\n/**\n * EventHandler utility. It's useful for easily removing a group of\n * listeners from different EventEmitter instances.\n * @constructor\n * @extends {Disposable}\n */\nclass EventHandler extends Disposable {\n\tconstructor() {\n      /**\n       * An array that holds the added event handles, so the listeners can be\n       * removed later.\n       * @type {Array.<EventHandle>}\n       * @protected\n       */\n      this.eventHandles_ = [];\n\t}\n\n\t/**\n\t * Adds event handles to be removed later through the `removeAllListeners`\n\t * method.\n\t * @param {...(!EventHandle)} var_args\n\t */\n\tadd() {\n\t  for (var i = 0; i < arguments.length; i++) {\n\t    this.eventHandles_.push(arguments[i]);\n\t  }\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t  this.eventHandles_ = null;\n\t}\n\n\t/**\n\t * Removes all listeners that have been added through the `add` method.\n\t */\n\tremoveAllListeners() {\n\t  for (var i = 0; i < this.eventHandles_.length; i++) {\n\t    this.eventHandles_[i].removeListener();\n\t  }\n\n\t  this.eventHandles_ = [];\n\t}\n}\n\nexport default EventHandler;\n","'use strict';\n\nimport array from \"jspm_packages/github/alloyui/core@master/array/array\";\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\nimport features from \"jspm_packages/github/alloyui/core@master/dom/features\";\nimport html from \"jspm_packages/github/alloyui/core@master/html/html\";\nimport object from \"jspm_packages/github/alloyui/core@master/object/object\";\nimport string from \"jspm_packages/github/alloyui/core@master/string/string\";\nimport Attribute from \"jspm_packages/github/alloyui/core@master/attribute/Attribute\";\nimport EventEmitterProxy from \"jspm_packages/github/alloyui/core@master/events/EventEmitterProxy\";\nimport EventHandler from \"jspm_packages/github/alloyui/core@master/events/EventHandler\";\n\n/**\n * Component collects common behaviors to be followed by UI components, such\n * as Lifecycle, bounding box element creation, CSS classes management,\n * events encapsulation and surfaces support. Surfaces are an area of the\n * component that can have information rendered into it. A component\n * manages multiple surfaces. Surfaces are only rendered when its content is\n * modified, representing render performance gains. For each surface, render\n * attributes could be associated, when the render context of a surface gets\n * modified the component Lifecycle re-paints the modified surface\n * automatically.\n *\n * Example:\n *\n * <code>\n * class CustomComponent extends Component {\n *   constructor(config) {\n *     super(config);\n *   }\n *\n *   created() {\n *   }\n *\n *   decorateInternal() {\n *   }\n *\n *   renderInternal() {\n *     this.element.appendChild(this.getSurfaceElement('header'));\n *     this.element.appendChild(this.getSurfaceElement('bottom'));\n *   }\n *\n *   getSurfaceContent(surfaceId) {\n *   }\n *\n *   attached() {\n *   }\n *\n *   detached() {\n *   }\n * }\n *\n * CustomComponent.ATTRS = {\n *   title: { value: 'Title' },\n *   fontSize: { value: '10px' }\n * };\n *\n * CustomComponent.SURFACES = {\n *   header: { renderAttrs: ['title', 'fontSize'] },\n *   bottom: { renderAttrs: ['fontSize'] }\n * };\n * </code>\n *\n * @param {!Object} opt_config An object with the initial values for this component's\n *   attributes.\n * @constructor\n * @extends {Attribute}\n */\nclass Component extends Attribute {\n  constructor(opt_config) {\n    super(opt_config);\n\n    /**\n     * Whether the element is being decorated.\n     * @type {boolean}\n     * @protected\n     */\n    this.decorating_ = false;\n\n    /**\n     * Holds events that were listened through the `delegate` Component function.\n     * @type {EventHandler}\n     * @protected\n     */\n    this.delegateEventHandler_ = null;\n\n    /**\n     * Instance of `EventEmitterProxy` which proxies events from the component's\n     * element to the component itself.\n     * @type {EventEmitterProxy}\n     * @protected\n     */\n    this.elementEventProxy_ = null;\n\n    /**\n     * Whether the element is in document.\n     * @type {boolean}\n     */\n    this.inDocument = false;\n\n    /**\n     * Maps that index the surfaces instances by the surface id.\n     * @type {Object}\n     * @default null\n     * @protected\n     */\n    this.surfaces_ = null;\n\n    /**\n     * Whether the element was rendered.\n     * @type {boolean}\n     */\n    this.wasRendered = false;\n\n    /**\n     * Whether the element was decorated.\n     * @type {boolean}\n     */\n    this.wasDecorated = false;\n\n    core.mergeSuperClassesProperty(this.constructor, 'ELEMENT_CLASSES', this.mergeElementClasses_);\n    core.mergeSuperClassesProperty(this.constructor, 'ELEMENT_TAG_NAME', array.firstDefinedValue);\n    core.mergeSuperClassesProperty(this.constructor, 'SURFACE_TAG_NAME', array.firstDefinedValue);\n    this.addSurfacesFromStaticHint_();\n\n    this.elementEventProxy_ = new EventEmitterProxy(this.element, this);\n    this.delegateEventHandler_ = new EventHandler();\n\n    this.created_();\n  }\n\n  /**\n   * Registers a surface to the component. Surface elements are not\n   * automatically appended to the component element.\n   * @param {string} surfaceId The surface id to be registered.\n   * @param {Object=} opt_config Optional surface configuration.\n   * @chainable\n   */\n  addSurface(surfaceId, opt_config) {\n    this.surfaces_[surfaceId] = opt_config || {};\n    this.cacheSurfaceRenderAttrs_(surfaceId);\n    return this;\n  }\n\n  /**\n   * Registers surfaces to the component. Surface elements are not\n   * automatically appended to the component element.\n   * @param {!Object.<string, Object=>} configs An object that maps the names\n   *     of all the surfaces to be added to their configuration objects.\n   * @chainable\n   */\n  addSurfaces(configs) {\n    for (var surfaceId in configs) {\n      this.addSurface(surfaceId, configs[surfaceId]);\n    }\n    return this;\n  }\n\n  /**\n   * Adds surfaces from super classes static hint.\n   * @protected\n   */\n  addSurfacesFromStaticHint_() {\n    core.mergeSuperClassesProperty(this.constructor, 'SURFACES', this.mergeSurfaces_);\n    this.surfaces_ = {};\n    this.surfacesRenderAttrs_ = {};\n\n    var configs = this.constructor.SURFACES_MERGED;\n    for (var surfaceId in configs) {\n      this.addSurface(surfaceId, object.mixin({}, configs[surfaceId]));\n    }\n  }\n\n  /**\n   * Invokes the attached Lifecycle. When attached, the component element is\n   * appended to the DOM and any other action to be performed must be\n   * implemented in this method, such as, binding DOM events. A component can\n   * be re-attached multiple times.\n   * @param {(string|Element)=} opt_parentElement Optional parent element\n   *     to render the component.\n   * @param {(string|Element)=} opt_siblingElement Optional sibling element\n   *     to render the component before it. Relevant when the component needs\n   *     to be rendered before an existing element in the DOM, e.g.\n   *     `component.render(null, existingElement)`.\n   * @protected\n   * @chainable\n   */\n  attach(opt_parentElement, opt_siblingElement) {\n    if (!this.inDocument) {\n      this.renderElement_(opt_parentElement, opt_siblingElement);\n      this.inDocument = true;\n      this.attached();\n    }\n    return this;\n  }\n\n  /**\n   * Lifecycle. When attached, the component element is appended to the DOM\n   * and any other action to be performed must be implemented in this method,\n   * such as, binding DOM events. A component can be re-attached multiple\n   * times, therefore the undo behavior for any action performed in this phase\n   * must be implemented on the detach phase.\n   */\n  attached() {\n  }\n\n  /**\n   * Caches surface render attributes into a O(k) flat map representation.\n   * Relevant for performance to calculate the surfaces group that were\n   * modified by attributes mutation.\n   * @param {string} surfaceId The surface id to be cached into the flat map.\n   * @protected\n   */\n  cacheSurfaceRenderAttrs_(surfaceId) {\n    var attrs = this.getSurface(surfaceId).renderAttrs;\n    for (var i in attrs) {\n      this.surfacesRenderAttrs_[attrs[i]] = this.surfacesRenderAttrs_[attrs[i]] || {};\n      this.surfacesRenderAttrs_[attrs[i]][surfaceId] = true;\n    }\n  }\n\n  /**\n   * Clears the surfaces content cache.\n   * @protected\n   */\n  clearSurfacesCache_() {\n    for (var surfaceId in this.surfaces_) {\n      this.getSurface(surfaceId).cacheState = Component.Cache.NOT_INITIALIZED;\n    }\n  }\n\n  /**\n   * Compresses the requested html for caching purposes.\n   * @param {string} htmlString The html to be compressed.\n   * @return {string} The compressed html.\n   * @protected\n   */\n  compressHtmlForCache_(htmlString) {\n    return html.compress(htmlString);\n  }\n\n  /**\n   * Computes the cache state for the surface content. If value is string, the\n   * cache state is represented by its hashcode.\n   * @param {Object} value The value to calculate the cache state.\n   * @return {Object} The computed cache state.\n   * @protected\n   */\n  computeSurfaceCacheState_(value) {\n    if (core.isString(value)) {\n      if (features.checkAttrOrderChange()) {\n        value = this.convertHtmlToBrowserFormat_(value);\n      }\n      return string.hashCode(value);\n    }\n    return Component.Cache.NOT_CACHEABLE;\n  }\n\n  /**\n   * Computes the cache state for the surface content based on the decorated\n   * DOM element. The innerHTML of the surface element is read and compressed\n   * in order to minimize mismatches caused by breaking spaces or HTML\n   * formatting differences that does not affect the content structure.\n   * @protected\n   */\n  computeSurfacesCacheStateFromDom_() {\n    for (var surfaceId in this.surfaces_) {\n      var surface = this.getSurface(surfaceId);\n      surface.cacheState = this.computeSurfaceCacheState_(\n        this.compressHtmlForCache_(this.getSurfaceElement(surfaceId).innerHTML)\n      );\n    }\n  }\n\n  /**\n   * Converts the given html string to the format the current browser uses\n   * when html is rendered. This is done by rendering the html in a temporary\n   * element, and returning its resulting rendered html.\n   * @param {string} htmlString The html to be converted.\n   * @return {string}\n   * @protected\n   */\n  convertHtmlToBrowserFormat_(htmlString) {\n    var element = document.createElement('div');\n    dom.append(element, htmlString);\n    return element.innerHTML;\n  }\n\n  /**\n   * Lifecycle. Creation phase of the component happens once after the\n   * component is instantiated, therefore its the initial phase of the\n   * component Lifecycle. Be conscious about actions performed in this phase\n   * to not compromise instantiation time with operations that can be\n   * postponed to further phases. It's recommended to bind component custom\n   * events in this phase, in contrast to DOM events that must be bind on\n   * attach phase.\n   */\n  created() {\n  }\n\n  /**\n   * Creates the surface element with its id namespaced to the component id.\n   * @param {string} surfaceElementId The id of the element for the surface to be\n   *   created.\n   * @return {Element} The surface element.\n   * @protected\n   */\n  createSurfaceElement_(surfaceElementId) {\n    var el = document.createElement(this.constructor.SURFACE_TAG_NAME_MERGED);\n    el.id = surfaceElementId;\n    return el;\n  }\n\n  /**\n   * Lifecycle. Internal implementation for decoration. Any extra operation\n   * necessary to prepare the component DOM must be implemented in this phase.\n   */\n  decorateInternal() {\n  }\n\n  /**\n   * Listens to a delegate event on the component's element.\n   * @param {string} eventName The name of the event to listen to.\n   * @param {string} selector The selector that matches the child elements that\n   *   the event should be triggered for.\n   * @param {!function(!Object)} callback Function to be called when the event is\n   *   triggered. It will receive the normalized event object.\n   * @return {!DomEventHandle} Can be used to remove the listener.\n   */\n  delegate(eventName, selector, callback) {\n    var handle = dom.delegate(this.element, eventName, selector, callback);\n    this.delegateEventHandler_.add(handle);\n    return handle;\n  }\n\n  /**\n   * Invokes the detached Lifecycle. When detached, the component element is\n   * removed from the DOM and any other action to be performed must be\n   * implemented in this method, such as, unbinding DOM events. A component\n   * can be detached multiple times.\n   * @chainable\n   */\n  detach() {\n    if (this.inDocument) {\n      this.element.parentNode.removeChild(this.element);\n      this.inDocument = false;\n      this.detached();\n    }\n    return this;\n  }\n\n  /**\n   * Lifecycle. When detached, the component element is removed from the DOM\n   * and any other action to be performed must be implemented in this method,\n   * such as, unbinding DOM events. A component can be detached multiple\n   * times, therefore the undo behavior for any action performed in this phase\n   * must be implemented on the attach phase.\n   */\n  detached() {\n  }\n\n  /**\n   * Internal implementation for the creation phase of the component.\n   * @protected\n   */\n  created_() {\n    this.on('attrsChanged', this.handleAttributesChanges_);\n    this.created();\n  }\n\n  /**\n   * Lifecycle. Creates the component using existing DOM elements. Often the\n   * component can be created using existing elements in the DOM to leverage\n   * progressive enhancement. Any extra operation necessary to prepare the\n   * component DOM must be implemented in this phase. Decorate phase replaces\n   * render phase.\n   *\n   * Decoration Lifecycle:\n   *   decorate - Decorate is manually called.\n   *   decorateInternal - Internal implementation for decoration happens.\n   *   render surfaces - All surfaces content are rendered.\n   *   attribute synchronization - All synchronization methods are called.\n   *   attach - Attach Lifecycle is called.\n   * @chainable\n   */\n  decorate() {\n    if (this.inDocument) {\n      throw new Error(Component.Error.ALREADY_RENDERED);\n    }\n    this.decorating_ = true;\n\n    this.decorateInternal();\n    this.computeSurfacesCacheStateFromDom_(); // TODO(edu): This optimization seems worth it, analyze it.\n    this.renderSurfacesContent_(this.surfaces_); // TODO(edu): Sync surfaces on decorate?\n\n    this.syncAttrs_(this.getAttrNames());\n\n    this.attach();\n\n    this.decorating_ = false;\n    this.wasDecorated = true;\n    this.wasRendered = true;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.detach();\n\n    this.elementEventProxy_.dispose();\n    this.elementEventProxy_ = null;\n\n    this.delegateEventHandler_.removeAllListeners();\n    this.delegateEventHandler_ = null;\n\n    this.surfaces_ = null;\n    this.surfacesRenderAttrs_ = null;\n    super.disposeInternal();\n  }\n\n  /**\n   * Fires attributes synchronization changes for attributes.\n   * @param {Object.<string, Object>} changes Object containing the attribute\n   *     name as key and an object with newVal and prevVal as value.\n   * @protected\n   */\n  syncAttrs_(attrsName) {\n    for (var i in attrsName) {\n      this.fireAttrChange_(attrsName[i]);\n    }\n  }\n\n  /**\n   * Fires attributes synchronization changes for attributes.\n   * @param {Object.<string, Object>} changes Object containing the attribute\n   *     name as key and an object with newVal and prevVal as value.\n   * @protected\n   */\n  syncAttrsFromChanges_(changes) {\n    for (var attr in changes) {\n      this.fireAttrChange_(attr, changes[attr]);\n    }\n  }\n\n  /**\n   * Fires attribute synchronization change for the attribute.\n   * @param {Object.<string, Object>} change Object containing newVal and\n   *     prevVal keys.\n   * @protected\n   */\n  fireAttrChange_(attr, opt_change) {\n    var fn = this['sync' + attr.charAt(0).toUpperCase() + attr.slice(1)];\n    if (core.isFunction(fn)) {\n      if (!opt_change) {\n        opt_change = {\n          newVal: this[attr],\n          prevVal: undefined\n        };\n      }\n      fn.call(this, opt_change.newVal, opt_change.prevVal);\n    }\n  }\n\n  /**\n   * Gets surfaces that got modified by the specified attributes changes.\n   * @param {Object.<string, Object>} changes Object containing the attribute\n   *     name as key and an object with newVal and prevVal as value.\n   * @return {Object.<string, boolean>} Object containing modified surface ids\n   *     as key and true as value.\n   */\n  getModifiedSurfacesFromChanges_(changes) {\n    var surfaces = [];\n    for (var attr in changes) {\n      surfaces.push(this.surfacesRenderAttrs_[attr]);\n    }\n    return object.mixin.apply(null, surfaces);\n  }\n\n  /**\n   * Gets surface configuration object. If surface is not registered returns\n   * null.\n   * @param {string} surfaceId The surface id.\n   * @return {?Object} The surface configuration object.\n   */\n  getSurface(surfaceId) {\n    return this.surfaces_[surfaceId] || null;\n  }\n\n  /**\n   * Gets the content for the requested surface. Should be implemented by subclasses.\n   * @param {string} surfaceId The surface id.\n   * @return {Object|string} The content to be rendered.\n   */\n  getSurfaceContent() {\n  }\n\n  /**\n   * Gets the content for the requested surface. By default this just calls\n   * `getSurfaceContent`, but can be overriden to add more behavior (check\n   * `SoyComponent` for an example).\n   * @param {string} surfaceId The surface id.\n   * @return {Object|string} The content to be rendered.\n   * @protected\n   */\n  getSurfaceContent_(surfaceId) {\n    return this.getSurfaceContent(surfaceId);\n  }\n\n  /**\n   * Queries from the document or creates an element for the surface. Surface\n   * elements have its surface id namespaced to the component id, e.g. for a\n   * component with id `gallery` and a surface with id `pictures` the surface\n   * element will be represented by the id `gallery-pictures`. Surface\n   * elements must also be appended to the component element.\n   * @param {string} surfaceId The surface id.\n   * @return {Element} The surface element or null if surface not registered.\n   */\n  getSurfaceElement(surfaceId) {\n    var surface = this.getSurface(surfaceId);\n    if (!surface) {\n      return null;\n    }\n    if (!surface.element) {\n      var surfaceElementId = this.makeSurfaceId_(surfaceId);\n      surface.element = document.getElementById(surfaceElementId) ||\n        this.element.querySelector('#' + surfaceElementId) ||\n      this.createSurfaceElement_(surfaceElementId);\n    }\n    return surface.element;\n  }\n\n  /**\n   * A map of surface ids to the respective surface object.\n   * @return {!Object}\n   */\n  getSurfaces() {\n    return this.surfaces_;\n  }\n\n  /**\n   * Handles attributes batch changes. Responsible for surface mutations and\n   * attributes synchronization.\n   * @param {Event} event\n   * @protected\n   */\n  handleAttributesChanges_(event) {\n    if (this.inDocument) {\n      this.renderSurfacesContent_(this.getModifiedSurfacesFromChanges_(event.changes));\n    }\n    this.syncAttrsFromChanges_(event.changes);\n  }\n\n  /**\n   * Makes an unique id for the component.\n   * @return {string} Unique id.\n   * @protected\n   */\n  makeId_() {\n    return 'aui_c_' + core.getUid(this);\n  }\n\n  /**\n   * Makes the id for the surface scoped by the component.\n   * @param {string} surfaceId The surface id.\n   * @return {string}\n   * @protected\n   */\n  makeSurfaceId_(surfaceId) {\n    return this.id + '-' + surfaceId;\n  }\n\n  /**\n   * Merges an array of values for the ELEMENT_CLASSES property into a single object.\n   * @param {!Array.<string>} values The values to be merged.\n   * @return {!string} The merged value.\n   * @protected\n   */\n  mergeElementClasses_(values) {\n    return values.filter(function(val) {\n      return val;\n    }).join(' ');\n  }\n\n  /**\n   * Merges an array of values for the SURFACES property into a single object.\n   * @param {!Array} values The values to be merged.\n   * @return {!Object} The merged value.\n   * @protected\n   */\n  mergeSurfaces_(values) {\n    return object.mixin.apply(null, [{}].concat(values.reverse()));\n  }\n\n  /**\n   * Unregisters a surface and removes its element from the DOM.\n   * @param {string} surfaceId The surface id.\n   * @chainable\n   */\n  removeSurface(surfaceId) {\n    var el = this.getSurfaceElement(surfaceId);\n    if (el && el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n    delete this.surfaces_[surfaceId];\n    return this;\n  }\n\n  /**\n   * Lifecycle. Renders the component into the DOM. Render phase replaces\n   * decorate phase, without progressive enhancement support.\n   *\n   * Render Lifecycle:\n   *   render - Decorate is manually called.\n   *   renderInternal - Internal implementation for rendering happens.\n   *   render surfaces - All surfaces content are rendered.\n   *   attribute synchronization - All synchronization methods are called.\n   *   attach - Attach Lifecycle is called.\n   *\n   * @param {(string|Element)=} opt_parentElement Optional parent element\n   *     to render the component.\n   * @param {(string|Element)=} opt_siblingElement Optional sibling element\n   *     to render the component before it. Relevant when the component needs\n   *     to be rendered before an existing element in the DOM, e.g.\n   *     `component.render(null, existingElement)`.\n   * @chainable\n   */\n  render(opt_parentElement, opt_siblingElement) {\n    if (this.wasRendered) {\n      throw new Error(Component.Error.ALREADY_RENDERED);\n    }\n\n    this.renderInternal();\n    this.clearSurfacesCache_();\n    this.renderSurfacesContent_(this.surfaces_);\n\n    this.syncAttrs_(this.getAttrNames());\n\n    this.attach(opt_parentElement, opt_siblingElement);\n\n    this.wasRendered = true;\n\n    return this;\n  }\n\n  /**\n   * Renders the component element into the DOM.\n   * @param {(string|Element)=} opt_parentElement Optional parent element\n   *     to render the component.\n   * @param {(string|Element)=} opt_siblingElement Optional sibling element\n   *     to render the component before it. Relevant when the component needs\n   *     to be rendered before an existing element in the DOM, e.g.\n   *     `component.render(null, existingElement)`.\n   * @protected\n   */\n  renderElement_(opt_parentElement, opt_siblingElement) {\n    this.element.id = this.id;\n    if (opt_siblingElement || !this.element.parentNode) {\n      var parent = dom.toElement(opt_parentElement) || document.body;\n      parent.insertBefore(this.element, dom.toElement(opt_siblingElement));\n    }\n  }\n\n  /**\n   * Lifecycle. Internal implementation for rendering. Any extra operation\n   * necessary to prepare the component DOM must be implemented in this phase.\n   */\n  renderInternal() {\n  }\n\n  /**\n   * Render content into a surface. If the specified content is the same of\n   * the current surface content, nothing happens. If the surface cache state\n   * is not initialized or the content is not eligible for cache or content is\n   * different, the surfaces re-renders. It's not recommended to use this\n   * method directly since surface content can be provided by\n   * `getSurfaceContent(surfaceId)`.\n   * @param {string} surfaceId The surface id.\n   * @param {Object|string} content The content to be rendered.\n   */\n  renderSurfaceContent(surfaceId, content) {\n    if (core.isDefAndNotNull(content)) {\n      var surface = this.getSurface(surfaceId);\n      var cacheState = this.computeSurfaceCacheState_(content);\n\n      surface.cacheMiss = cacheState === Component.Cache.NOT_INITIALIZED ||\n        cacheState === Component.Cache.NOT_CACHEABLE ||\n        cacheState !== surface.cacheState;\n      if (surface.cacheMiss) {\n        this.replaceSurfaceContent_(surfaceId, content);\n      }\n      surface.cacheState = cacheState;\n    }\n  }\n\n  /**\n   * Renders all surfaces contents ignoring the cache.\n   * @param {Object.<string, Object=>} surfaces Object map where the key is\n   *     the surface id and value the optional surface configuration.\n   * @protected\n   */\n  renderSurfacesContent_(surfaces) {\n    for (var surfaceId in surfaces) {\n      this.renderSurfaceContent(surfaceId, this.getSurfaceContent_(surfaceId));\n    }\n  }\n\n  /**\n   * Replaces the content of a surface with a new one.\n   * @param {string} surfaceId The surface id.\n   * @param {Element|string} content The content to be rendered.\n   * @protected\n   */\n  replaceSurfaceContent_(surfaceId, content) {\n    var el = this.getSurfaceElement(surfaceId);\n    dom.removeChildren(el);\n    dom.append(el, content);\n  }\n\n  /**\n   * Setter logic for element attribute.\n   * @param {string|Element} val\n   * @return {Element}\n   * @protected\n   */\n  setterElementFn_(val) {\n    var element = dom.toElement(val);\n    if (!element) {\n      element = this.valueElementFn_();\n    }\n    return element;\n  }\n\n  /**\n   * Attribute synchronization logic for elementClasses attribute.\n   * @param {string} newVal\n   * @param {string} prevVal\n   */\n  syncElementClasses(newVal, prevVal) {\n    var classesToAdd = this.constructor.ELEMENT_CLASSES_MERGED;\n    if (newVal) {\n      classesToAdd = classesToAdd + ' ' + newVal;\n    }\n    if (prevVal) {\n      dom.removeClasses(this.element, prevVal.split(' '));\n    }\n    dom.addClasses(this.element, classesToAdd.split(' '));\n  }\n\n  /**\n   * Validator logic for `children` element.\n   * @param {*} val\n   * @return {boolean}\n   * @protected\n   */\n  validatorChildrenFn_(val) {\n    return (val instanceof Array) && val.every(function(component) {\n      return component instanceof Component;\n    });\n  }\n\n  /**\n   * Validator logic for element attribute.\n   * @param {string|Element} val\n   * @return {boolean} True if val is a valid element.\n   * @protected\n   */\n  validatorElementFn_(val) {\n    return core.isElement(val) || core.isString(val);\n  }\n\n  /**\n   * Validator logic for elementClasses attribute.\n   * @param {string} val\n   * @return {Boolean} True if val is a valid element classes.\n   * @protected\n   */\n  validatorElementClassesFn_(val) {\n    return core.isString(val);\n  }\n\n  /**\n   * Validator logic for id attribute.\n   * @param {string} val\n   * @return {Boolean} True if val is a valid id.\n   * @protected\n   */\n  validatorIdFn_(val) {\n    return core.isString(val);\n  }\n\n  /**\n   * Provides the default value for element attribute.\n   * @return {Element} The element.\n   * @protected\n   */\n  valueElementFn_() {\n    return document.createElement(this.constructor.ELEMENT_TAG_NAME_MERGED);\n  }\n\n  /**\n   * Provides the default value for id attribute.\n   * @return {string} The id.\n   * @protected\n   */\n  valueIdFn_() {\n    return this.element.id || this.makeId_();\n  }\n}\n\n/**\n * Component attributes definition.\n * @type {Object}\n * @static\n */\nComponent.ATTRS = {\n  /**\n   * Child components passed to this component.\n   * @type {Array<Component>}\n   */\n  children: {\n    validator: 'validatorChildrenFn_',\n    valueFn: function() {\n      return [];\n    }\n  },\n\n  /**\n   * Component element bounding box.\n   * @type {Element}\n   * @initOnly\n   */\n  element: {\n    initOnly: true,\n    setter: 'setterElementFn_',\n    validator: 'validatorElementFn_',\n    valueFn: 'valueElementFn_'\n  },\n\n  /**\n   * CSS classes to be applied to the element.\n   * @type {Array.<string>}\n   */\n  elementClasses: {\n    validator: 'validatorElementClassesFn_'\n  },\n\n  /**\n   * Component element id. If not specified will be generated.\n   * @type {string}\n   * @initOnly\n   */\n  id: {\n    initOnly: true,\n    validator: 'validatorIdFn_',\n    valueFn: 'valueIdFn_'\n  }\n};\n\n/**\n * CSS classes to be applied to the element.\n * @type {string}\n * @protected\n * @static\n */\nComponent.ELEMENT_CLASSES = 'component';\n\n/**\n * Element tag name is a string that specifies the type of element to be\n * created. The nodeName of the created element is initialized with the\n * value of tag name.\n * @type {string}\n * @default div\n * @protected\n * @static\n */\nComponent.ELEMENT_TAG_NAME = 'div';\n\n/**\n * Surface tag name is a string that specifies the type of element to be\n * created for the surfaces. The nodeName of the created element is\n * initialized with the value of tag name.\n * @type {string}\n * @default div\n * @protected\n * @static\n */\nComponent.SURFACE_TAG_NAME = 'div';\n\n/**\n * Cache states for the component.\n * @enum {string}\n */\nComponent.Cache = {\n  /**\n   * Cache is not allowed for this state.\n   */\n  NOT_CACHEABLE: -1,\n\n  /**\n   * Cache not initialized.\n   */\n  NOT_INITIALIZED: -2\n};\n\n/**\n * Errors thrown by the component.\n * @enum {string}\n */\nComponent.Error = {\n  /**\n   * Error when the component is already rendered and another render attempt\n   * is made.\n   */\n  ALREADY_RENDERED: 'Component already rendered'\n};\n\n/**\n * A list with attribute names that will automatically be rejected as invalid.\n * @type {!Array<string>}\n */\nComponent.INVALID_ATTRS = ['componentName', 'components', 'elementContent', 'ref'];\n\nexport default Component;\n","'use strict';\n\n/**\n * The component registry is used to register components, so they can\n * be accessible by name.\n * @type {Object}\n */\nclass ComponentRegistry {\n  /**\n   * Gets the constructor function for the given component name, or\n   * undefined if it hasn't been registered yet.\n   * @param {string} name The component's name.\n   * @return {?function}\n   * @static\n   */\n  static getConstructor(name) {\n    var constructorFn = ComponentRegistry.components_[name];\n    if (!constructorFn) {\n      console.error(\n        'There\\'s no constructor registered for the component ' +\n        'named ' + name + '. Components need to be registered via ' +\n        'ComponentRegistry.register.'\n      );\n    }\n    return constructorFn;\n  }\n\n  /**\n   * Registers a component.\n   * @param {string} name The component's name.\n   * @param {string} constructorFn The component's constructor function.\n   * @static\n   */\n  static register(name, constructorFn) {\n    ComponentRegistry.components_[name] = constructorFn;\n    constructorFn.NAME = name;\n    constructorFn.TEMPLATES = ComponentRegistry.Templates[name];\n  }\n}\n\n/**\n * Holds all registered components, indexed by their names.\n * @type {!Object<string, function()>}\n * @protected\n * @static\n */\nComponentRegistry.components_ = {};\n\n/**\n * Holds all registered component templates, indexed by component names.\n * Soy files automatically add their templates to this object when imported.\n * @type {!Object<string, !Object<string, !function()>>}\n * @static\n */\nComponentRegistry.Templates = {};\n\nexport default ComponentRegistry;\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nimport Disposable from \"jspm_packages/github/alloyui/core@master/disposable/Disposable\";\n\nclass ComponentCollector extends Disposable {\n  constructor(element) {\n    super();\n\n    /**\n     * Holds the extracted components, indexed by id.\n     * @type {!Object<string, !Component>}\n     * @protected\n     */\n    this.components_ = {};\n\n    /**\n     * DOM element to search for component placeholders in.\n     * @type {!Element}\n     * @protected\n     */\n    this.element_ = element;\n\n    /**\n     * Holds a map of component ids that indicate if each component has already\n     * been extracted as a subcomponent on this call to `extractComponents`.\n     * @type {!Object<string, boolean>}\n     * @protected\n     */\n    this.extractedSubComponents_ = {};\n\n    /**\n     * Holds the root extracted components (that is, components that are\n     * not children of other extracted components), indexed by id.\n     * @type {!Object<string, !Component>}\n     * @protected\n     */\n    this.rootComponents_ = {};\n\n    /**\n     * Flag indicating if new components should be decorated instead of\n     * rendered.\n     * @type {boolean}\n     * @protected\n     */\n    this.shouldDecorate_ = false;\n  }\n\n  /**\n   * Creates a component instance.\n   * @param {string} id The component id.\n   * @param {string} name The component name.\n   * @param {!Object} data The component config data.\n   * @return {!Component} The created component instance.\n   * @protected\n   */\n  createComponent_(id, name, data) {\n    var ConstructorFn = ComponentRegistry.getConstructor(name);\n    data.element = data.element ? data.element : '#' + id;\n    this.components_[id] = new ConstructorFn(data);\n    return this.components_[id];\n  }\n\n  /**\n   * Creates a root component instance.\n   * @param {string} id The component id.\n   * @param {string} name The component name.\n   * @param {!Object} data The component config data.\n   * @param {Element} element The component's element.\n   * @protected\n   */\n  createRootComponent_(id, name, data, element) {\n    data.element = element;\n    this.rootComponents_[id] = this.createComponent_(id, name, data);\n\n    if (this.shouldDecorate_ && element.childNodes.length > 0) {\n      this.rootComponents_[id].decorate();\n    } else {\n      this.rootComponents_[id].render();\n    }\n  }\n\n  /**\n   * Gets all the extracted components.\n   * @return {!Array<!Component>}\n   */\n  getComponents() {\n    return this.components_;\n  }\n\n  /**\n   * Gets all the root extracted components.\n   * @return {!Array<!Component>}\n   */\n  getRootComponents() {\n    return this.rootComponents_;\n  }\n\n  /**\n   * Extracts components according, looking for elements with the appropriate\n   * ids on the document, and creating component instances tied to those.\n   * @param {!Object<string, !Object>} componentData An object with creation\n   *   data for components that may be found inside the element, indexed by\n   *   their ids.\n   */\n  extractComponents(componentData) {\n    var id;\n    this.extractedSubComponents_ = {};\n\n    for (id in componentData) {\n      this.extractSubcomponents(componentData[id], componentData);\n    }\n    for (id in componentData) {\n      if (!this.extractedSubComponents_[id]) {\n        var element = document.getElementById(id) || this.element_.querySelector('#' + id);\n        if (element) {\n          this.extractRootComponent_(element, componentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * Extracts a component from the given element.\n   * @param {!Element} element Element that represents a component that should\n   *   be extracted.\n   * @param {!Object<string, !Object>} componentData An object with creation\n   *   data for components that may be found inside the element, indexed by\n   *   their ids.\n   * @protected\n   */\n  extractRootComponent_(element, componentData) {\n    var id = element.id;\n    var data = componentData[id];\n\n    if (this.components_[id]) {\n      this.updateRootComponent_(id, data.data, element);\n    } else {\n      this.createRootComponent_(id, data.componentName, data.data, element);\n    }\n  }\n\n  /**\n   * Handles a subcomponent, creating it for the first time or updating it in\n   * case it doesn't exist yet.\n   * @param {!Object} data The subcomponent's template call data.\n   * @param {!Object<string, !Object>} componentData An object with creation\n   *   data for components that may be found inside the element, indexed by\n   *   their ids.\n   * @return {!Component} The subcomponent's instance.\n   * @protected\n   */\n  extractSubcomponent_(data, componentData) {\n    this.extractSubcomponents(data, componentData);\n\n    var id = data.data.id;\n    var component = this.components_[id];\n    if (component) {\n      component.setAttrs(data.data);\n    } else {\n      component = this.createComponent_(id, data.componentName, data.data);\n      delete this.rootComponents_[id];\n    }\n    this.extractedSubComponents_[id] = true;\n    return component;\n  }\n\n  /**\n   * Converts values in the given data object to arrays of components, when\n   * possible.\n   * @param {!Object} data The subcomponent's template call data.\n   * @param {!Object<string, !Object>} componentData An object with creation\n   *   data for components that may be found inside the element, indexed by\n   *   their ids.\n   */\n  extractSubcomponents(data, componentData) {\n    for (var key in data.data) {\n      if (this.shouldExtractSubcomponents_(data.data[key])) {\n        data.data[key] = this.extractSubcomponentsFromString_(data.data[key], componentData);\n      }\n    }\n  }\n\n  /**\n   * Handles the given string of rendered templates, converting them to\n   * component instances.\n   * @param {string} renderedComponents Rendered components.\n   * @param {!Object<string, !Object>} componentData An object with creation\n   *   data for components that may be found inside the element, indexed by\n   *   their ids.\n   * @return {string|!Array<!Component>} [description]\n   * @protected\n   */\n  extractSubcomponentsFromString_(renderedComponents, componentData) {\n    var components = [];\n    var frag = dom.buildFragment(renderedComponents);\n    var ignored = false;\n    for (var i = 0; i < frag.childNodes.length; i++) {\n      var node = frag.childNodes[i];\n      if (core.isElement(node) && node.hasAttribute('data-component') && node.id) {\n        components.push(this.extractSubcomponent_(componentData[node.id], componentData));\n      } else {\n        ignored = true;\n      }\n    }\n\n    if (components.length) {\n      if (ignored) {\n        console.warn(\n          'One or more HTML nodes were ignored when extracting components. ' +\n          'Only nodes with both the id and the data-component attribute set are valid.'\n        );\n      }\n      return components;\n    } else {\n      return renderedComponents;\n    }\n  }\n\n  /**\n   * Sets the flag that indicates if new components should be decorated instead\n   * of rendered.\n   * @param {boolean} shouldDecorate\n   */\n  setShouldDecorate(shouldDecorate) {\n    this.shouldDecorate_ = shouldDecorate;\n  }\n\n  /**\n   * Checks if the given value has sub components that should be extracted.\n   * @param {*} value\n   * @return {boolean}\n   */\n  shouldExtractSubcomponents_(value) {\n    return core.isString(value) && value.indexOf('data-component') !== -1;\n  }\n\n  /**\n   * Updates a root component's data and parentNode.\n   * @param {string} id The component's id.\n   * @param {!Object} data The component's data.\n   * @param {Element} element The element indicating the position the component\n   *   should be at.\n   * @protected\n   */\n  updateRootComponent_(id, data, element) {\n    var component = this.components_[id];\n    if (component.element !== element) {\n      element.parentNode.insertBefore(component.element, element);\n      element.parentNode.removeChild(element);\n    }\n    component.setAttrs(data);\n  }\n}\n\nexport default ComponentCollector;\n","'use strict';\n\nimport Disposable from \"jspm_packages/github/alloyui/core@master/disposable/Disposable\";\n\n/**\n * Collects inline events from a passed element, detaching previously\n * attached events that are not being used anymore.\n * @param {Component} component\n * @constructor\n * @extends {Disposable}\n */\nclass EventsCollector extends Disposable {\n  constructor(component) {\n    super();\n\n    if (!component) {\n      throw new Error('The component instance is mandatory');\n    }\n\n    /**\n     * Holds the component intance.\n     * @type {!Component}\n     * @protected\n     */\n    this.component_ = component;\n\n    /**\n     * Holds the attached delegate event handles, indexed by the css selector.\n     * @type {!Object<string, !DomEventHandle>}\n     * @protected\n     */\n    this.eventHandles_ = {};\n\n    /**\n     * Holds the number of extracted listeners, indexed by the listener's css selector.\n     * @type {!Object<string, number>}\n     * @protected\n     */\n    this.listenerCounts_ = {};\n  }\n\n  /**\n   * Attaches the listener described by the given params, unless it has already\n   * been attached.\n   * @param {string} eventType\n   * @param {string} fnName\n   * @protected\n   */\n  attachListener_(eventType, fnName) {\n    var selector = '[data-on' + eventType + '=\"' + fnName + '\"]';\n    this.listenerCounts_[selector] = (this.listenerCounts_[selector] || 0) + 1;\n    if (!this.eventHandles_[selector]) {\n      var fn = this.component_[fnName].bind(this.component_);\n      this.eventHandles_[selector] = this.component_.delegate(eventType, selector, fn);\n    }\n  }\n\n  /**\n   * Attaches all listeners declared as attributes on the given element and\n   * its children.\n   * @param {string} content\n   */\n  attachListeners(content) {\n    this.listenerCounts_ = {};\n    this.attachListenersFromHtml_(content);\n    this.detachUnusedListeners_();\n  }\n\n  /**\n   * Attaches listeners found in the given html content.\n   * @param {string} content\n   * @protected\n   */\n  attachListenersFromHtml_(content) {\n    var regex = /data-on([a-z]+)=['|\"](\\w+)['|\"]/g;\n    var match = regex.exec(content);\n    while(match) {\n      this.attachListener_(match[1], match[2]);\n      match = regex.exec(content);\n    }\n  }\n\n  /**\n   * Removes all previously attached event listeners to the component.\n   */\n  detachAllListeners() {\n    for (var selector in this.eventHandles_) {\n      if (this.eventHandles_[selector]) {\n        this.eventHandles_[selector].removeListener();\n      }\n    }\n    this.eventHandles_ = {};\n    this.listenerCounts_ = {};\n  }\n\n  /**\n   * Detaches all existing listeners that are not being used anymore.\n   * @protected\n   */\n  detachUnusedListeners_() {\n    for (var selector in this.eventHandles_) {\n      if (!this.listenerCounts_[selector]) {\n        this.eventHandles_[selector].removeListener();\n        this.eventHandles_[selector] = null;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.detachAllListeners();\n    this.component_ = null;\n  }\n}\n\nexport default EventsCollector;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from SoyComponent.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.SoyComponent.\n * @hassoydeltemplate {Component}\n * @hassoydeltemplate {ComponentChildren}\n * @hassoydelcall {ComponentElement}\n * @hassoydelcall {ComponentTemplate}\n */\n\nif (typeof Templates.SoyComponent == 'undefined') { Templates.SoyComponent = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.component = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_ijData.renderChildComponents) ? soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), opt_data.componentName, true)(opt_data, null, opt_ijData)) : soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), opt_data.componentName, true)(soy.$$augmentMap(opt_data, {elementContent: ''}), null, opt_ijData)));\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.component.soyTemplateName = 'Templates.SoyComponent.component';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.__deltemplate_s9_0084916f = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(Templates.SoyComponent.component(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.__deltemplate_s9_0084916f.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s9_0084916f';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Component'), '', 0, Templates.SoyComponent.__deltemplate_s9_0084916f);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.SoyComponent.__deltemplate_s11_26860e4b = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-children-placeholder\" data-component-children=\"\">' + ((opt_ijData.renderChildComponents) ? soy.$$escapeHtml(opt_data.children) : '') + '</div>');\n};\nif (goog.DEBUG) {\n  Templates.SoyComponent.__deltemplate_s11_26860e4b.soyTemplateName = 'Templates.SoyComponent.__deltemplate_s11_26860e4b';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentChildren'), '', 0, Templates.SoyComponent.__deltemplate_s11_26860e4b);\n\n/* jshint ignore:end */\n","'use strict';\n\nimport array from \"jspm_packages/github/alloyui/core@master/array/array\";\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\nimport html from \"jspm_packages/github/alloyui/core@master/html/html\";\nimport object from \"jspm_packages/github/alloyui/core@master/object/object\";\nimport Component from \"jspm_packages/github/alloyui/core@master/component/Component\";\nimport ComponentCollector from \"jspm_packages/github/alloyui/core@master/component/ComponentCollector\";\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nimport EventsCollector from \"jspm_packages/github/alloyui/core@master/component/EventsCollector\";\n\nimport \"jspm_packages/github/alloyui/core@master/soy/SoyComponent.soy\";\n\n/**\n * We need to listen to calls to the SoyComponent template so we can use them to\n * properly instantiate and update child components defined through soy.\n * TODO: Switch to using proper AOP.\n */\nvar originalTemplate = ComponentRegistry.Templates.SoyComponent.component;\n\n/**\n * Special Component class that handles a better integration between soy templates\n * and the components. It allows for automatic rendering of surfaces that have soy\n * templates defined with their names, skipping the call to `getSurfaceContent`.\n * @param {Object} opt_config An object with the initial values for this component's\n *   attributes.\n * @constructor\n * @extends {Component}\n */\nclass SoyComponent extends Component {\n  constructor(opt_config) {\n    core.mergeSuperClassesProperty(this.constructor, 'TEMPLATES', this.mergeTemplates_);\n    super(opt_config);\n\n    /**\n     * Holds a `ComponentCollector` that will extract inner components.\n     * @type {!ComponentCollector}\n     * @protected\n     */\n    this.componentCollector_ = new ComponentCollector(this.element);\n\n    /**\n     * Gets all nested components.\n     * @type {!Array<!Component>}\n     */\n    this.components = null;\n\n    /**\n     * Holds events that were listened through the element.\n     * @type {!EventHandler}\n     * @protected\n     */\n    this.eventsCollector_ = new EventsCollector(this);\n\n    /**\n     * Stores the arguments that were passed to the last call to the\n     * SoyComponent template for each component instance (mapped by its id).\n     * @type {!Object}\n     * @protected\n     */\n    this.componentsInterceptedData_ = {};\n\n    this.addSurfacesFromTemplates_();\n  }\n\n  /**\n   * Adds surfaces for each registered template that is not named `element`.\n   * @protected\n   */\n  addSurfacesFromTemplates_() {\n    var templates = this.constructor.TEMPLATES_MERGED;\n    for (var templateName in templates) {\n      if (templateName !== 'content' &&\n        templateName.substr(0, 13) !== '__deltemplate') {\n\n        var surface = this.getSurface(templateName);\n        if (!surface) {\n          this.addSurface(templateName, {\n            renderAttrs: templates[templateName].params\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   */\n  attach(opt_parentElement, opt_siblingElement) {\n    if (this.decorating_) {\n      // We need to call the element soy template function when the component\n      // is being decorated, even though we won't use its results. This call is\n      // only needed in order for us tointercept the call data for nested components.\n      this.renderElementTemplate();\n      this.componentCollector_.setShouldDecorate(true);\n    }\n\n    this.componentCollector_.extractComponents(this.componentsInterceptedData_);\n    this.componentCollector_.setShouldDecorate(false);\n\n    super.attach(opt_parentElement, opt_siblingElement);\n    this.componentsInterceptedData_ = {};\n    this.attachInlineListeners_();\n\n    return this;\n  }\n\n  /**\n   * Attaches inline listeners to the main element.\n   * @protected\n   */\n  attachInlineListeners_() {\n    this.eventsCollector_.attachListeners(this.element.outerHTML);\n  }\n\n  /**\n   * Overrides the method that compresses html for caching, so that it now\n   * first empties all nested component placeholders before compressing.\n   * @param {string} htmlString The html to be compressed.\n   * @return {string} The compressed html.\n   * @protected\n   * @override\n   */\n  compressHtmlForCache_(htmlString) {\n    htmlString = html.removeElementContent(htmlString, ' data-component');\n    htmlString = html.removeElementContent(htmlString, ' data-component-children');\n    return super.compressHtmlForCache_(htmlString);\n  }\n\n  /**\n   * Calls decorate on all children components, setting their element\n   * attribute to the appropriate element inside the children placeholder.\n   * @param {!Element} placeholder Placeholder where the children should be\n   *   rendered.\n   * @param {!Array<!Component>} children An array of children components.\n   * @return {boolean}\n   */\n  decorateChildren_(placeholder, children) {\n    children.forEach(function(child) {\n      child.decorate();\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   */\n  detach() {\n    this.eventsCollector_.detachAllListeners();\n    super.detach();\n    return this;\n  }\n\n  /**\n   * Gets all nested components.\n   * @return {!Array<!Component>}\n   * @protected\n   */\n  getComponents_() {\n    return this.componentCollector_.getComponents();\n  }\n\n  /**\n   * Overrides the default behavior so that this can automatically render\n   * the appropriate soy template when one exists.\n   * @param {string} surfaceId The surface id.\n   * @return {Object|string} The content to be rendered.\n   * @protected\n   * @override\n   */\n  getSurfaceContent_(surfaceId) {\n    var surfaceTemplate = this.constructor.TEMPLATES_MERGED[surfaceId];\n    if (core.isFunction(surfaceTemplate)) {\n      return this.renderTemplate_(surfaceTemplate);\n    } else {\n      return super.getSurfaceContent_(surfaceId);\n    }\n  }\n\n  /**\n   * Handles a call to the SoyComponent template.\n   * @param {!Object} data The data the template was called with.\n   * @return {string} The original return value of the template.\n   */\n  handleTemplateCall_(data) {\n    var callData = {\n      componentName: data.componentName\n    };\n    callData.data = this.normalizeTemplateCallData_(data);\n    this.componentsInterceptedData_[data.id] = callData;\n    return originalTemplate.apply(originalTemplate, arguments);\n  }\n\n  /**\n   * Merges an array of values for the `TEMPLATES` property into a single object.\n   * @param {!Array} values The values to be merged.\n   * @return {!Object} The merged value.\n   * @protected\n   */\n  mergeTemplates_(values) {\n    return object.mixin.apply(null, [{}].concat(values.reverse()));\n  }\n\n  /**\n   * Normalizes a template's call data, converting special soy objects\n   * into html strings. This function doesn't change the original data\n   * object.\n   * @param {!Object} data\n   * @return {!Object}\n   */\n  normalizeTemplateCallData_(data) {\n    data = object.mixin({}, data, {\n      componentName: null\n    });\n    for (var key in data) {\n      if (data[key] instanceof soydata.SanitizedHtml) {\n        data[key] = data[key].content;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Renders this component's child components, if their placeholder is found.\n   * @protected\n   * TODO(edu): Re-think this part.\n   */\n  renderChildrenComponents_() {\n    var placeholder = this.element.querySelector('#' + this.makeSurfaceId_('children-placeholder'));\n    if (placeholder) {\n      var children = this.children;\n      if (this.shouldDecorateChildren_(placeholder)) {\n        this.decorateChildren_(placeholder, children);\n        return;\n      }\n\n      dom.removeChildren(placeholder);\n      children.forEach(function(child) {\n        if (child.wasRendered) {\n          dom.append(placeholder, child.element);\n        } else {\n          child.render(placeholder);\n        }\n      });\n    }\n  }\n\n  /**\n   * Overrides the behavior of this method to automatically render the element\n   * template if it's defined and to automatically attach listeners to all\n   * specified events by the user in the template. Also handles any calls to\n   * component templates.\n   * @override\n   */\n  renderInternal() {\n    var templateContent = this.renderElementTemplate();\n    if (templateContent) {\n      dom.append(this.element, templateContent);\n    }\n  }\n\n  /**\n   * Overrides the default behavior of `renderSurfaceContent` to also\n   * handle calls to component templates done by the surface's template.\n   * @param {string} surfaceId The surface id.\n   * @param {Object|string} content The content to be rendered.\n   * @override\n   */\n  renderSurfaceContent(surfaceId, content) {\n    super.renderSurfaceContent(surfaceId, content);\n\n    if (this.inDocument) {\n      if (this.getSurface(surfaceId).cacheMiss) {\n        this.componentCollector_.extractComponents(this.componentsInterceptedData_);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderSurfacesContent_(surfaces) {\n    super.renderSurfacesContent_(surfaces);\n\n    if (this.inDocument) {\n      this.setComponentsAttrs_();\n      this.componentsInterceptedData_ = {};\n      this.attachInlineListeners_();\n    }\n    // TODO(edu): Moves assignment to be a getter Attribute instead.\n    this.components = this.getComponents_();\n  }\n\n  /**\n   * Renders the main element's template.\n   * @return {?string} The template's result content, or undefined if the\n   *   template doesn't exist.\n   */\n  renderElementTemplate() {\n    var elementTemplate = this.constructor.TEMPLATES_MERGED.content;\n    if (core.isFunction(elementTemplate)) {\n      return this.renderTemplate_(elementTemplate);\n    }\n  }\n\n  /**\n   * Renders the specified template.\n   * @param {!function()} templateFn\n   * @return {string} The template's result content.\n   */\n  renderTemplate_(templateFn) {\n    ComponentRegistry.Templates.SoyComponent.component = this.handleTemplateCall_.bind(this);\n    var content = templateFn(this, null, {}).content;\n    ComponentRegistry.Templates.SoyComponent.component = originalTemplate;\n    return content;\n  }\n\n  /**\n   * Updates all inner components with their last template call data.\n   * @protected\n   */\n  setComponentsAttrs_() {\n    var rootComponents = this.componentCollector_.getRootComponents();\n    for (var id in rootComponents) {\n      var data = this.componentsInterceptedData_[id];\n      if (data) {\n        this.componentCollector_.extractSubcomponents(data, this.componentsInterceptedData_);\n        if (rootComponents[data.data.id]) {\n          rootComponents[data.data.id].setAttrs(data.data);\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks if children components should be decorated. Returns true when this\n   * component is being decorated and the placeholder contents match the number\n   * of children.\n   * @param {!Element} placeholder Placeholder where the children should be\n   *   rendered.\n   * @return {boolean}\n   */\n  shouldDecorateChildren_(placeholder) {\n    return this.decorating_ && placeholder.childNodes.length > 0;\n  }\n\n  /**\n   * Syncs the component according to the new value of the `children` attribute.\n   */\n  syncChildren(newVal, prevVal) {\n    if (!array.equal(newVal, prevVal || [])) {\n      this.renderChildrenComponents_();\n    }\n  }\n\n  /**\n   * Overrides the default value function for the `id` attribute, so it will\n   * handle the case where `element` is in the middle of its creation, which\n   * means the id should be generated.\n   * @return {string} The id.\n   * @protected\n   * @override\n   */\n  valueIdFn_() {\n    if (!this.element) {\n      return this.makeId_();\n    }\n    return super.valueIdFn_();\n  }\n\n  /**\n   * Provides the default value for element attribute.\n   * @return {Element} The element.\n   * @protected\n   */\n  valueElementFn_() {\n    var templateFn = soy.$$getDelegateFn(this.constructor.NAME, '', true);\n    var rendered = templateFn(this, null, {}).content;\n    if (!rendered) {\n      return super.valueElementFn_();\n    }\n\n    var frag = dom.buildFragment(rendered);\n    var element = frag.childNodes[0];\n\n    // Remove element from fragment, so it won't have a parent. Otherwise,\n    // the `attach` method will think that the element has already been\n    // attached.\n    frag.removeChild(element);\n\n    return element;\n  }\n}\n\n/**\n * The soy templates for this component. Templates that have the same\n * name of a registered surface will be used for automatically rendering\n * it.\n * @type {Object<string, !function(Object):Object>}\n * @protected\n * @static\n */\nSoyComponent.TEMPLATES = {};\n\nexport default SoyComponent;\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport SoyComponent from \"jspm_packages/github/alloyui/core@master/soy/SoyComponent\";\n\nclass Component extends SoyComponent {\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  syncVisible(visible) {\n    this.element.style.display = visible ? null : 'none';\n  }\n}\n\nComponent.ATTRS = {\n  visible: {\n    validator: core.isBoolean,\n    value: true\n  }\n};\n\nexport default Component;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from Modal.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.Modal.\n * @hassoydeltemplate {ComponentElement}\n * @hassoydeltemplate {ComponentTemplate}\n * @hassoydeltemplate {Modal}\n * @hassoydeltemplate {Modal.body}\n * @hassoydeltemplate {Modal.footer}\n * @hassoydeltemplate {Modal.header}\n * @hassoydelcall {Component}\n * @hassoydelcall {ComponentElement}\n * @hassoydelcall {Modal}\n * @hassoydelcall {Modal.body}\n * @hassoydelcall {Modal.footer}\n * @hassoydelcall {Modal.header}\n */\n\nif (typeof Templates.Modal == 'undefined') { Templates.Modal = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.content = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', true)(opt_data, null, opt_ijData) + soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.content.soyTemplateName = 'Templates.Modal.content';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.body = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.body) ? soy.$$escapeHtml(opt_data.body) : '');\n};\nif (goog.DEBUG) {\n  Templates.Modal.body.soyTemplateName = 'Templates.Modal.body';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.footer = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.footer) ? soy.$$escapeHtml(opt_data.footer) : '');\n};\nif (goog.DEBUG) {\n  Templates.Modal.footer.soyTemplateName = 'Templates.Modal.footer';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.header = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml((opt_data.header) ? '<a class=\"modal-close icon-12-close-long\" data-onclick=\"close\"></a>' + soy.$$escapeHtml(opt_data.header) : '');\n};\nif (goog.DEBUG) {\n  Templates.Modal.header.soyTemplateName = 'Templates.Modal.header';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s19_65c2d4d4 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<section id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-body\">' + soy.$$escapeHtml(opt_data.elementContent) + '</section>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s19_65c2d4d4.soyTemplateName = 'Templates.Modal.__deltemplate_s19_65c2d4d4';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', 0, Templates.Modal.__deltemplate_s19_65c2d4d4);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s25_c9897a65 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<footer id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-footer\">' + soy.$$escapeHtml(opt_data.elementContent) + '</footer>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s25_c9897a65.soyTemplateName = 'Templates.Modal.__deltemplate_s25_c9897a65';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', 0, Templates.Modal.__deltemplate_s25_c9897a65);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s31_499dc9aa = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<header id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-header\">' + soy.$$escapeHtml(opt_data.elementContent) + '</header>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s31_499dc9aa.soyTemplateName = 'Templates.Modal.__deltemplate_s31_499dc9aa';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', 0, Templates.Modal.__deltemplate_s31_499dc9aa);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s37_45b138fb = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Modal'}), null, opt_ijData)));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s37_45b138fb.soyTemplateName = 'Templates.Modal.__deltemplate_s37_45b138fb';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), '', 0, Templates.Modal.__deltemplate_s37_45b138fb);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s40_29e4e741 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.Modal.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s40_29e4e741.soyTemplateName = 'Templates.Modal.__deltemplate_s40_29e4e741';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Modal', 0, Templates.Modal.__deltemplate_s40_29e4e741);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s44_df8ef55a = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"modal ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + ((opt_data.elementContent) ? soy.$$escapeHtml(opt_data.elementContent) : '') + '</div>');\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s44_df8ef55a.soyTemplateName = 'Templates.Modal.__deltemplate_s44_df8ef55a';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', 0, Templates.Modal.__deltemplate_s44_df8ef55a);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s54_31c78f9d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal'), 'element', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s54_31c78f9d.soyTemplateName = 'Templates.Modal.__deltemplate_s54_31c78f9d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Modal', 0, Templates.Modal.__deltemplate_s54_31c78f9d);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s56_90747620 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.body'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? Templates.Modal.body(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s56_90747620.soyTemplateName = 'Templates.Modal.__deltemplate_s56_90747620';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.body'), '', 0, Templates.Modal.__deltemplate_s56_90747620);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s62_231e36e7 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.footer'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? Templates.Modal.footer(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s62_231e36e7.soyTemplateName = 'Templates.Modal.__deltemplate_s62_231e36e7';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.footer'), '', 0, Templates.Modal.__deltemplate_s62_231e36e7);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Modal.__deltemplate_s68_b8354b7d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Modal.header'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? Templates.Modal.header(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Modal.__deltemplate_s68_b8354b7d.soyTemplateName = 'Templates.Modal.__deltemplate_s68_b8354b7d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Modal.header'), '', 0, Templates.Modal.__deltemplate_s68_b8354b7d);\n\nTemplates.Modal.body.params = [\"body\"];\nTemplates.Modal.footer.params = [\"footer\"];\nTemplates.Modal.header.params = [\"header\"];\n/* jshint ignore:end */\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\nimport Component from \"lib/scripts/Component\";\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nimport \"lib/scripts/Modal.soy\";\n\n/**\n * Modal component.\n */\nclass Modal extends Component {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  /**\n   * Closes the tooltip.\n   */\n  close() {\n    this.visible = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    dom.exitDocument(this.overlayElement);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncOverlay(overlay) {\n    dom[overlay ? 'enterDocument' : 'exitDocument'](this.overlayElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncVisible(visible) {\n    if (this.overlay) {\n      this.syncOverlay(visible);\n    }\n    super.syncVisible(visible);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  valueOverlayElementFn_() {\n    return dom.buildFragment('<div class=\"overlay\"></div>').firstChild\n  }\n}\n\n/**\n * Default modal elementClasses.\n * @default modal\n * @type {String}\n * @static\n */\nModal.ELEMENT_CLASSES = 'modal';\n\nModal.ATTRS = {\n  /**\n   * Content to be placed inside modal body.\n   * @type {String}\n   */\n  body: {\n    validator: core.isString\n  },\n\n  /**\n   * Modal default elementClasses attribute.\n   * @default centered\n   * @type {String}\n   */\n  elementClasses: {\n    value: 'centered'\n  },\n\n  /**\n   * Content to be placed inside modal footer.\n   * @type {String}\n   */\n  footer: {\n    validator: core.isString\n  },\n\n  /**\n   * Content to be placed inside modal header.\n   * @type {String}\n   */\n  header: {\n    validator: core.isString\n  },\n\n  /**\n   * Whether overlay should be visible when modal is visible.\n   * @type {boolean}\n   * @default true\n   */\n  overlay: {\n    validator: core.isBoolean,\n    value: true\n  },\n\n  /**\n   * Element to be used as overlay.\n   * @type {Element}\n   */\n  overlayElement: {\n    initOnly: true,\n    valueFn: 'valueOverlayElementFn_'\n  }\n};\n\nComponentRegistry.register('Modal', Modal);\n\nexport default Modal;\n","'use strict';\n\nclass math {\n  /**\n     * Tests if a rectangle intersects with another.\n     *\n     * <pre>\n     *  x0y0 --------       x2y2 --------\n     *      |       |           |       |\n     *      -------- x1y1       -------- x3y3\n     * </pre>\n     *\n     * Note that coordinates starts from top to down (y), left to right (x):\n     *\n     * <pre>\n     *      ------> (x)\n     *      |\n     *      |\n     *     (y)\n     * </pre>\n     *\n     * @param {number} x0 Horizontal coordinate of P0.\n     * @param {number} y0 Vertical coordinate of P0.\n     * @param {number} x1 Horizontal coordinate of P1.\n     * @param {number} y1 Vertical coordinate of P1.\n     * @param {number} x2 Horizontal coordinate of P2.\n     * @param {number} y2 Vertical coordinate of P2.\n     * @param {number} x3 Horizontal coordinate of P3.\n     * @param {number} y3 Vertical coordinate of P3.\n     * @return {boolean}\n     */\n    static intersectRect(x0, y0, x1, y1, x2, y2, x3, y3) {\n      return !(x2 > x1 || x3 < x0 || y2 > y1 || y3 < y0);\n    }\n}\n\nexport default math;\n","'use strict';\n\nimport math from \"jspm_packages/github/alloyui/core@master/math/math\";\n\n/**\n * Class with static methods responsible for doing browser position checks.\n */\nclass position {\n  /**\n   * Gets the size of an element and its position relative to the viewport.\n   * @param {!Element} node\n   * @return {!DOMRect} The returned value is a DOMRect object which is the\n   *     union of the rectangles returned by getClientRects() for the element,\n   *     i.e., the CSS border-boxes associated with the element.\n   */\n  static getRegion(node) {\n    return node.getBoundingClientRect();\n  }\n\n  /**\n   * Tests if a region is inside another.\n   * @param {DOMRect} r1\n   * @param {DOMRect} r2\n   * @return {boolean}\n   */\n  static insideRegion(r1, r2) {\n    return (r2.top >= r1.top) && (r2.bottom <= r1.bottom) &&\n              (r2.right <= r1.right) && (r2.left >= r1.left);\n  }\n\n  /**\n   * Tests if a region is inside viewport region.\n   * @param {DOMRect} region\n   * @return {boolean}\n   */\n  static insideViewportRegion(region) {\n    return this.insideRegion(this.getViewportRegion(), region);\n  }\n\n  /**\n   * Computes the intersection region between two regions.\n   * @param {DOMRect} r1\n   * @param {DOMRect} r2\n   * @return {?DOMRect} Intersection region or null if regions doesn't\n   *     intersects.\n   */\n  static intersection(r1, r2) {\n    if (!this.intersectRegion(r1, r2)) {\n      return null;\n    }\n    var bottom = Math.min(r1.bottom, r2.bottom);\n    var right = Math.min(r1.right, r2.right);\n    var left = Math.max(r1.left, r2.left);\n    var top = Math.max(r1.top, r2.top);\n    return {\n      bottom: bottom,\n      height: bottom - top,\n      left: left,\n      right: right,\n      top: top,\n      width: right - left\n    };\n  }\n\n  /**\n   * Tests if a region intersects with another.\n   * @param {DOMRect} r1\n   * @param {DOMRect} r2\n   * @return {boolean}\n   */\n  static intersectRegion(r1, r2) {\n    return math.intersectRect(\n      r1.top, r1.left, r1.bottom, r1.right,\n      r2.top, r2.left, r2.bottom, r2.right);\n  }\n\n  /**\n   * Gets the region of the viewport excluding scrollbar.\n   * @param {Window=} opt_window Optional window element to test.\n   * @return {!DOMRect} The returned value is a simulated DOMRect object which\n   *     is the union of the rectangles returned by getClientRects() for the\n   *     element, i.e., the CSS border-boxes associated with the element.\n   */\n  static getViewportRegion(opt_window) {\n    var region = this.getViewportSize(opt_window);\n    region.bottom = region.height;\n    region.left = 0;\n    region.right = region.width;\n    region.top = 0;\n    return region;\n  }\n\n  /**\n   * Gets the dimensions of the viewport excluding scrollbar.\n   * @param {Window=} opt_window Optional window element to test.\n   * @return {!Object} Object with values 'width' and 'height'.\n   */\n  static getViewportSize(opt_window) {\n    var el = (opt_window || window).document.documentElement;\n    return {\n      height: el.clientHeight,\n      width: el.clientWidth\n    };\n  }\n}\n\nexport default position;\n","'use strict';\n\nimport domPosition from \"jspm_packages/github/alloyui/core@master/dom/position\";\n\n/**\n * Position utility. Computes region or best region to align an element with\n * another. Regions are relative to viewport, make sure to use element with\n * position fixed, or position absolute when the element first positioned\n * parent is the body element.\n */\nclass Position {\n\n  /**\n   * Aligns the element with the best region around alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {!Element} element Element to be aligned.\n   * @param {!Element} alignElement Element to align with.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n   *     The initial position to try. Options `Position.Top`, `Position.Right`,\n   *     `Position.Bottom`, `Position.Left`.\n   * @static\n   */\n  static align(element, alignElement, position) {\n    var bestRegion = this.getAlignBestRegion(element, alignElement, position);\n    var left = bestRegion.left;\n    var top = bestRegion.top;\n\n    var computedStyle = window.getComputedStyle(element, null);\n    if (computedStyle.getPropertyValue('position') !== 'fixed') {\n      var docEl = window.document.documentElement;\n      bestRegion.top += docEl.clientTop + window.pageYOffset;\n      bestRegion.left += docEl.clientLeft + window.pageXOffset;\n    }\n\n    element.style.top = bestRegion.top + 'px';\n    element.style.left = bestRegion.left + 'px';\n  }\n\n  /**\n   * Returns the best region to align element with alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {!Element} element Element to be aligned.\n   * @param {!Element} alignElement Element to align with.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n   *     The initial position to try. Options `Position.Top`, `Position.Right`,\n   *     `Position.Bottom`, `Position.Left`.\n   * @return {DOMRect} Best region to align element.\n   * @static\n   */\n  static getAlignBestRegion(element, alignElement, position) {\n    var bestArea = 0;\n    var bestPosition = position;\n    var bestRegion = this.getAlignRegion(element, alignElement, bestPosition);\n    var tryPosition = bestPosition;\n    var tryRegion = bestRegion;\n\n    for (var i = 0; i < 4;) {\n      if (domPosition.intersectRegion(domPosition.getViewportRegion(), tryRegion)) {\n        var visibleRegion = domPosition.intersection(domPosition.getViewportRegion(), tryRegion);\n        var area = visibleRegion.width * visibleRegion.height;\n        if (area > bestArea) {\n          bestArea = area;\n          bestRegion = tryRegion;\n          bestPosition = tryPosition;\n        }\n        if (domPosition.insideViewportRegion(tryRegion)) {\n          break;\n        }\n      }\n      tryPosition = (position + (++i)) % 4;\n      tryRegion = this.getAlignRegion(element, alignElement, tryPosition);\n    }\n\n    return bestRegion;\n  }\n\n  /**\n   * Returns the region to align element with alignElement. The element is\n   * always aligned in the middle of alignElement axis.\n   * @param {!Element} element Element to be aligned.\n   * @param {!Element} alignElement Element to align with.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} pos\n   *     The position to align. Options `Position.Top`, `Position.Right`,\n   *     `Position.Bottom`, `Position.Left`.\n   * @return {DOMRect} Region to align element.\n   * @static\n   */\n  static getAlignRegion(element, alignElement, position) {\n    var r1 = domPosition.getRegion(alignElement);\n    var r2 = domPosition.getRegion(element);\n    var top = 0;\n    var left = 0;\n\n    switch(position) {\n      case Position.Top:\n        top = r1.top - r2.height;\n        left = r1.left + r1.width/2 - r2.width/2;\n        break;\n      case Position.Right:\n        top = r1.top + r1.height/2 - r2.height/2;\n        left = r1.left + r1.width;\n        break;\n      case Position.Bottom:\n        top = r1.bottom;\n        left = r1.left + r1.width/2 - r2.width/2;\n        break;\n      case Position.Left:\n        top = r1.top + r1.height/2 - r2.height/2;\n        left = r1.left - r2.width;\n        break;\n    }\n\n    return {\n      bottom: top + r2.height,\n      height: r2.height,\n      left: left,\n      right: left + r2.width,\n      top: top,\n      width: r2.width\n    };\n  }\n\n  /**\n   * Checks if specified value is a valid position. Options `Position.Top`,\n   *     `Position.Right`, `Position.Bottom`, `Position.Left`.\n   * @param {Position.Top|Position.Right|Position.Bottom|Position.Left} val\n   * @return {Boolean} Returns true if value is a valid position.\n   * @static\n   */\n  static isValidPosition(val) {\n    return 0 <= val && val <= 3;\n  }\n}\n\n/**\n * Represents the `Position.Top` constant.\n * @type {Number}\n * @default 0\n * @static\n */\nPosition.Top = 0;\n\n/**\n * Represents the `Position.Right` constant.\n * @type {Number}\n * @default 1\n * @static\n */\nPosition.Right = 1;\n\n/**\n * Represents the `Position.Bottom` constant.\n * @type {Number}\n * @default 2\n * @static\n */\nPosition.Bottom = 2;\n\n/**\n * Represents the `Position.Left` constant.\n * @type {Number}\n * @default 3\n * @static\n */\nPosition.Left = 3;\n\nexport default Position;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from Tooltip.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.Tooltip.\n * @hassoydeltemplate {ComponentElement}\n * @hassoydeltemplate {ComponentTemplate}\n * @hassoydeltemplate {Tooltip}\n * @hassoydelcall {Component}\n * @hassoydelcall {ComponentElement}\n * @hassoydelcall {Tooltip}\n */\n\nif (typeof Templates.Tooltip == 'undefined') { Templates.Tooltip = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.content = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(opt_data.content));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.content.soyTemplateName = 'Templates.Tooltip.content';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s77_8d49094e = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'Tooltip'}), null, opt_ijData)));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s77_8d49094e.soyTemplateName = 'Templates.Tooltip.__deltemplate_s77_8d49094e';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), '', 0, Templates.Tooltip.__deltemplate_s77_8d49094e);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s80_606fdd83 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.Tooltip.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s80_606fdd83.soyTemplateName = 'Templates.Tooltip.__deltemplate_s80_606fdd83';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'Tooltip', 0, Templates.Tooltip.__deltemplate_s80_606fdd83);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s84_71828d2a = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<div id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + ((opt_data.elementContent) ? soy.$$escapeHtml(opt_data.elementContent) : '') + '</div>');\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s84_71828d2a.soyTemplateName = 'Templates.Tooltip.__deltemplate_s84_71828d2a';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', 0, Templates.Tooltip.__deltemplate_s84_71828d2a);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.Tooltip.__deltemplate_s94_a8d4319d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Tooltip'), 'element', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.Tooltip.__deltemplate_s94_a8d4319d.soyTemplateName = 'Templates.Tooltip.__deltemplate_s94_a8d4319d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'Tooltip', 0, Templates.Tooltip.__deltemplate_s94_a8d4319d);\n\nTemplates.Tooltip.content.params = [\"content\"];\n/* jshint ignore:end */\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\nimport Component from \"lib/scripts/Component\";\nimport Position from \"lib/scripts/Position\";\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nimport \"lib/scripts/Tooltip.soy\";\n\n/**\n * Tooltip component.\n */\nclass Tooltip extends Component {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  attached() {\n    this.align();\n  }\n\n  /**\n   * Aligns the tooltip with the best region around alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {Element=} opt_alignElement Optional element to align with.\n   */\n  align(opt_alignElement) {\n    this.syncAlignElement(opt_alignElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncAlignElement(alignElement) {\n    if (this.inDocument && alignElement) {\n      Tooltip.Position.align(this.element, alignElement, this.position);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncContent(content) {\n    if (this.inDocument) {\n      dom.removeChildren(this.element);\n      dom.append(this.element, content);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncVisible(visible) {\n    super.syncVisible(visible);\n    this.align();\n  }\n}\n\n/**\n * @inheritDoc\n * @see `Position` class.\n * @static\n */\nTooltip.Position = Position;\n\n/**\n * Default tooltip elementClasses.\n * @default tooltip\n * @type {String}\n * @static\n */\nTooltip.ELEMENT_CLASSES = 'tooltip';\n\n/**\n * Tooltip attrbutes definition.\n * @type {Object}\n * @static\n */\nTooltip.ATTRS = {\n  /**\n   * Element to align tooltip with.\n   * @type {Element}\n   */\n  alignElement: {\n    setter: dom.toElement\n  },\n\n  /**\n   * Content to be placed inside tooltip.\n   * @type {String}\n   */\n  content: {\n    validator: core.isString\n  },\n\n  /**\n   * The position to try alignment. If not possible the best position will be\n   * found.\n   * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n   * @default Position.Bottom\n   */\n  position: {\n    validator: Tooltip.Position.isValidPosition,\n    value: Tooltip.Position.Bottom\n  }\n};\n\nComponentRegistry.register('Tooltip', Tooltip);\n\nexport default Tooltip;\n","/* jshint ignore:start */\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nvar Templates = ComponentRegistry.Templates;\n// This file was automatically generated from TooltipMenu.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Templates.TooltipMenu.\n * @hassoydeltemplate {ComponentElement}\n * @hassoydeltemplate {ComponentTemplate}\n * @hassoydeltemplate {TooltipMenu}\n * @hassoydeltemplate {TooltipMenu.items}\n * @hassoydelcall {Component}\n * @hassoydelcall {ComponentElement}\n * @hassoydelcall {TooltipMenu}\n * @hassoydelcall {TooltipMenu.items}\n */\n\nif (typeof Templates.TooltipMenu == 'undefined') { Templates.TooltipMenu = {}; }\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.content = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.content.soyTemplateName = 'Templates.TooltipMenu.content';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.items = function(opt_data, opt_ignored, opt_ijData) {\n  var output = '';\n  var itemList100 = opt_data.items;\n  var itemListLen100 = itemList100.length;\n  for (var itemIndex100 = 0; itemIndex100 < itemListLen100; itemIndex100++) {\n    var itemData100 = itemList100[itemIndex100];\n    output += '<li class=\"tooltip-menu-item\"><a class=\"tooltip-menu-link\" href=\"' + soy.$$escapeHtmlAttribute(soy.$$filterNormalizeUri(itemData100.href ? itemData100.href : '#')) + '\">' + soy.$$escapeHtml(itemData100.content) + '</a></li>';\n  }\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(output);\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.items.soyTemplateName = 'Templates.TooltipMenu.items';\n}\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s107_cfc546d2 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<nav id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '\" class=\"tooltip-menu ' + soy.$$escapeHtmlAttribute(opt_data.elementClasses ? opt_data.elementClasses : '') + '\" data-component>' + soy.$$escapeHtml(opt_data.elementContent) + '</nav>');\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s107_cfc546d2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s107_cfc546d2';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', 0, Templates.TooltipMenu.__deltemplate_s107_cfc546d2);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s115_c0ab3df3 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml('<ul id=\"' + soy.$$escapeHtmlAttribute(opt_data.id) + '-items\" class=\"tooltip-menu-list\">' + soy.$$escapeHtml(opt_data.elementContent) + '</ul>');\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s115_c0ab3df3.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s115_c0ab3df3';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', 0, Templates.TooltipMenu.__deltemplate_s115_c0ab3df3);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s121_8f8c631d = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$escapeHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('Component'), '', true)(soy.$$augmentMap(opt_data, {componentName: 'TooltipMenu'}), null, opt_ijData)));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s121_8f8c631d.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s121_8f8c631d';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), '', 0, Templates.TooltipMenu.__deltemplate_s121_8f8c631d);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s124_270e148b = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + Templates.TooltipMenu.content(opt_data, null, opt_ijData))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s124_270e148b.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s124_270e148b';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentTemplate'), 'TooltipMenu', 0, Templates.TooltipMenu.__deltemplate_s124_270e148b);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s128_da5bead2 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu'), 'element', true)(opt_data, null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s128_da5bead2.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s128_da5bead2';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('ComponentElement'), 'TooltipMenu', 0, Templates.TooltipMenu.__deltemplate_s128_da5bead2);\n\n\n/**\n * @param {Object.<string, *>=} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object.<string, *>=} opt_ijData\n * @return {!soydata.SanitizedHtml}\n * @suppress {checkTypes}\n */\nTemplates.TooltipMenu.__deltemplate_s130_8278e063 = function(opt_data, opt_ignored, opt_ijData) {\n  return soydata.VERY_UNSAFE.ordainSanitizedHtml(soy.$$getDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), 'element', true)(soy.$$augmentMap(opt_data, {elementContent: soydata.VERY_UNSAFE.$$ordainSanitizedHtmlForInternalBlocks('' + ((opt_ijData.renderChildComponents) ? Templates.TooltipMenu.items(opt_data, null, opt_ijData) : ''))}), null, opt_ijData));\n};\nif (goog.DEBUG) {\n  Templates.TooltipMenu.__deltemplate_s130_8278e063.soyTemplateName = 'Templates.TooltipMenu.__deltemplate_s130_8278e063';\n}\nsoy.$$registerDelegateFn(soy.$$getDelTemplateId('TooltipMenu.items'), '', 0, Templates.TooltipMenu.__deltemplate_s130_8278e063);\n\nTemplates.TooltipMenu.items.params = [\"items\"];\n/* jshint ignore:end */\n","'use strict';\n\nimport core from \"jspm_packages/github/alloyui/core@master/core\";\nimport dom from \"jspm_packages/github/alloyui/core@master/dom/dom\";\nimport Component from \"lib/scripts/Component\";\nimport Position from \"lib/scripts/Position\";\nimport ComponentRegistry from \"jspm_packages/github/alloyui/core@master/component/ComponentRegistry\";\nimport \"lib/scripts/TooltipMenu.soy\";\n\n/**\n * TooltipMenu component.\n */\nclass TooltipMenu extends Component {\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_config) {\n    super(opt_config);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  attached() {\n    this.align();\n  }\n\n  /**\n   * Aligns the tooltip with the best region around alignElement. The best\n   * region is defined by clockwise rotation starting from the specified\n   * `position`. The element is always aligned in the middle of alignElement\n   * axis.\n   * @param {Element=} opt_alignElement Optional element to align with.\n   */\n  align(opt_alignElement) {\n    this.syncAlignElement(opt_alignElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncAlignElement(alignElement) {\n    if (this.inDocument && alignElement) {\n      TooltipMenu.Position.align(this.element, alignElement, this.position);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  syncVisible(visible) {\n    super.syncVisible(visible);\n    this.align();\n  }\n}\n\n/**\n * @inheritDoc\n * @see `Position` class.\n * @static\n */\nTooltipMenu.Position = Position;\n\n/**\n * Default tooltip elementClasses.\n * @default tooltip\n * @type {String}\n * @static\n */\nTooltipMenu.ELEMENT_CLASSES = 'tooltip-menu';\n\n/**\n * TooltipMenu attrbutes definition.\n * @type {Object}\n * @static\n */\nTooltipMenu.ATTRS = {\n  /**\n   * Element to align tooltip with.\n   * @type {Element}\n   */\n  alignElement: {\n    setter: dom.toElement\n  },\n\n  /**\n   * Items to be placed inside tooltip menu. Each item must contain at least a\n   * label key.\n   * @type {!Array.<!object>}\n   */\n  items: {\n    validator: Array.isArray,\n    valueFn: function() {\n      return [];\n    }\n  },\n\n  /**\n   * The position to try alignment. If not possible the best position will be\n   * found.\n   * @type {Position.Top|Position.Right|Position.Bottom|Position.Left}\n   * @default Position.Bottom\n   */\n  position: {\n    validator: TooltipMenu.Position.isValidPosition,\n    value: TooltipMenu.Position.Bottom\n  }\n};\n\nComponentRegistry.register('TooltipMenu', TooltipMenu);\n\nexport default TooltipMenu;\n"],"sourceRoot":"/source/"}